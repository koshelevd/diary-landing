{"version":3,"sources":["services/axios/onboarding.ts","services/slices/statistics-metrics-slice.ts","assets/medal-big-gray.svg","services/slices/achievements-slice.ts","services/axios/settings.ts","services/slices/vacancies-page-slice.ts","services/slices/metrics-slice.ts","services/slices/diary-slice.ts","services/slices/onboarding-slice.ts","services/axios/auth.ts","components/Sub/DataTable/LoadingOverlay/LoadingOverlay.style.js","components/Sub/DataTable/LoadingOverlay/LoadingOverlay.jsx","services/axios/student-vacancies.ts","services/store/middleware.ts","services/store/socketMiddleware.ts","services/store/store.ts","components/App/App.styles.js","utils/useUpdateStudentStatus.ts","components/App/App.jsx","reportWebVitals.js","index.jsx","services/axios/vacancies-page.ts","services/axios/diary.ts","services/store/hooks.ts","services/slices/auth-slice.ts","components/App/App.theme.js","utils/showAchievementsNotifications.tsx","services/axios/metrics.ts","services/slices/app-slice.ts","utils/constants.js","services/slices/student-vacancies-slice.ts","services/slices/websocket-slice.ts","services/axios/achievements.ts"],"names":["getOnboardingBaseData","createAsyncThunk","_","a","rejectWithValue","api","get","API_ONBOARDING_DIRECTORY_ENDPOINT","response","data","typedError","statisticsMetricsSlice","createSlice","name","initialState","isHidden","reducers","changeStatisticsMetricsState","state","action","payload","actions","status","isError","errorInfo","selectedAchievement","image","title","message","open","isSuccess","allAchievements","commonAchievements","preaccelerationAchievements","accelerationAchievements","testPeriodAchievements","communityAchievements","successAchievements","failedAchievements","filteredAllAchievements","filteredCommonAchievements","filteredPreaccelerationAchievements","filteredAccelerationAchievements","filteredTestPeriodAchievements","filteredCommunityAchievements","achievementsSlice","openActiveAchievement","closeActiveAchievement","filterAchievements","filter","item","resetAchievements","extraReducers","builder","addCase","getAchievements","pending","fulfilled","achievementGroups","forEach","group","statuses","required_statuses","stages","stage","uuid","v4","achievement","is_hidden","medal","is_success","success_image","todo_image","condition_text","currentProgress","current_progress","maxProgress","success_condition","length","push","includes","rejected","instance","axios","create","baseURL","process","headers","Accept","withCredentials","interceptors","use","res","err","originalConfig","config","url","API_TOKEN_REFRESH_ENDPOINT","Promise","reject","API_SIGN_IN_ENDPOINT","API_SIGN_UP_ENDPOINT","API_PASSWORD_RECOVERY_ENDPOINT","retry","post","window","location","href","getRows","rawData","result","isOfferedStudents","find","s","job_found","isOtherStudents","id","map","vacanciesPageSlice","filtersJSON","directoriesData","isOpenVacancyPopup","vacancyToArchive","isInfoPopupOpen","vacancyToEdit","vacancies","isLoading","isOpenFoundJobPopup","studentToEdit","isNetworkError","networkError","infoData","rows","updateStatus","updateStudentStatus","rowsCount","setFiltersJSON","setDirectoriesData","setIsOpenVacancyPopup","setVacancyToArchive","setIsInfoPopupOpen","setVacancyToEdit","setVacancies","setIsLoading","setIsOpenFoundJobPopup","setStudentToEdit","resetUpdateStatus","resetUpdateStudentStatus","getVacanciesList","results","count","getDirectories","filters","patchVacancyStatus","updatedRow","newVacancies","findIndex","el","patchStudentStatus","newInfoRows","value","getInfo","notification","funnelStats","eventsStats","metricsSlice","setNotificated","is_notificated","resetMetrics","getNotifications","getStats","all_stats","week_stats","diarySlice","responses","currencies","draggingStatus","responseId","oldStatus","newStatus","responseDate","updateResponseStatus","status_id","response_date","cancelDragging","finishDragging","getResponses","getCurrencies","currency","icon","label","createResponse","patchResponse","deleteResponse","onboardingSlice","baseData","personalInfo","experienceInfo","resumeInfo","setPersonalInfo","setExperienceInfo","setResumeInfo","clearOnboardingInfo","signIn","signUp","signOut","API_SIGN_OUT_ENDPOINT","resetPassword","createPassword","API_CREATE_NEW_PASSWORD_ENDPOINT","getProfile","API_USER_PROFILE_ENDPOINT","postOnboarding","API_PROFILE_ENDPOINT","getStatus","API_USER_STATUS_ENDPOINT","useStyles","makeStyles","root","width","height","backgroundColor","position","justifyContent","alignItems","disabled","display","transition","LoadingOverlay","loading","style","classes","className","color","size","React","getPartnersDirectories","API_PARTNER_DIRECTORY_ENDPOINT","paramsSerializer","params","qs","stringify","arrayFormat","getParams","modifiedParams","URLSearchParams","key","city","append","undefined","dogovor","samo","ip","contract","gph","office","remote","hybrid","dollar","euro","pound","ruble","shekel","new","is_accepted","is_showed","toString","getPartnersVacancies","requestParams","API_HR_PART_VACANCY_STUDENT_ENDPOINT","getExternalVacancies","API_STUDENT_EXTERNAL_VACANCY","getExternalVacancy","getPartnersVacancy","API_HR_PART_ABOUT_VACANCY_STUDENT_ENDPOINT","postPartnersVacancyResponse","API_PARTNER_VACANCY_RESPONSE_ENDPOINT","createVacancyResponse","API_VACANCY_RESPONSE_ENDPOINT","external_vacancy","authMiddleware","dispatch","getState","next","type","startsWith","authState","auth","stateToSave","isLoggedIn","role","profile","localStorage","setItem","JSON","hideMetrics","getItem","removeItem","studentVacanciesState","studentVacancies","achievements","showAchievementsNotifications","resetPartnersAchievements","websocketSlice","wsConnectionStart","wsConnectionStop","wsConnectionSuccess","wsConnectionError","wsConnectionClosed","rootReducer","combineReducers","app","appSlice","reducer","authSlice","onboarding","vacanciesPage","metrics","diary","ws","studentVacanciesSlice","statisticsMetrics","loadedAuthState","serialisedState","parse","e","loadFromLocalStorage","padding","placeItems","backgroundSize","backgroundRepeat","backgroundImage","rootSigned","background","rootBlack","useUpdateStudentStatus","useAppDispatch","request","enqueueSnackbar","info","options","Date","getTime","Math","random","autoHideDuration","setTimeoutId","setTimeout","STATUS_CHECK_PERIOD","OnboardingPage","loadable","fallback","OnboardingFormPersonal","OnboardingFormExperience","OnboardingFormResume","LoginPage","RegisterPage","ResetPassword","DiaryPage","FeedPage","MetricsPage","VacanciesPage","ApplicationsPage","StudentsListPage","StudentsListPageNew","StudentsDiaryPage","ConsultantFeedPage","ConsultantMetricsPage","CohortPage","LandingPage","VacanciesListPage","TestPage","ContactsPage","StatisticsPage","ServerError404Page","ServerError500Page","AuthLayout","MainLayout","DiaryLayout","PartnersLayout","RequireUserAuth","RequireConsultantAuth","RequireVacancyAuth","SwiperCore","Pagination","App","useAppSelector","store","timeoutId","themeOptions","useMemo","createTheme","palette","theme","typography","overrides","MuiButton","minHeight","button","primary","primaryTextColor","primaryHover","textPrimary","useState","header","snack","setSnack","REACT_APP_IS_DEVTEST_SERVER","useEffect","clearTimeout","clearTimeoutId","ThemeProvider","index","path","element","to","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","configureStore","middleware","getDefaultMiddleware","concat","socket","wsUrl","token","WebSocket","close","onopen","onerror","onmessage","event","parsedData","success","send","success_id","onclose","preloadedState","REACT_APP_SENTRY_PROJECT","REACT_APP_SENTRY_RELEASE","Sentry","dsn","integrations","BrowserTracing","release","environment","debug","beforeSend","hint","exception","eventId","event_id","tracesSampleRate","ignoreErrors","ReactDOM","render","StrictMode","document","getElementById","API_HR_PART_VACANCY_ENDPOINT","hook","API_HR_PART_DIRECTORY_ENDPOINT","courses","vacancies_status","studentStatuses","student_status","employmentItems","employment","workFormatItems","work_format","w","jobApplicationItems","design_formats","d","experienceItems","experience_types","educationItems","education_types","patch","API_HR_PART_VACANCY_BY_ID_ENDPOINT","vacancyId","vacancy_status","API_STUDENT_BY_ID_ENDPOINT","studentId","searchQuery","search","API_HR_PART_VACANCY_INFO_ENDPOINT","API_VACANCIES_ENDPOINT","API_CURRENCY_DIRECTORY_ENDPOINT","API_VACANCY_BY_ID_ENDPOINT","delete","useDispatch","useSelector","initialRequestInfoState","signInRequest","signUpRequest","signOutRequest","resetPassRequest","createPassRequest","getProfileRequest","postOnboardingRequest","getStatusRequest","setUnlogged","setProfile","clearRequestProfile","setVacation","detail","end_date","toLowerCase","fontFamily","join","h1","fontSize","lineHeight","h2","h3","subtitle1","body1","body2","fontWeight","caption1","caption2","text","secondary","default","link","API_STATS_ENDPOINT","achievementNotifications","closeSnackbar","removeSnackbar","dismissAll","dismissed","PROJECT_NAME","PROJECT_START_DATE","PASSWORD_REG_EXP","NAME_FIELDS_REG_EXP","OTHER_TEXT_FIELDS_REG_EXP","INSTITUTION_TEXT_FIELDS_REG_EXP","NAME_FIELDS_TIP","OTHER_TEXT_FIELDS_TIP","INSTITUTION_TEXT_FIELDS_TIP","URL_REG_EXP","CONSULTANT_ROLES","VACANCY_MANAGER_ROLES","USER_ROLES","API_CONSULTANT_DESCRIPTION_ENDPOINT","API_CONSULTATION_ENDPOINT","API_ADVICE_ENDPOINT","API_INTERVIEWS_ENDPOINT","API_ACHIEVEMENTS_ENDPOINT","API_FOUND_JOB_ENDPOINT","API_STAFF_FOUND_JOB_ENDPOINT","API_HOLIDAYS_ENDPOINT","API_SET_HOLIDAYS_ENDPOINT","API_HOLIDAYS_COUNTER_ENDPOINT","API_REPORTS_ENDPOINT","API_REPORT_BY_ID_ENDPOINT","API_REPORTS_FEED_ENDPOINT","API_USER_REPORTS_ENDPOINT","API_RESPONSE_CONTACTS_ENDPOINT","API_VACANCIES_CONTACTS_ENDPOINT","API_APPLICATIONS_ENDPOINT","API_APPLICATION_BY_ID_ENDPOINT","API_STUDENTS_LIST_ENDPOINT","API_GET_FILTERS_STUDENTS","API_APPLICATION_GET_FILTERS","API_GET_WEEK_STATS","API_APPLICATIONS_CSV","API_STUDENTS_CSV","API_FEED_CSV","API_FEED_SUMMARY_CSV","API_COHORT_GET_FILTERS_ENDPOINT","API_COHORT_ENDPOINT","API_COHORT_BY_ID_ENDPOINT","API_LOCATION_DIRECTORY_ENDPOINT","API_COMPANY_DIRECTORY_ENDPOINT","API_COMPANY_DIRECTORY_NOT_STUDENT_ENDPOINT","API_COMPANY_SEARCH_ENDPOINT","API_HR_PART_EXPORT_INFO_ENDPOINT","API_GET_TERM_OF_USE","API_POST_TERM_OF_USE","REG_PAGE_DESCRIPTION","REG_FORM_EMAIL_PLACEHOLDER","REG_FORM_PASS_PLACEHOLDER","REG_FORM_PASS_CONFIRM_PLACEHOLDER","REG_FORM_EMPTY_EMAIL_ERROR","REG_FORM_MIN_SYMBOLS","REG_FORM_MAX_SYMBOLS","REG_FORM_MINMAX_SYMBOLS_ERROR","REG_FORM_BAD_EMAIL_ERROR","REG_FORM_BAD_PASS_ERROR","REG_FORM_CONFIRM_PASS_ERROR","REG_FORM_POPUP_BUTTON","REG_FORM_POPUP_CONFIRM_REGISTRATION","LOG_PAGE_DESCRIPTION","LOG_FORM_EMPTY_PASSWORD_ERROR","LOG_FORM_EMPTY_EMAIL_ERROR","LOG_FORM_BAD_EMAIL_ERROR","LOG_FORM_EMAIL_PLACEHOLDER","LOG_FORM_PASS_PLACEHOLDER","EXIT_POPUP_TITLE","EXIT_POPUP_SUBTITLE","EXIT_POPUP_CLOSE_BUTTON","EXIT_POPUP_EXIT_BUTTON","CREATE_COHORT_NUMBER_ERROR","CREATE_COHORT_NUMBER_REQUIRED_ERROR","CREATE_COHORT_COURSE_REQUIRED_ERROR","CREATE_COHORT_INFORMATION_POPUP_TITLE","CREATE_COHORT_INFORMATION_POPUP_SUBTITLE","CREATE_COHORT_INFORMATION_POPUP_BUTTON_TEXT","TEMP_STATUSES","priority","COLORS","ELLIPSE_GREEN_COLORS","ELLIPSE_ORANGE_COLORS","ELLIPSE_ORCHID_COLORS","ELLIPSE_BLUE_COLORS","FILE_SIZE","SUPPORTED_FORMATS","LOGO_SUPPORTED_FORMATS_VALIDATION","LOGO_SUPPORTED_FORMATS","MAX_COMMENT_SYMBOLS_FOUND_JOB_AND_WEEK_REPORT","MIN_COMMENT_SYMBOLS_FOUND_JOB_AND_WEEK_REPORT","MIN_TEXT_FIELD_SYMBOLS","MAX_TEXT_FIELD_SYMBOLS","EXIT_TIMER","RESPONSE_WORK_REGEXP","RESPONSE_WORK_TIP","RESPONSE_TEXT_FIELDS_MIN_SYMBOLS","RESPONSE_TEXT_FIELD_MAX_SYMBOLS","RESPONSE_TEXT_FIELD_MINMAX_TIP","RESPONSE_COMMENT_MAX_SYMBOLS","RESPONSE_COMMENT_MAX_SYMBOLS_TIP","MAX_BIRTHDAY_DATE_ERROR","MAX_PORTFOLIO_SIZE","MAX_PORTFOLIO_SIZE_TIP","PORTFOLIO_SUPPORTED_FORMATS","PORTFOLIO_LETTER_SUPPORTED_FORMATS","PORTFOLIO_SUPPORTED_FORMATS_TIP","PORTFOLIO_COUNT_TIP","number","PORTFOLIO_COUNT_EXTRA_TIP","TEXT_REGEX","TEXT_REGEX_TIP","INTEGER_REGEX","REGISTER_WEAK_NUMBER_PASSWORD_ERROR","REGISTER_WEAK_PASSWORD_ERROR","REGISTER_SHORT_PASSWORD_ERROR","REGISTER_PRIVATE_INFO_ERROR","REGISTER_UNIQUE_MAIL","REGISTER_UNIQUE_MAIL_FORM_TEXT","REGISTER_INVALID_MAIL","AUTH_ACCOUNT_NOT_FOUND_ERROR","NOT_EQUAL_PASSWORD_ERROR","LOGIN_ENTER_ERROR","FORGOT_PASSWORD_ERROR","FORGOT_PASSWORD_ERROR_FORM_TEXT","PASSWORD_LIKE_EMAIL_ERROR","PASSWORD_LIKE_EMAIL_ERROR_FORM_TEXT","VACATION_THIRD_PAD_TEXTFIELD_MIN_SYMBOLS","VACATION_THIRD_PAD_SELECTION_STAGE_FIELD_MIN_SYMBOLS","VACATION_THIRD_PAD_ABOUT_COMPANY_MAX_SYMBOLS","VACATION_THIRD_PAD_TEXTFIELD_MAX_SYMBOLS","VACATION_THIRD_PAD_SELECTION_STAGE_MINMAX_TIPS","VACATION_THIRD_PAD_ABOUT_COMPANY_MINMAX_TIPS","VACATION_THIRD_PAD_TEXTFIELD_MINMAX_TIPS","VACATION_WITHOUT_MIN_MINMAX_TIPS","ACCELERATION_IN_POPUP_DATA","subtitle","datePickerText","ACCELERATION_OUT_POPUP_DATA","PHONE_REG_EXP","API_SEARCH_RESPONSES","API_CONTACTS_SEVERAL_ENDPOINT","API_CONTACTS_ENDPOINT","API_CONTACTS_BY_ID_ENDPOINT","ONLY_SPACES_REGEXP","COVERS_EXAMPLE_LINK","API_SEARCH_COURSES","API_CONSULTANTS_STUDENT_STATISTICS","directories","vacancyPage","externalVacancies","externalPage","selectedVacancy","isJobApplicationModalOpen","isOpenPartnersVacancyPopup","selectedFullVacancy","isNoDetails","filteredVacancies","isExternalLoading","isVacancyLoading","openJobApplicationModal","closeJobApplicationModal","openVacancyPopup","closeVacancyPopup","vacancy","is_viewed","openPartnersVacancyPopup","closePartnersVacancyPopup","selectVacancy","resetPage","resetPartnersPage","page","firstVacancy","v","wsConnected","wsError","openSocket","closeSocket"],"mappings":"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","file":"static/js/main.92629eaf.chunk.js","sourcesContent":["import { createAsyncThunk } from '@reduxjs/toolkit'\nimport { AxiosError } from 'axios'\nimport { API_ONBOARDING_DIRECTORY_ENDPOINT } from '../../utils/constants'\nimport api from './settings'\n\nexport const getOnboardingBaseData = createAsyncThunk(\n  'onboarding/getOnboardingBaseData',\n  async (_: void, { rejectWithValue }) => {\n    try {\n      const response = await api.get(API_ONBOARDING_DIRECTORY_ENDPOINT)\n      return response.data\n    } catch (error) {\n      const typedError = error as AxiosError\n      return rejectWithValue(typedError?.response?.data)\n    }\n  },\n)\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\n\ntype TInitialState = {\n  isHidden: boolean\n}\n\nconst initialState: TInitialState = {\n  isHidden: false,\n}\n\nexport const statisticsMetricsSlice = createSlice({\n  name: 'statistics-metrics-slice',\n  initialState,\n  reducers: {\n    changeStatisticsMetricsState: (state, action: PayloadAction<boolean>) => {\n      state.isHidden = action.payload\n    },\n  },\n})\n\nexport const { changeStatisticsMetricsState } = statisticsMetricsSlice.actions\nexport default statisticsMetricsSlice\n","export default __webpack_public_path__ + \"static/media/medal-big-gray.b51426d6.svg\";","import { createSlice } from '@reduxjs/toolkit'\nimport { v4 } from 'uuid'\nimport { getAchievements } from '../axios/achievements'\nimport { IAPIError, IRequestInfo } from '../types/global-types'\nimport medal from '../../assets/medal-big-gray.svg'\nimport { ApiAchievement, TAchievement } from '../types/achievements/achievements-types'\n\ninterface IAchievementState extends IRequestInfo {\n  selectedAchievement: TAchievement & {\n    open: boolean\n  }\n  allAchievements: Array<TAchievement>\n  successAchievements: Array<TAchievement>\n  failedAchievements: Array<TAchievement>\n  commonAchievements: Array<TAchievement>\n  preaccelerationAchievements: Array<TAchievement>\n  accelerationAchievements: Array<TAchievement>\n  testPeriodAchievements: Array<TAchievement>\n  communityAchievements: Array<TAchievement>\n  filteredAllAchievements: Array<TAchievement>\n  filteredCommonAchievements: Array<TAchievement>\n  filteredPreaccelerationAchievements: Array<TAchievement>\n  filteredAccelerationAchievements: Array<TAchievement>\n  filteredTestPeriodAchievements: Array<TAchievement>\n  filteredCommunityAchievements: Array<TAchievement>\n}\n\nexport const initialState: IAchievementState = {\n  status: 'idle',\n  isError: false,\n  errorInfo: null,\n  selectedAchievement: {\n    image: '',\n    title: '',\n    message: '',\n    open: false,\n    isSuccess: false,\n  },\n  allAchievements: [],\n  commonAchievements: [],\n  preaccelerationAchievements: [],\n  accelerationAchievements: [],\n  testPeriodAchievements: [],\n  communityAchievements: [],\n  successAchievements: [],\n  failedAchievements: [],\n  filteredAllAchievements: [],\n  filteredCommonAchievements: [],\n  filteredPreaccelerationAchievements: [],\n  filteredAccelerationAchievements: [],\n  filteredTestPeriodAchievements: [],\n  filteredCommunityAchievements: [],\n}\n\nconst achievementsSlice = createSlice({\n  name: 'achievement',\n  initialState,\n  reducers: {\n    openActiveAchievement(state, action) {\n      state.selectedAchievement = { ...action.payload, open: true }\n    },\n    closeActiveAchievement(state) {\n      state.selectedAchievement.open = false\n    },\n    filterAchievements(state, action) {\n      switch (action.payload) {\n        case 1:\n          // Фильтруем все\n          state.filteredAllAchievements = [...state.allAchievements]\n          state.filteredCommonAchievements = [...state.commonAchievements]\n          state.filteredPreaccelerationAchievements = [...state.preaccelerationAchievements]\n          state.filteredAccelerationAchievements = [...state.accelerationAchievements]\n          state.filteredTestPeriodAchievements = [...state.testPeriodAchievements]\n          state.filteredCommunityAchievements = [...state.communityAchievements]\n          break\n        case 2:\n          // Фильтруем полученные\n          state.filteredAllAchievements = [...state.successAchievements]\n          state.filteredCommonAchievements = state.commonAchievements.filter((item) => item.isSuccess)\n          state.filteredPreaccelerationAchievements = state.preaccelerationAchievements.filter((item) => item.isSuccess)\n          state.filteredAccelerationAchievements = state.accelerationAchievements.filter((item) => item.isSuccess)\n          state.filteredTestPeriodAchievements = state.testPeriodAchievements.filter((item) => item.isSuccess)\n          state.filteredCommunityAchievements = state.communityAchievements.filter((item) => item.isSuccess)\n          break\n        case 3:\n          // Фильтруем неполученные\n          state.filteredAllAchievements = [...state.failedAchievements]\n          state.filteredCommonAchievements = state.commonAchievements.filter((item) => !item.isSuccess)\n          state.filteredPreaccelerationAchievements = state.preaccelerationAchievements.filter(\n            (item) => !item.isSuccess,\n          )\n          state.filteredAccelerationAchievements = state.accelerationAchievements.filter((item) => !item.isSuccess)\n          state.filteredTestPeriodAchievements = state.testPeriodAchievements.filter((item) => !item.isSuccess)\n          state.filteredCommunityAchievements = state.communityAchievements.filter((item) => !item.isSuccess)\n          break\n        default:\n          // Ничего не делаем, если пришла борода\n          break\n      }\n    },\n    resetAchievements: () => initialState,\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(getAchievements.pending, (state) => {\n        state.status = 'pending'\n        state.isError = false\n        state.errorInfo = null\n      })\n      .addCase(getAchievements.fulfilled, (state, action) => {\n        state.status = 'succeeded'\n        const achievementGroups = action.payload\n        state.allAchievements = []\n        state.commonAchievements = []\n        state.preaccelerationAchievements = []\n        state.accelerationAchievements = []\n        state.testPeriodAchievements = []\n        state.communityAchievements = []\n        achievementGroups.forEach((group: ApiAchievement) => {\n          const statuses = group.required_statuses\n          group.stages.forEach((stage) => {\n            const uuid = v4()\n            const achievement: TAchievement = stage.is_hidden\n              ? {\n                  image: medal,\n                  title: 'Достижение скрыто',\n                  message: 'Секретное достижение',\n                  uuid,\n                  isSuccess: stage.is_success,\n                }\n              : {\n                  image: stage.is_success ? stage.success_image : stage.todo_image,\n                  title: stage.name,\n                  message: stage.condition_text,\n                  currentProgress: stage.current_progress,\n                  maxProgress: stage.success_condition,\n                  uuid,\n                  isSuccess: stage.is_success,\n                }\n            // Сразу предварительно заполняем ещё и фильтрованные стейты\n            if (statuses.length === 4) {\n              state.commonAchievements.push(achievement)\n              state.filteredCommonAchievements.push(achievement)\n            } else {\n              if (statuses.includes(1)) {\n                state.preaccelerationAchievements.push(achievement)\n                state.filteredPreaccelerationAchievements.push(achievement)\n              }\n              if (statuses.includes(2)) {\n                state.accelerationAchievements.push(achievement)\n                state.filteredAccelerationAchievements.push(achievement)\n              }\n              if (statuses.includes(3)) {\n                state.communityAchievements.push(achievement)\n                state.filteredCommunityAchievements.push(achievement)\n              }\n              if (statuses.includes(7)) {\n                state.testPeriodAchievements.push(achievement)\n                state.filteredTestPeriodAchievements.push(achievement)\n              }\n            }\n            // Заполняем стейты со всеми выполненными и невыполненными ачивками\n            if (stage.is_success) {\n              state.successAchievements.push(achievement)\n            } else {\n              state.failedAchievements.push(achievement)\n            }\n            state.allAchievements.push(achievement)\n            state.filteredAllAchievements.push(achievement)\n          })\n        })\n      })\n      .addCase(getAchievements.rejected, (state, action) => {\n        state.isError = true\n        state.errorInfo = action.payload as IAPIError\n        state.status = 'failed'\n      })\n  },\n})\n\nexport const { openActiveAchievement, closeActiveAchievement, resetAchievements, filterAchievements } =\n  achievementsSlice.actions\n\nexport default achievementsSlice\n","import axios from 'axios'\nimport {\n  API_TOKEN_REFRESH_ENDPOINT,\n  API_SIGN_IN_ENDPOINT,\n  API_SIGN_UP_ENDPOINT,\n  API_PASSWORD_RECOVERY_ENDPOINT,\n} from '../../utils/constants'\n\nconst instance = axios.create({\n  baseURL: process.env.REACT_APP_API,\n  headers: {\n    'Content-Type': 'application/json',\n    Accept: 'application/json',\n  },\n  withCredentials: true,\n})\n\ninstance.interceptors.response.use(\n  (res) => res,\n  async (err) => {\n    const originalConfig = err.config\n    if (originalConfig.url === API_TOKEN_REFRESH_ENDPOINT && err.response.status === 401) return Promise.reject(err)\n\n    if (\n      originalConfig.url !== API_SIGN_IN_ENDPOINT &&\n      originalConfig.url !== API_SIGN_UP_ENDPOINT &&\n      originalConfig.url !== API_PASSWORD_RECOVERY_ENDPOINT &&\n      err.response\n    ) {\n      // eslint-disable-next-line no-underscore-dangle\n      if (err.response.status === 401 && !originalConfig.retry) {\n        originalConfig.retry = true\n\n        try {\n          await instance.post(API_TOKEN_REFRESH_ENDPOINT)\n          if (originalConfig.data) {\n            const config = { ...originalConfig, data: originalConfig.data }\n            return instance(config)\n          }\n          return instance(originalConfig)\n        } catch (error) {\n          return Promise.reject(error)\n        }\n      }\n    }\n    // Закомменчено из-за 404 в в вакансиях (когда с задержкой обновляются страницы пагинации)\n    // if (err?.response?.status === 404) {\n    //   window.location.href = '/404'\n    // }\n\n    if (err?.response?.status === 500) {\n      window.location.href = '/500'\n    }\n\n    return Promise.reject(err)\n  },\n)\n\ninstance.interceptors.response.use(\n  (res) => res,\n  async (err) => {\n    const originalConfig = err.config\n    if (originalConfig.url === API_TOKEN_REFRESH_ENDPOINT && err.response.status === 401) return Promise.reject(err)\n\n    if (\n      originalConfig.url !== API_SIGN_IN_ENDPOINT &&\n      originalConfig.url !== API_SIGN_UP_ENDPOINT &&\n      originalConfig.url !== API_PASSWORD_RECOVERY_ENDPOINT &&\n      err.response\n    ) {\n      // eslint-disable-next-line no-underscore-dangle\n      if (err.response.status === 401 && !originalConfig.retry) {\n        originalConfig.retry = true\n\n        try {\n          await instance.post(API_TOKEN_REFRESH_ENDPOINT)\n          if (originalConfig.data) {\n            const config = { ...originalConfig, data: originalConfig.data }\n            return instance(config)\n          }\n          return instance(originalConfig)\n        } catch (error) {\n          return Promise.reject(error)\n        }\n      }\n    }\n\n    // Закомменчено из-за 404 в в вакансиях (когда с задержкой обновляются страницы пагинации)\n    // if (err?.response?.status === 404) {\n    //   window.location.href = '/404'\n    // }\n\n    if (err?.response?.status === 500) {\n      window.location.href = '/500'\n    }\n\n    return Promise.reject(err)\n  },\n)\n\nexport default instance\n","import { createSlice } from '@reduxjs/toolkit'\nimport { GridRowsProp } from '@mui/x-data-grid'\nimport {\n  IDirectories,\n  IFilterJson,\n  IInitialState,\n  IStudentRawData,\n  TStudentRawArrayData,\n  TStudentRowArray,\n} from '../types/vacacies-page-types/vacancies-page-types'\nimport {\n  getDirectories,\n  getInfo,\n  getVacanciesList,\n  patchStudentStatus,\n  patchVacancyStatus,\n} from '../axios/vacancies-page'\nimport { IAPIError } from '../types/global-types'\n\nconst getRows = (rawData: TStudentRawArrayData): TStudentRowArray => {\n  const result = []\n  const isOfferedStudents = !!rawData.find((s) => s.job_found)\n  const isOtherStudents = !!rawData.find((s) => !s.job_found)\n  if (isOfferedStudents) result.push({ id: 'OFFERED', title: 'Студенты трудоустроенные на эту вакансию' })\n  rawData.map((s) => (s.job_found ? result.push(s) : null))\n  if (isOtherStudents) result.push({ id: 'OTHER', title: 'Остальные отклики' })\n  rawData.map((s) => (!s.job_found ? result.push(s) : null))\n  return result\n}\n\nexport const initialState: IInitialState = {\n  filtersJSON: {} as IFilterJson,\n  directoriesData: {} as IDirectories,\n  isOpenVacancyPopup: false,\n  vacancyToArchive: null,\n  isInfoPopupOpen: false,\n  vacancyToEdit: null,\n  vacancies: [],\n  isLoading: false,\n  isOpenFoundJobPopup: false,\n  studentToEdit: null,\n  isNetworkError: false,\n  networkError: null,\n  infoData: [],\n  rows: [],\n  updateStatus: '',\n  updateStudentStatus: false,\n  rowsCount: 0,\n}\n\nconst vacanciesPageSlice = createSlice({\n  name: 'vacancies-page',\n  initialState,\n  reducers: {\n    setFiltersJSON(state, action) {\n      state.filtersJSON = action.payload\n    },\n    setDirectoriesData(state, action) {\n      state.directoriesData = action.payload\n    },\n    setIsOpenVacancyPopup(state, action) {\n      state.isOpenVacancyPopup = action.payload\n    },\n    setVacancyToArchive(state, action) {\n      state.vacancyToArchive = action.payload\n    },\n    setIsInfoPopupOpen(state, action) {\n      state.isInfoPopupOpen = action.payload\n    },\n    setVacancyToEdit(state, action) {\n      state.vacancyToEdit = action.payload\n    },\n    setVacancies(state, action) {\n      state.vacancies = action.payload\n    },\n    setIsLoading(state, action) {\n      state.isLoading = action.payload\n    },\n    setIsOpenFoundJobPopup(state, action) {\n      state.isOpenFoundJobPopup = action.payload\n    },\n    setStudentToEdit(state, action) {\n      state.studentToEdit = action.payload\n    },\n    resetUpdateStatus(state) {\n      state.updateStatus = ''\n    },\n    resetUpdateStudentStatus(state) {\n      state.updateStudentStatus = false\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      // get Vacancies\n      .addCase(getVacanciesList.pending, (state) => {\n        state.isLoading = true\n        state.isNetworkError = false\n        state.networkError = null\n      })\n      .addCase(getVacanciesList.fulfilled, (state, action) => {\n        state.isLoading = false\n        state.vacancies = action.payload.results\n        state.rowsCount = action.payload.count\n      })\n      .addCase(getVacanciesList.rejected, (state, action) => {\n        state.isLoading = false\n        state.networkError = action.payload as IAPIError\n        state.isNetworkError = true\n      })\n\n      // get Directories\n      .addCase(getDirectories.pending, (state) => {\n        state.isLoading = true\n        state.isNetworkError = false\n        state.networkError = null\n      })\n      .addCase(getDirectories.fulfilled, (state, action) => {\n        state.isLoading = false\n        state.filtersJSON = action.payload.filters\n        state.directoriesData = action.payload.directoriesData\n      })\n      .addCase(getDirectories.rejected, (state, action) => {\n        state.isLoading = false\n        state.networkError = action.payload as IAPIError\n        state.isNetworkError = true\n      })\n\n      // patch Vacancies\n      .addCase(patchVacancyStatus.pending, (state) => {\n        state.isLoading = true\n        state.isNetworkError = false\n        state.networkError = null\n      })\n      .addCase(patchVacancyStatus.fulfilled, (state, action) => {\n        state.isLoading = false\n        const { updatedRow } = action.payload\n        const newVacancies = [...state.vacancies]\n        newVacancies[newVacancies.findIndex((el) => el.id === updatedRow.id)] = updatedRow\n        state.vacancies = newVacancies\n        state.updateStatus = 'ok'\n      })\n      .addCase(patchVacancyStatus.rejected, (state, action) => {\n        state.isLoading = false\n        state.networkError = action.payload as IAPIError\n        state.isNetworkError = true\n      })\n\n      // patch students\n      .addCase(patchStudentStatus.pending, (state) => {\n        state.isLoading = true\n        state.isNetworkError = false\n        state.networkError = null\n      })\n      .addCase(patchStudentStatus.fulfilled, (state, action) => {\n        state.isLoading = false\n        const { updatedRow } = action.payload\n        const newInfoRows: Array<IStudentRawData> = [...state.infoData]\n        newInfoRows[newInfoRows.findIndex((el) => el.id === updatedRow.id)].status.value = updatedRow.status\n        state.rows = getRows(newInfoRows)\n        state.updateStatus = 'ok'\n        state.updateStudentStatus = true\n      })\n      .addCase(patchStudentStatus.rejected, (state, action) => {\n        state.isLoading = false\n        state.networkError = action.payload as IAPIError\n        state.isNetworkError = true\n      })\n\n      // get Info about vacancy\n      .addCase(getInfo.pending, (state) => {\n        state.isLoading = true\n        state.isNetworkError = false\n        state.networkError = null\n      })\n      .addCase(getInfo.fulfilled, (state, action) => {\n        state.isLoading = false\n        state.infoData = action.payload\n        state.rows = getRows(action.payload)\n      })\n      .addCase(getInfo.rejected, (state, action) => {\n        state.isLoading = false\n        state.networkError = action.payload as IAPIError\n        state.isNetworkError = true\n      })\n  },\n})\n\nexport const {\n  setFiltersJSON,\n  setDirectoriesData,\n  setIsOpenVacancyPopup,\n  setVacancyToArchive,\n  setIsInfoPopupOpen,\n  setVacancyToEdit,\n  setVacancies,\n  setIsLoading,\n  setIsOpenFoundJobPopup,\n  setStudentToEdit,\n  resetUpdateStatus,\n  resetUpdateStudentStatus,\n} = vacanciesPageSlice.actions\n\nexport default vacanciesPageSlice\n","import { createSlice } from '@reduxjs/toolkit'\nimport { getStats, getNotifications } from '../axios/metrics'\nimport { IMetricsState, IAPIError } from '../types/metrics/metrics-types'\n\nexport const initialState: IMetricsState = {\n  status: 'idle',\n  isError: false,\n  errorInfo: null,\n  notification: null,\n  funnelStats: null,\n  eventsStats: [],\n}\n\nconst metricsSlice = createSlice({\n  name: 'metrics',\n  initialState,\n  reducers: {\n    setNotificated(state) {\n      if (state.notification) {\n        state.notification.is_notificated = true\n      }\n    },\n    resetMetrics: () => initialState,\n  },\n  extraReducers: (builder) => {\n    builder\n\n      // GET NOTIFICATIONS\n      .addCase(getNotifications.pending, (state) => {\n        state.status = 'pending'\n        state.isError = false\n        state.errorInfo = null\n      })\n      .addCase(getNotifications.fulfilled, (state, action) => {\n        state.status = 'succeeded'\n        state.notification = { ...action.payload }\n      })\n      .addCase(getNotifications.rejected, (state, action) => {\n        const payload = action.payload as IAPIError\n        state.isError = true\n        state.errorInfo = payload\n        state.status = 'failed'\n      })\n\n      // GET STATS\n      .addCase(getStats.pending, (state) => {\n        state.status = 'pending'\n        state.isError = false\n        state.errorInfo = null\n      })\n      .addCase(getStats.fulfilled, (state, action) => {\n        state.status = 'succeeded'\n        const { all_stats, week_stats } = action.payload\n        if (all_stats) {\n          state.funnelStats = { ...all_stats }\n        }\n        if (week_stats) {\n          state.eventsStats = [...week_stats]\n        }\n      })\n      .addCase(getStats.rejected, (state, action) => {\n        const payload = action.payload as IAPIError\n        state.isError = true\n        state.errorInfo = payload\n        state.status = 'failed'\n      })\n  },\n})\n\nexport const { setNotificated, resetMetrics } = metricsSlice.actions\n\nexport default metricsSlice\n","import { createSlice } from '@reduxjs/toolkit'\nimport { SnackbarKey, OptionsObject } from 'notistack'\nimport { createResponse, deleteResponse, getCurrencies, getResponses, patchResponse } from '../axios/diary'\nimport { IAPIError, IRequestInfo } from '../types/global-types'\n\ntype Response = {\n  id: string\n  key: SnackbarKey\n  dismissed: boolean\n  message: string\n  options?: OptionsObject\n}\n\ntype Currency = {\n  id: number\n  name: string\n  icon: string\n}\n\ntype ApiCurrency = {\n  id: number\n  name: string\n  label: string\n}\n\ntype DragStatus = {\n  stage: 'idle' | 'dragging' | 'dropped'\n  responseId: string | null\n  oldStatus: string | null\n  newStatus: string | null\n  responseDate: string | null\n}\n\ninterface IDiaryState extends IRequestInfo {\n  responses: Array<Response>\n  currencies: Array<Currency>\n  draggingStatus: DragStatus\n}\n\nexport const initialState: IDiaryState = {\n  responses: [],\n  currencies: [],\n  status: 'idle',\n  isError: false,\n  errorInfo: null,\n  draggingStatus: {\n    stage: 'idle',\n    responseId: null,\n    oldStatus: null,\n    newStatus: null,\n    responseDate: null,\n  },\n}\n\nconst diarySlice = createSlice({\n  name: 'diary',\n  initialState,\n  reducers: {\n    updateResponseStatus(state, action) {\n      state.draggingStatus = {\n        stage: 'dragging',\n        responseId: action.payload.id,\n        oldStatus: action.payload.status_id,\n        newStatus: action.payload.newStatus,\n        responseDate: action.payload.response_date,\n      }\n      state.responses = state.responses.map((response) =>\n        response.id === action.payload.id ? { ...response, status_id: action.payload.newStatus } : response,\n      )\n    },\n    cancelDragging(state) {\n      state.responses = [...state.responses].map((response) =>\n        response.id === state.draggingStatus?.responseId\n          ? { ...response, status_id: state.draggingStatus?.oldStatus }\n          : response,\n      )\n      state.draggingStatus = {\n        stage: 'idle',\n        responseId: null,\n        oldStatus: null,\n        newStatus: null,\n        responseDate: null,\n      }\n    },\n    finishDragging(state) {\n      state.draggingStatus = {\n        stage: 'dropped',\n        responseId: null,\n        oldStatus: null,\n        newStatus: null,\n        responseDate: null,\n      }\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      // GET CARDS\n      .addCase(getResponses.pending, (state) => {\n        state.status = 'pending'\n        state.isError = false\n        state.errorInfo = null\n      })\n      .addCase(getResponses.fulfilled, (state, action) => {\n        state.status = 'succeeded'\n        state.responses = action.payload\n      })\n      .addCase(getResponses.rejected, (state, action) => {\n        state.isError = true\n        state.errorInfo = action.payload as IAPIError\n        state.status = 'failed'\n      })\n\n      // GET CURRENCIES\n      .addCase(getCurrencies.pending, (state) => {\n        state.status = 'pending'\n        state.isError = false\n        state.errorInfo = null\n      })\n      .addCase(getCurrencies.fulfilled, (state, action) => {\n        state.status = 'succeeded'\n        state.currencies = action.payload.map((currency: ApiCurrency) => ({ ...currency, icon: currency.label }))\n      })\n      .addCase(getCurrencies.rejected, (state, action) => {\n        state.isError = true\n        state.errorInfo = action.payload as IAPIError\n        state.status = 'failed'\n      })\n\n      // CREATE RESPONSE\n      .addCase(createResponse.pending, (state) => {\n        state.status = 'pending'\n        state.isError = false\n        state.errorInfo = null\n      })\n      .addCase(createResponse.fulfilled, (state, action) => {\n        state.status = 'succeeded'\n        state.responses = [...state.responses, action.payload]\n      })\n      .addCase(createResponse.rejected, (state, action) => {\n        state.isError = true\n        state.errorInfo = action.payload as IAPIError\n        state.status = 'failed'\n      })\n\n      // PATCH RESPONSE\n      .addCase(patchResponse.pending, (state) => {\n        state.status = 'pending'\n        state.isError = false\n        state.errorInfo = null\n      })\n      .addCase(patchResponse.fulfilled, (state, action) => {\n        state.status = 'succeeded'\n        state.responses = state.responses.map((response) =>\n          response.id === action.payload.id ? action.payload : response,\n        )\n      })\n      .addCase(patchResponse.rejected, (state, action) => {\n        state.isError = true\n        state.errorInfo = action.payload as IAPIError\n        state.status = 'failed'\n      })\n\n      // DELETE RESPONSE\n      .addCase(deleteResponse.pending, (state) => {\n        state.status = 'pending'\n        state.isError = false\n        state.errorInfo = null\n      })\n      .addCase(deleteResponse.fulfilled, (state, action) => {\n        state.status = 'succeeded'\n        state.responses = state.responses.filter((response) => response.id !== action.payload)\n      })\n      .addCase(deleteResponse.rejected, (state, action) => {\n        state.isError = true\n        state.errorInfo = action.payload as IAPIError\n        state.status = 'failed'\n      })\n  },\n})\n\nexport const { updateResponseStatus, cancelDragging, finishDragging } = diarySlice.actions\n\nexport default diarySlice\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { ExperienceInfo, OnboardingBaseData, PersonalInfo, ResumeInfo } from '../types/onboarding/onboarding-types'\nimport { getOnboardingBaseData } from '../axios/onboarding'\nimport { IAPIError, IRequestInfo } from '../types/global-types'\n\ntype TInitialState = IRequestInfo & {\n  baseData: OnboardingBaseData | null\n  personalInfo: PersonalInfo | null\n  experienceInfo: ExperienceInfo | null\n  resumeInfo: ResumeInfo | null\n}\n\nconst initialState: TInitialState = {\n  status: 'idle',\n  isError: false,\n  errorInfo: null,\n  baseData: null,\n  personalInfo: null,\n  experienceInfo: null,\n  resumeInfo: null,\n}\n\nexport const onboardingSlice = createSlice({\n  name: 'onboarding',\n  initialState,\n  reducers: {\n    setPersonalInfo: (state, action: PayloadAction<PersonalInfo>) => {\n      state.personalInfo = action.payload\n    },\n    setExperienceInfo: (state, action: PayloadAction<ExperienceInfo>) => {\n      state.experienceInfo = action.payload\n    },\n    setResumeInfo: (state, action: PayloadAction<ResumeInfo>) => {\n      state.resumeInfo = action.payload\n    },\n    clearOnboardingInfo: (state) => {\n      state.resumeInfo = null\n      state.personalInfo = null\n      state.experienceInfo = null\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(getOnboardingBaseData.pending, (state) => {\n        state.status = 'pending'\n        state.isError = false\n        state.errorInfo = null\n      })\n      .addCase(getOnboardingBaseData.fulfilled, (state, action) => {\n        state.status = 'succeeded'\n        state.baseData = action.payload\n      })\n      .addCase(getOnboardingBaseData.rejected, (state, action) => {\n        state.status = 'failed'\n        state.isError = true\n        state.errorInfo = action.payload as IAPIError\n      })\n  },\n})\n\nexport const { setPersonalInfo, setExperienceInfo, setResumeInfo, clearOnboardingInfo } = onboardingSlice.actions\nexport default onboardingSlice\n","import { createAsyncThunk } from '@reduxjs/toolkit'\nimport { AxiosError } from 'axios'\nimport {\n  API_SIGN_IN_ENDPOINT,\n  API_SIGN_OUT_ENDPOINT,\n  API_SIGN_UP_ENDPOINT,\n  API_PROFILE_ENDPOINT,\n  API_USER_PROFILE_ENDPOINT,\n  API_PASSWORD_RECOVERY_ENDPOINT,\n  API_CREATE_NEW_PASSWORD_ENDPOINT,\n  API_USER_STATUS_ENDPOINT,\n} from '../../utils/constants'\nimport { TSignInData, TSignUpData, TResetPasswordData, TCreatePasswordData } from '../types/auth/auth-types'\nimport api from './settings'\n\nexport const signIn = createAsyncThunk('auth/signIn', async (data: TSignInData, { rejectWithValue }) => {\n  try {\n    const response = await api.post(API_SIGN_IN_ENDPOINT, data)\n    return response.data\n  } catch (error) {\n    const typedError = error as AxiosError\n    return rejectWithValue(typedError?.response?.data)\n  }\n})\n\nexport const signUp = createAsyncThunk('auth/signUp', async (data: TSignUpData, { rejectWithValue }) => {\n  try {\n    const response = await api.post(API_SIGN_UP_ENDPOINT, data)\n    return response.data\n  } catch (error) {\n    const typedError = error as AxiosError\n    return rejectWithValue(typedError?.response?.data)\n  }\n})\n\nexport const signOut = createAsyncThunk('auth/signOut', async (_: void, { rejectWithValue }) => {\n  try {\n    const response = await api.post(API_SIGN_OUT_ENDPOINT)\n    return response.data\n  } catch (error) {\n    const typedError = error as AxiosError\n    return rejectWithValue(typedError?.response?.data)\n  }\n})\n\nexport const resetPassword = createAsyncThunk(\n  'auth/resetPassword',\n  async (data: TResetPasswordData, { rejectWithValue }) => {\n    try {\n      const response = await api.post(API_PASSWORD_RECOVERY_ENDPOINT, data)\n      return response.data\n    } catch (error) {\n      const typedError = error as AxiosError\n      return rejectWithValue(typedError?.response?.data)\n    }\n  },\n)\n\nexport const createPassword = createAsyncThunk(\n  'auth/createPassword',\n  async (data: TCreatePasswordData, { rejectWithValue }) => {\n    try {\n      const response = await api.post(API_CREATE_NEW_PASSWORD_ENDPOINT, data)\n      return response.data\n    } catch (error) {\n      const typedError = error as AxiosError\n      return rejectWithValue(typedError?.response?.data)\n    }\n  },\n)\n\nexport const getProfile = createAsyncThunk('auth/getProfile', async (_: void, { rejectWithValue }) => {\n  try {\n    const response = await api.get(API_USER_PROFILE_ENDPOINT)\n    return response.data\n  } catch (error) {\n    const typedError = error as AxiosError\n    return rejectWithValue(typedError?.response?.data)\n  }\n})\n\nexport const postOnboarding = createAsyncThunk('auth/postOnboarding', async (data: FormData, { rejectWithValue }) => {\n  try {\n    const response = await api.post(API_PROFILE_ENDPOINT, data, {\n      headers: {\n        'Content-Type': 'multipart/form-data',\n        Accept: 'application/json',\n      },\n    })\n    return response.data\n  } catch (error) {\n    const typedError = error as AxiosError\n    return rejectWithValue(typedError?.response?.data)\n  }\n})\n\nexport const getStatus = createAsyncThunk('auth/getStatus', async (_: void, { rejectWithValue }) => {\n  try {\n    const response = await api.get(API_USER_STATUS_ENDPOINT)\n    return response.data\n  } catch (error) {\n    const typedError = error as AxiosError\n    return rejectWithValue(typedError?.response?.data)\n  }\n})\n","import { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    width: '100%',\n    height: '100%',\n    backgroundColor: 'rgba(9, 9, 9, 0.01)',\n    position: 'absolute',\n    justifyContent: 'center',\n    alignItems: 'center',\n    disabled: true,\n    display: 'flex',\n    transition: 'visibility 0.4s ease-in-out, opacity 0.4s linear',\n  },\n}))\n\nexport default useStyles\n","import * as React from 'react'\nimport { MoonLoader } from 'react-spinners'\nimport useStyles from './LoadingOverlay.style'\n\nfunction LoadingOverlay({ loading = true, style = {} }) {\n  const classes = useStyles()\n  return (\n    <section className={classes.root} style={style}>\n      <MoonLoader color=\"#1d6bf3\" loading={loading} size={80} />\n    </section>\n  )\n}\n\nexport default React.memo(LoadingOverlay)\n","/* eslint-disable no-continue */\n/* eslint-disable guard-for-in */\n/* eslint-disable no-restricted-syntax */\nimport { createAsyncThunk } from '@reduxjs/toolkit'\nimport qs from 'qs'\nimport { AxiosError } from 'axios'\nimport {\n  API_HR_PART_ABOUT_VACANCY_STUDENT_ENDPOINT,\n  API_HR_PART_VACANCY_STUDENT_ENDPOINT,\n  API_PARTNER_DIRECTORY_ENDPOINT,\n  API_PARTNER_VACANCY_RESPONSE_ENDPOINT,\n  API_STUDENT_EXTERNAL_VACANCY,\n  API_VACANCY_RESPONSE_ENDPOINT,\n} from '../../utils/constants'\nimport { TStudentVacancyRequestParams } from '../types/student-vacancies/student-vacancies-types'\nimport api from './settings'\n\nexport const getPartnersDirectories = createAsyncThunk(\n  'partners/getDirectories',\n  async (_: void, { rejectWithValue }) => {\n    try {\n      const response = await api.get(API_PARTNER_DIRECTORY_ENDPOINT)\n      return response.data\n    } catch (error) {\n      const typedError = error as AxiosError\n      return rejectWithValue(typedError?.response?.data)\n    }\n  },\n)\n\nconst paramsSerializer = (params: TStudentVacancyRequestParams) => qs.stringify(params, { arrayFormat: 'repeat' })\n\nconst getParams = (params: TStudentVacancyRequestParams) => {\n  // eslint-disable-next-line no-var\n  var modifiedParams = new URLSearchParams('')\n  for (const key in params) {\n    const value = params[key as keyof TStudentVacancyRequestParams] as any\n    if (key === 'cities' && value.length > 0) {\n      value.forEach((city: string) => {\n        modifiedParams.append('cities', city)\n      })\n      // eslint-disable-next-line no-continue\n      continue\n    }\n    if (key === 'currency') {\n      if (value.dollar) {\n        modifiedParams.append('currency', '1')\n      }\n      if (value.euro) {\n        modifiedParams.append('currency', '2')\n      }\n      if (value.pound) {\n        modifiedParams.append('currency', '3')\n      }\n      if (value.ruble) {\n        modifiedParams.append('currency', '4')\n      }\n      if (value.shekel) {\n        modifiedParams.append('currency', '5')\n      }\n      continue\n    }\n    if (key === 'employment') {\n      if (value.office) {\n        modifiedParams.append('employment', '1')\n      }\n      if (value.remote) {\n        modifiedParams.append('employment', '3')\n      }\n      if (value.hybrid) {\n        modifiedParams.append('employment', '2')\n      }\n      continue\n    }\n    if (key === 'designFormats') {\n      if (value.dogovor) {\n        modifiedParams.append('design_formats', '1')\n      }\n      if (value.samo) {\n        modifiedParams.append('design_formats', '2')\n      }\n      if (value.ip) {\n        modifiedParams.append('design_formats', '3')\n      }\n      if (value.contract) {\n        modifiedParams.append('design_formats', '4')\n      }\n      if (value.gph) {\n        modifiedParams.append('design_formats', '5')\n      }\n      continue\n    }\n    // Статусы обработаем отдельно ниже\n    if (key === 'status') continue\n    if (value !== null && value !== undefined) {\n      modifiedParams.append(key, value)\n    }\n  }\n  // Здесь рассмотрим фильтры для статусов\n  if (params?.status) {\n    // Если только новые\n    if (params.status?.new && !params.status?.is_accepted && !params.status?.is_showed) {\n      modifiedParams.append('is_showed', 'false')\n      modifiedParams.append('is_accepted', 'false')\n      return modifiedParams.toString()\n    }\n    // Если только просмотренные\n    if (!params.status?.new && !params.status?.is_accepted && params.status?.is_showed) {\n      modifiedParams.append('is_showed', 'true')\n      modifiedParams.append('is_accepted', 'false')\n      return modifiedParams.toString()\n    }\n    // Если только отправленные\n    if (!params.status?.new && params.status?.is_accepted && !params.status?.is_showed) {\n      modifiedParams.append('is_showed', 'true')\n      modifiedParams.append('is_accepted', 'true')\n      return modifiedParams.toString()\n    }\n    // Если все, то ничего не отправляем\n    if (params.status?.new && params.status?.is_accepted && params.status?.is_showed) {\n      return modifiedParams.toString()\n    }\n\n    // Если новое и просмотренное\n    if (params.status?.new && !params.status?.is_accepted && params.status?.is_showed) {\n      modifiedParams.append('is_accepted', 'false')\n      return modifiedParams.toString()\n    }\n\n    // Если новое и отправленное то показываем все\n    if (params.status?.new && params.status?.is_accepted && !params.status?.is_showed) {\n      return modifiedParams.toString()\n    }\n\n    // Во всех любых других случаях отправим то, что есть\n    if (params.status?.is_showed) modifiedParams.append('is_showed', params.status?.is_showed.toString())\n    if (params.status?.is_accepted) modifiedParams.append('is_accepted', params.status?.is_accepted.toString())\n  }\n  return modifiedParams.toString()\n}\n\nexport const getPartnersVacancies = createAsyncThunk(\n  'partners/getPartnersVacancies',\n  async (requestParams: TStudentVacancyRequestParams, { rejectWithValue }) => {\n    const params = getParams(requestParams)\n    try {\n      const response = await api.get(`${API_HR_PART_VACANCY_STUDENT_ENDPOINT}?${params}`, {\n        params,\n        paramsSerializer,\n      })\n      return response.data\n    } catch (error) {\n      const typedError = error as AxiosError\n      return rejectWithValue(typedError?.response?.data)\n    }\n  },\n)\n\nexport const getExternalVacancies = createAsyncThunk(\n  'partners/getExternalPartnersVacancies',\n  async (requestParams: TStudentVacancyRequestParams, { rejectWithValue }) => {\n    const params = getParams(requestParams)\n    try {\n      const response = await api.get(`${API_STUDENT_EXTERNAL_VACANCY}?${params}`, {\n        params,\n        paramsSerializer,\n      })\n      return response.data\n    } catch (error) {\n      const typedError = error as AxiosError\n      return rejectWithValue(typedError?.response?.data)\n    }\n  },\n)\n\nexport const getExternalVacancy = createAsyncThunk(\n  'partners/getExternalVacancy',\n  async (data: number, { rejectWithValue }) => {\n    try {\n      const response = await api.get(`${API_STUDENT_EXTERNAL_VACANCY}/${data}`, {\n        paramsSerializer,\n      })\n      return response.data\n    } catch (error) {\n      const typedError = error as AxiosError\n      return rejectWithValue(typedError?.response?.data)\n    }\n  },\n)\n\nexport const getPartnersVacancy = createAsyncThunk(\n  'partners/getPartnersVacancy',\n  async (data: number, { rejectWithValue }) => {\n    try {\n      const response = await api.get(API_HR_PART_ABOUT_VACANCY_STUDENT_ENDPOINT(data), {\n        paramsSerializer,\n      })\n      return response.data\n    } catch (error) {\n      const typedError = error as AxiosError\n      return rejectWithValue(typedError?.response?.data)\n    }\n  },\n)\n\nexport const postPartnersVacancyResponse = createAsyncThunk(\n  'partners/postPartnersVacancyResponse',\n  async (data: FormData, { rejectWithValue }) => {\n    try {\n      const response = await api.post(API_PARTNER_VACANCY_RESPONSE_ENDPOINT, data, {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n        },\n      })\n      return response.data\n    } catch (error) {\n      const typedError = error as AxiosError\n      return rejectWithValue(typedError?.response?.data)\n    }\n  },\n)\n\nexport const createVacancyResponse = createAsyncThunk(\n  'partners/createExternalVacancyResponse',\n  async (data: number, { rejectWithValue }) => {\n    try {\n      const response = await api.post(API_VACANCY_RESPONSE_ENDPOINT, { external_vacancy: data })\n      return response.data\n    } catch (error) {\n      const typedError = error as AxiosError\n      return rejectWithValue(typedError?.response?.data)\n    }\n  },\n)\n","import { Middleware } from '@reduxjs/toolkit'\nimport showAchievementsNotifications from '../../utils/showAchievementsNotifications'\nimport { resetPartnersAchievements } from '../slices/student-vacancies-slice'\n\nexport const authMiddleware: Middleware =\n  ({ dispatch, getState }) =>\n  (next) =>\n  (action) => {\n    const result = next(action)\n    if (action.type?.startsWith('auth/')) {\n      const authState = getState().auth\n      const stateToSave = { isLoggedIn: authState.isLoggedIn, role: authState.role, profile: authState.profile }\n      localStorage.setItem('auth', JSON.stringify(stateToSave))\n      // Создаём/удаляем признак для скрытия метрик у консультанта и у менеджера вакансий\n      if (authState.role === 'consultant' || authState.role === 'vacancy_manager')\n        localStorage.setItem('metrics', JSON.stringify({ hideMetrics: false }))\n      if (authState.role === null && localStorage.getItem('metrics')) localStorage.removeItem('metrics')\n    }\n    const studentVacanciesState = getState().studentVacancies\n    if (studentVacanciesState.achievements.length > 0) {\n      showAchievementsNotifications(studentVacanciesState.achievements, dispatch)\n      dispatch(resetPartnersAchievements())\n    }\n    return result\n  }\n","import { AnyAction, MiddlewareAPI } from 'redux'\nimport websocketSlice from '../slices/websocket-slice'\nimport showAchievementsNotifications from '../../utils/showAchievementsNotifications'\nimport { ApiStage } from '../types/achievements/achievements-types'\n\nconst { wsConnectionStart, wsConnectionStop, wsConnectionSuccess, wsConnectionError, wsConnectionClosed } =\n  websocketSlice.actions\n\nexport const socketMiddleware = () => (store: MiddlewareAPI) => {\n  let socket: WebSocket | null = null\n\n  return (next: (action: AnyAction) => void) => (action: AnyAction) => {\n    const { dispatch } = store\n    const { type, payload } = action\n\n    if (type === wsConnectionStart.type) {\n      const wsUrl: string = payload.token ? `${payload.url}?token=${payload.token}` : `${payload.url}`\n      socket = new WebSocket(wsUrl)\n    }\n\n    if (type === wsConnectionStop.type && socket) {\n      socket.close(1000, 'CLOSE_NORMAL')\n    }\n\n    if (socket) {\n      socket.onopen = () => {\n        dispatch(wsConnectionSuccess())\n      }\n\n      socket.onerror = () => {\n        dispatch(wsConnectionError())\n      }\n\n      socket.onmessage = (event) => {\n        const { data } = event\n        const { success, ...parsedData } = JSON.parse(data)\n        if (parsedData.message && parsedData.message === 'Invalid or missing token') {\n          if (socket) socket.close(1000, 'CLOSE_NORMAL')\n        }\n        const stages = parsedData?.achievements\n        if (stages) {\n          showAchievementsNotifications(stages, dispatch)\n          stages.forEach((stage: ApiStage) => {\n            socket?.send(JSON.stringify({ success_id: stage?.success_id }))\n          })\n        }\n      }\n\n      socket.onclose = (event) => {\n        dispatch(wsConnectionClosed())\n      }\n    }\n\n    next(action)\n  }\n}\n","import { configureStore, ThunkAction, Action, combineReducers } from '@reduxjs/toolkit'\nimport authSlice, { initialState } from '../slices/auth-slice'\nimport onboardingSlice from '../slices/onboarding-slice'\nimport { authMiddleware } from './middleware'\nimport vacanciesPageSlice from '../slices/vacancies-page-slice'\nimport metricsSlice from '../slices/metrics-slice'\nimport appSlice from '../slices/app-slice'\nimport achievementsSlice from '../slices/achievements-slice'\nimport diarySlice from '../slices/diary-slice'\nimport websocketSlice from '../slices/websocket-slice'\nimport { socketMiddleware } from './socketMiddleware'\nimport studentVacanciesSlice from '../slices/student-vacancies-slice'\nimport statisticsMetricsSlice from '../slices/statistics-metrics-slice'\n\nexport const rootReducer = combineReducers({\n  app: appSlice.reducer,\n  auth: authSlice.reducer,\n  onboarding: onboardingSlice.reducer,\n  vacanciesPage: vacanciesPageSlice.reducer,\n  metrics: metricsSlice.reducer,\n  achievements: achievementsSlice.reducer,\n  diary: diarySlice.reducer,\n  ws: websocketSlice.reducer,\n  studentVacancies: studentVacanciesSlice.reducer,\n  statisticsMetrics: statisticsMetricsSlice.reducer,\n})\n\nconst loadFromLocalStorage = () => {\n  try {\n    const serialisedState = localStorage.getItem('auth')\n    if (serialisedState === null) return undefined\n    return JSON.parse(serialisedState)\n  } catch (e) {\n    return undefined\n  }\n}\n\nconst loadedAuthState = loadFromLocalStorage()\n\nexport const setupStore = () =>\n  configureStore({\n    reducer: rootReducer,\n    middleware: (getDefaultMiddleware) => getDefaultMiddleware().concat(authMiddleware, socketMiddleware()),\n    preloadedState: { auth: { ...initialState, ...loadedAuthState } },\n  })\n\nexport type AppStore = ReturnType<typeof setupStore>\nexport type AppDispatch = AppStore['dispatch']\nexport type TRootState = ReturnType<typeof rootReducer>\nexport type AppThunk<ReturnType = void> = ThunkAction<ReturnType, TRootState, unknown, Action<string>>\n","import { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    padding: '32px 40px 32px 40px',\n    height: '100vh',\n    display: 'grid',\n    placeItems: 'center',\n    backgroundSize: 'cover',\n    backgroundRepeat: 'no-repeat',\n    backgroundImage: `url(\"data:image/svg+xml,%3Csvg width='1920' height='1080' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cg clip-path='url(%23prefix__clip0)'%3E%3Cpath fill='%231A1B22' d='M0 0h1920v1080H0z'/%3E%3Cpath d='M1845 195c0 259.022-209.98 469-469 469-25.09 0-49.72-1.97-73.75-5.765l-3.21 5.563A478.511 478.511 0 001376 670c262.34 0 475-212.665 475-475 0-262.335-212.66-475-475-475-262.34 0-475 212.665-475 475 0 226.413 158.41 415.827 370.45 463.456l3.14-5.448C1064.32 606.66 907 419.202 907 195c0-259.022 209.98-469 469-469s469 209.978 469 469z' fill='%23fff'/%3E%3Cpath d='M1422.44 385.612L1073 990.86l442.48 255.46 364.8-631.855-417.27-240.911-3 5.196 412.08 237.911-358.81 621.469-432.08-249.466 346.44-600.052-5.2-3z' fill='%23488EFB'/%3E%3Cpath d='M-394.3 700.448l249.07-616.72 440.362 498.458L-394.3 700.448z' stroke='%23fff' stroke-width='4'/%3E%3C/g%3E%3Cdefs%3E%3CclipPath id='prefix__clip0'%3E%3Cpath fill='%23fff' d='M0 0h1920v1080H0z'/%3E%3C/clipPath%3E%3C/defs%3E%3C/svg%3E\")`,\n  },\n  rootSigned: {\n    background: '#FFFF',\n  },\n  rootBlack: {\n    display: 'flex',\n    background: '#FFFF',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n}))\n\nexport default useStyles\n","import React from 'react'\nimport { getStatus } from '../services/axios/auth'\nimport { useAppDispatch } from '../services/store/hooks'\nimport { STATUS_CHECK_PERIOD } from './constants'\nimport { enqueueSnackbar } from '../services/slices/app-slice'\nimport { setTimeoutId } from '../services/slices/auth-slice'\n\ntype TUseUpdateStudentStatus = () => { updateStudentStatus: () => void }\n\nconst useUpdateStudentStatus: TUseUpdateStudentStatus = () => {\n  const dispatch = useAppDispatch()\n\n  const request = () => {\n    try {\n      dispatch(getStatus())\n    } catch {\n      dispatch(\n        enqueueSnackbar({\n          info: {\n            type: 'error',\n            title: 'Ошибка обновления статуса',\n            message: 'Сообщи в поддержку',\n          },\n          options: {\n            key: new Date().getTime() + Math.random(),\n            autoHideDuration: 6000,\n          },\n        }),\n      )\n    }\n    dispatch(setTimeoutId(setTimeout(request, STATUS_CHECK_PERIOD)))\n  }\n  return {\n    updateStudentStatus: () => {\n      dispatch(setTimeoutId(setTimeout(request, STATUS_CHECK_PERIOD)))\n    },\n  }\n}\n\nexport default useUpdateStudentStatus\n","import React, { useEffect } from 'react'\nimport loadable from '@loadable/component'\nimport SwiperCore, { Pagination } from 'swiper'\n\nimport { createTheme, ThemeProvider } from '@material-ui/core/styles'\nimport { Routes, Route, Navigate } from 'react-router-dom'\nimport { SnackbarProvider } from 'notistack'\nimport theme from './App.theme'\nimport useStyles from './App.styles'\nimport { useAppDispatch, useAppSelector } from '../../services/store/hooks'\nimport { clearTimeoutId } from '../../services/slices/auth-slice'\nimport useUpdateStudentStatus from '../../utils/useUpdateStudentStatus'\nimport LoadingOverlay from '../Sub/DataTable/LoadingOverlay/LoadingOverlay'\n\n// import { AuthLayout, MainLayout, DiaryLayout, PartnersLayout } from '../Layouts'\n// import { RequireUserAuth, RequireConsultantAuth, RequireVacancyAuth } from '../RequireAuth'\n\n// import OnboardingPage from '../../pages/students/OnboardingPage/OnboardingPage'\n// import OnboardingFormPersonal from '../Main/OnboardingPage/OnboardingFormPersonal/OnboardingFormPersonal'\n// import OnboardingFormExperience from '../Main/OnboardingPage/OnboardingFormExperience/OnboardingFormExperience'\n// import OnboardingFormResume from '../Main/OnboardingPage/OnboardingFormResume/OnboardingFormResume'\n\n// import { LoginPage, RegisterPage, ResetPassword } from '../../pages/auth'\n// import { DiaryPage, FeedPage, MetricsPage, VacanciesPage } from '../../pages/students'\n// import {\n//   ApplicationsPage,\n//   StudentsListPage,\n//   StudentsListPageNew,\n//   StudentsDiaryPage,\n//   ConsultantFeedPage,\n//   ConsultantMetricsPage,\n//   CohortPage,\n// } from '../../pages/consultants'\n// import LandingPage from '../../pages/landing/landing'\n\n// import VacanciesListPage from '../../pages/vacancies/VacanciesListPage/VacanciesListPage'\n// import TestPage from '../../pages/students/TestPage/TestPage'\n// import ContactsPage from '../../pages/students/ContactsPage/ContactsPage'\n// import StatisticsPage from '../../pages/consultants/StatisticsPage/StatisticsPage'\n\n// import { ServerError404Page, ServerError500Page } from '../../pages/ServerErrorPages'\n\nconst OnboardingPage = loadable(() => import('../../pages/students/OnboardingPage/OnboardingPage'), {\n  fallback: <LoadingOverlay />,\n})\nconst OnboardingFormPersonal = loadable(\n  () => import('../Main/OnboardingPage/OnboardingFormPersonal/OnboardingFormPersonal'),\n  { fallback: <LoadingOverlay /> },\n)\nconst OnboardingFormExperience = loadable(\n  () => import('../Main/OnboardingPage/OnboardingFormExperience/OnboardingFormExperience'),\n  { fallback: <LoadingOverlay /> },\n)\nconst OnboardingFormResume = loadable(\n  () => import('../Main/OnboardingPage/OnboardingFormResume/OnboardingFormResume'),\n  { fallback: <LoadingOverlay /> },\n)\n\nconst LoginPage = loadable(() => import('../../pages/auth/LoginPage/LoginPage'), { fallback: <LoadingOverlay /> })\nconst RegisterPage = loadable(() => import('../../pages/auth/RegisterPage/RegisterPage'), {\n  fallback: <LoadingOverlay />,\n})\nconst ResetPassword = loadable(() => import('../../pages/auth/ResetPassword/ResetPassword'), {\n  fallback: <LoadingOverlay />,\n})\n\nconst DiaryPage = loadable(() => import('../../pages/students/DiaryPage/DiaryPage'), { fallback: <LoadingOverlay /> })\nconst FeedPage = loadable(() => import('../../pages/students/FeedPage/FeedPage'), { fallback: <LoadingOverlay /> })\nconst MetricsPage = loadable(() => import('../../pages/students/MetricsPage/MetricsPage'), {\n  fallback: <LoadingOverlay />,\n})\nconst VacanciesPage = loadable(() => import('../../pages/students/VacanciesPage/VacanciesPage'), {\n  fallback: <LoadingOverlay />,\n})\n\nconst ApplicationsPage = loadable(() => import('../../pages/consultants/ApplicationsPage/ApplicationsPage'), {\n  fallback: <LoadingOverlay />,\n})\nconst StudentsListPage = loadable(() => import('../../pages/consultants/StudentsListPage/StudentsListPage'), {\n  fallback: <LoadingOverlay />,\n})\nconst StudentsListPageNew = loadable(() => import('../../pages/consultants/StudentsListPageNew/StudentsListPageNew'), {\n  fallback: <LoadingOverlay />,\n})\nconst StudentsDiaryPage = loadable(() => import('../../pages/consultants/StudentsDiaryPage/StudentsDiaryPage'), {\n  fallback: <LoadingOverlay />,\n})\nconst ConsultantFeedPage = loadable(() => import('../../pages/consultants/ConsultantFeedPage/ConsultantFeedPage'), {\n  fallback: <LoadingOverlay />,\n})\nconst ConsultantMetricsPage = loadable(\n  () => import('../../pages/consultants/ConsultantMetricsPage/ConsultantMetricsPage'),\n  { fallback: <LoadingOverlay /> },\n)\nconst CohortPage = loadable(() => import('../../pages/consultants/CohortPage/CohortPage'), {\n  fallback: <LoadingOverlay />,\n})\nconst LandingPage = loadable(() => import('../../pages/landing/landing'), { fallback: <LoadingOverlay /> })\nconst VacanciesListPage = loadable(() => import('../../pages/vacancies/VacanciesListPage/VacanciesListPage'), {\n  fallback: <LoadingOverlay />,\n})\nconst TestPage = loadable(() => import('../../pages/students/TestPage/TestPage'), { fallback: <LoadingOverlay /> })\nconst ContactsPage = loadable(() => import('../../pages/students/ContactsPage/ContactsPage'), {\n  fallback: <LoadingOverlay />,\n})\nconst StatisticsPage = loadable(() => import('../../pages/consultants/StatisticsPage/StatisticsPage'), {\n  fallback: <LoadingOverlay />,\n})\nconst ServerError404Page = loadable(() => import('../../pages/ServerErrorPages/ServerError404Page/ServerError404Page'))\nconst ServerError500Page = loadable(() => import('../../pages/ServerErrorPages/ServerError500Page/ServerError500Page'))\n\nconst AuthLayout = loadable(() => import('../Layouts/AuthLayout/AuthLayout'))\nconst MainLayout = loadable(() => import('../Layouts/MainLayout/MainLayout'))\nconst DiaryLayout = loadable(() => import('../Layouts/DiaryLayout/DiaryLayout'))\nconst PartnersLayout = loadable(() => import('../Layouts/PartnersLayout/PartnersLayout'))\nconst RequireUserAuth = loadable(() => import('../RequireAuth/RequireUserAuth/RequireUserAuth'))\nconst RequireConsultantAuth = loadable(() => import('../RequireAuth/RequireConsultantAuth/RequireConsultantAuth'))\nconst RequireVacancyAuth = loadable(() => import('../RequireAuth/RequireVacancyAuth/RequireVacancyAuth'))\n\nSwiperCore.use([Pagination])\n\nfunction App() {\n  const classes = useStyles()\n  const { role, timeoutId } = useAppSelector((store) => store.auth)\n  const dispatch = useAppDispatch()\n  const { updateStudentStatus } = useUpdateStudentStatus()\n  const themeOptions = React.useMemo(\n    () =>\n      createTheme({\n        palette: {\n          ...theme.palette,\n        },\n        typography: {\n          ...theme.typography,\n        },\n        overrides: {\n          MuiButton: {\n            root: {\n              width: '100%',\n              minHeight: '50px',\n              backgroundColor: theme.palette.button.primary,\n              color: theme.palette.button.primaryTextColor,\n              '&:hover': {\n                backgroundColor: theme.palette.button.primaryHover,\n              },\n            },\n            label: {\n              color: theme.palette.button.primaryTextColor,\n            },\n            textPrimary: {\n              '&:hover': {\n                backgroundColor: 'none',\n              },\n            },\n          },\n        },\n      }),\n    [theme.palette],\n  )\n  const [snack, setSnack] = React.useState({\n    open: false,\n    header: 'Форма отправлена',\n    message: '',\n  })\n\n  const { REACT_APP_IS_DEVTEST_SERVER } = process.env\n\n  // Слушаем пользователя и если аккаунт юзера, вешаем опрашивалку\n  useEffect(() => {\n    if (role === 'user') updateStudentStatus()\n    return () => {\n      clearTimeout(timeoutId)\n      dispatch(clearTimeoutId())\n    }\n  }, [role])\n\n  return (\n    <ThemeProvider theme={themeOptions}>\n      <SnackbarProvider>\n        <Routes>\n          <Route index path=\"/\" element={<LandingPage />} />\n          {/* Роуты авторизации и онбординга (с лэйаутом AuthLayout: без шапки, с футером) */}\n          <Route path=\"/\" element={<AuthLayout />}>\n            <Route\n              path=\"sign-in\"\n              element={\n                <main className={classes.root}>\n                  <LoginPage />\n                </main>\n              }\n            />\n            <Route\n              path=\"sign-up\"\n              element={\n                <main className={classes.root}>\n                  <RegisterPage />\n                </main>\n              }\n            />\n            <Route\n              path=\"reset-password\"\n              element={\n                <main className={classes.root}>\n                  <ResetPassword />\n                </main>\n              }\n            />\n          </Route>\n          <Route path=\"onboarding\">\n            <Route index element={<Navigate to=\"/onboarding/personal-info\" />} />\n            <Route\n              path=\"personal-info\"\n              element={\n                <RequireUserAuth>\n                  <main className={classes.rootSigned}>\n                    <OnboardingPage title=\"Заполни все поля на странице, чтобы начать работу с воронкой трудоустройства\">\n                      <OnboardingFormPersonal />\n                    </OnboardingPage>\n                  </main>\n                </RequireUserAuth>\n              }\n            />\n            <Route\n              path=\"experience\"\n              element={\n                <RequireUserAuth>\n                  <main className={classes.rootSigned}>\n                    <OnboardingPage title=\"После сохранения ты сможешь изменить информацию о себе в настройках\">\n                      <OnboardingFormExperience />\n                    </OnboardingPage>\n                  </main>\n                </RequireUserAuth>\n              }\n            />\n            <Route\n              path=\"resume\"\n              element={\n                <RequireUserAuth>\n                  <main className={classes.rootSigned}>\n                    <OnboardingPage\n                      title={[\n                        'Для откликов на партнёрские вакансии необходимо загрузить своё резюме и контакты для связи.',\n                        <br />,\n                        'Ты можешь сделать это позднее в редактировании профиля',\n                      ]}\n                    >\n                      <OnboardingFormResume />\n                    </OnboardingPage>\n                  </main>\n                </RequireUserAuth>\n              }\n            />\n          </Route>\n          {/* Роуты страниц пользователя (с лэйаутом DiaryLayout: с шапкой, без футера, с сайдбаром) */}\n          <Route path=\"/\" element={<DiaryLayout snack={snack} setSnack={setSnack} />}>\n            <Route\n              index\n              element={\n                <RequireUserAuth>\n                  <DiaryPage setSnack={setSnack} />\n                </RequireUserAuth>\n              }\n            />\n            <Route\n              path=\"diary\"\n              element={\n                <RequireUserAuth>\n                  <DiaryPage setSnack={setSnack} />\n                </RequireUserAuth>\n              }\n            />\n            {REACT_APP_IS_DEVTEST_SERVER && (\n              <Route\n                path=\"test-page\"\n                element={\n                  <RequireUserAuth>\n                    <TestPage />\n                  </RequireUserAuth>\n                }\n              />\n            )}\n            <Route\n              path=\"feed\"\n              element={\n                <RequireUserAuth>\n                  <FeedPage setSnack={setSnack} />\n                </RequireUserAuth>\n              }\n            />\n            <Route\n              path=\"contacts\"\n              element={\n                <RequireUserAuth>\n                  <ContactsPage setSnack={setSnack} />\n                </RequireUserAuth>\n              }\n            />\n            <Route\n              path=\"metrics\"\n              element={\n                <RequireUserAuth>\n                  <MetricsPage setSnack={setSnack} />\n                </RequireUserAuth>\n              }\n            />\n          </Route>\n          <Route path=\"/vacancies\" element={<PartnersLayout snack={snack} setSnack={setSnack} />}>\n            <Route\n              index\n              element={\n                <RequireUserAuth>\n                  <VacanciesPage setSnack={setSnack} />\n                </RequireUserAuth>\n              }\n            />\n          </Route>\n          {/* Роуты страниц консультанта */}к\n          <Route path=\"/consultant\" element={<MainLayout snack={snack} setSnack={setSnack} />}>\n            <Route index element={<Navigate to=\"/consultant/applications\" />} />\n            <Route\n              path=\"applications\"\n              element={\n                <RequireConsultantAuth>\n                  <ApplicationsPage setSnack={setSnack} />\n                </RequireConsultantAuth>\n              }\n            />\n            <Route\n              path=\"test-page\"\n              element={\n                <RequireConsultantAuth>\n                  <TestPage />\n                </RequireConsultantAuth>\n              }\n            />\n            <Route\n              path=\"students\"\n              element={\n                <RequireConsultantAuth>\n                  <StudentsListPageNew setSnack={setSnack} />\n                </RequireConsultantAuth>\n              }\n            />\n            <Route\n              path=\"students2\"\n              element={\n                <RequireConsultantAuth>\n                  <StudentsListPage setSnack={setSnack} />\n                </RequireConsultantAuth>\n              }\n            />\n            <Route\n              path=\"statistics\"\n              element={\n                <RequireConsultantAuth>\n                  <StatisticsPage setSnack={setSnack} />\n                </RequireConsultantAuth>\n              }\n            />\n            <Route\n              path=\"feed\"\n              element={\n                <RequireConsultantAuth>\n                  <ConsultantFeedPage setSnack={setSnack} />\n                </RequireConsultantAuth>\n              }\n            >\n              <Route\n                path=\":studentId\"\n                element={\n                  <RequireConsultantAuth>\n                    <ConsultantFeedPage setSnack={setSnack} />\n                  </RequireConsultantAuth>\n                }\n              />\n            </Route>\n            <Route\n              path=\"diary\"\n              element={\n                <RequireConsultantAuth>\n                  <StudentsDiaryPage setSnack={setSnack} />\n                </RequireConsultantAuth>\n              }\n            />\n            <Route\n              path=\"metrics\"\n              element={\n                <RequireConsultantAuth>\n                  <ConsultantMetricsPage />\n                </RequireConsultantAuth>\n              }\n            />\n            <Route\n              path=\"cohorts\"\n              element={\n                <RequireConsultantAuth>\n                  <CohortPage setSnack={setSnack} />\n                </RequireConsultantAuth>\n              }\n            />\n          </Route>\n          {/* Роуты страницы менеджера по вакансиям */}\n          <Route path=\"/vacancies\" element={<MainLayout snack={snack} setSnack={setSnack} />}>\n            <Route index element={<Navigate to=\"/vacancies/list\" />} />\n            <Route\n              path=\"list\"\n              element={\n                <RequireVacancyAuth>\n                  <VacanciesListPage setSnack={setSnack} />\n                </RequireVacancyAuth>\n              }\n            />\n          </Route>\n          <Route path=\"500\" element={<ServerError500Page />} />\n          {/* Все нераспознанные роуты отправляем на 404 */}\n          <Route path=\"*\" element={<ServerError404Page />} />\n        </Routes>\n      </SnackbarProvider>\n    </ThemeProvider>\n  )\n}\n\nexport default App\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import React from 'react'\nimport './index.css'\nimport * as Sentry from '@sentry/react'\nimport { BrowserTracing } from '@sentry/tracing'\n// Import Swiper styles\nimport 'swiper/swiper-bundle.min.css'\nimport 'swiper/swiper.min.css'\nimport ReactDOM from 'react-dom'\nimport { BrowserRouter } from 'react-router-dom'\nimport { Provider } from 'react-redux'\nimport { setupStore } from './services/store/store'\nimport App from './components/App/App'\nimport reportWebVitals from './reportWebVitals'\n\nconst store = setupStore()\n\nconst { REACT_APP_SENTRY_PROJECT, REACT_APP_SENTRY_RELEASE } = process.env\n\nif (REACT_APP_SENTRY_PROJECT) {\n  // eslint-disable-next-line no-nested-ternary\n  const dsnUrl = process.env.REACT_APP_SENTRY_DSN\n  Sentry.init({\n    dsn: dsnUrl,\n    integrations: [new BrowserTracing()],\n    release: REACT_APP_SENTRY_RELEASE,\n    // eslint-disable-next-line no-nested-ternary\n    environment: REACT_APP_SENTRY_PROJECT !== 'students-diary-front-prod' ? 'dev' : 'prod',\n    // На продакшене debug выключим, чтобы не засорял консоль\n    debug: REACT_APP_SENTRY_PROJECT !== 'students-diary-front-prod',\n    // Диалоговое окно с \"введите что произошло\"\n    // eslint-disable-next-line no-unused-vars\n    beforeSend(event, hint) {\n      // Check if it is an exception, and if so, show the report dialog\n      if (event.exception) {\n        Sentry.showReportDialog({ eventId: event.event_id })\n      }\n      return event\n    },\n    // We recommend adjusting this value in production, or using tracesSampler\n    // for finer control\n    // Попробую 0.7, чтобы не ловить 429 ошибку\n    tracesSampleRate: 0.7,\n    // Опция, чтобы не крашиться из-за ошибки ResizeObserver\n    // Это какой-то редкий баг некоторых версий бразуеров\n    ignoreErrors: ['ResizeObserver loop limit exceeded'],\n  })\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <Sentry.ErrorBoundary fallback={<p>Что-то пошло не так. Обновите страницу</p>}>\n      <BrowserRouter>\n        <Provider store={store}>\n          <App />\n        </Provider>\n      </BrowserRouter>\n    </Sentry.ErrorBoundary>\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n","import { createAsyncThunk } from '@reduxjs/toolkit'\nimport { AxiosError } from 'axios'\nimport {\n  API_HR_PART_VACANCY_ENDPOINT,\n  API_HR_PART_DIRECTORY_ENDPOINT,\n  API_HR_PART_VACANCY_BY_ID_ENDPOINT,\n  API_STUDENT_BY_ID_ENDPOINT,\n  API_HR_PART_VACANCY_INFO_ENDPOINT,\n} from '../../utils/constants'\nimport api from './settings'\nimport {\n  IDirectoriesResponse,\n  IParams,\n  TGetVacanciesData,\n  TGetVacancyInfo,\n  TPatchData,\n  TPatchStudentData,\n} from '../types/vacacies-page-types/vacancies-page-types'\n\nexport const getVacanciesList = createAsyncThunk(\n  'vacancies-page/getVacanciesList',\n  async (data: TGetVacanciesData, { rejectWithValue }) => {\n    try {\n      const { paramsSerializer } = data\n      const response = await api.get(API_HR_PART_VACANCY_ENDPOINT, {\n        params: { ...data.hook.filters },\n        paramsSerializer,\n      })\n      // return Promise.resolve(response.data)\n      return response?.data\n    } catch (e) {\n      const err = e as AxiosError\n      return rejectWithValue(err?.response)\n    }\n  },\n)\n\nexport const getDirectories = createAsyncThunk(\n  'vacancies-page/getDirectories',\n  async (_: void, { rejectWithValue }) => {\n    try {\n      const response = await api.get(API_HR_PART_DIRECTORY_ENDPOINT)\n      const rawData: IDirectoriesResponse = response?.data\n      const courses = rawData?.courses\n      const statuses = rawData?.vacancies_status?.map((s) => ({ ...s, label: s?.value }))\n      const studentStatuses = rawData?.student_status?.map((s) => ({ ...s, label: s?.value }))\n      const currencies = rawData?.currencies?.map((currency) => ({\n        id: currency.id,\n        name: currency.name,\n        icon: currency.label,\n      }))\n      const employmentItems = rawData?.employment?.map((e) => ({ ...e, name: e?.value }))\n      const workFormatItems = rawData?.work_format?.map((w) => ({ ...w, name: w?.value }))\n      const jobApplicationItems = rawData?.design_formats?.map((d) => ({ ...d, name: d?.value }))\n      const experienceItems = rawData?.experience_types\n      const educationItems = rawData?.education_types\n      // return Promise.resolve(response.data)\n      return {\n        filters: {\n          courses,\n          statuses,\n        },\n        directoriesData: {\n          courses,\n          statuses,\n          studentStatuses,\n          currencies,\n          employmentItems,\n          workFormatItems,\n          jobApplicationItems,\n          experienceItems,\n          educationItems,\n        },\n      }\n    } catch (e) {\n      const typedError = e as AxiosError\n      return rejectWithValue(typedError?.response)\n    }\n  },\n)\n\nexport const patchVacancyStatus = createAsyncThunk(\n  'vacancies-page/patchVacancyStatus',\n  async (data: TPatchData, { rejectWithValue }) => {\n    try {\n      const response = await api.patch(API_HR_PART_VACANCY_BY_ID_ENDPOINT(data.vacancyId), {\n        vacancy_status: data.status.status,\n      })\n      return {\n        updatedRow: response.data,\n      }\n    } catch (e) {\n      const typedError = e as AxiosError\n      return rejectWithValue(typedError?.response)\n    }\n  },\n)\n\nexport const patchStudentStatus = createAsyncThunk(\n  'vacancies-page/patchStudentStatus',\n  async (data: TPatchStudentData, { rejectWithValue }) => {\n    try {\n      const response = await api.patch(API_STUDENT_BY_ID_ENDPOINT(data.studentId), data.status)\n      return {\n        updatedRow: response.data,\n      }\n    } catch (e) {\n      const typedError = e as AxiosError\n      return rejectWithValue(typedError?.response)\n    }\n  },\n)\n\nexport const getInfo = createAsyncThunk(\n  'vacancies-page/getInfo',\n  async (data: TGetVacancyInfo, { rejectWithValue }) => {\n    const params: IParams = {}\n    if (data.searchQuery) params.search = data.searchQuery\n    try {\n      const response = await api.get(API_HR_PART_VACANCY_INFO_ENDPOINT(data.id), {\n        params,\n      })\n      return response.data\n    } catch (e) {\n      const typedError = e as AxiosError\n      return rejectWithValue(typedError?.response)\n    }\n  },\n)\n","import { createAsyncThunk } from '@reduxjs/toolkit'\nimport { AxiosError } from 'axios'\nimport {\n  API_VACANCIES_ENDPOINT,\n  API_CURRENCY_DIRECTORY_ENDPOINT,\n  API_VACANCY_BY_ID_ENDPOINT,\n} from '../../utils/constants'\nimport showAchievementsNotifications from '../../utils/showAchievementsNotifications'\nimport api from './settings'\n\nexport const getResponses = createAsyncThunk('diary/getResponses', async (_: void, { rejectWithValue }) => {\n  try {\n    const response = await api.get(API_VACANCIES_ENDPOINT)\n    return response.data\n  } catch (error) {\n    const typedError = error as AxiosError\n    return rejectWithValue(typedError?.response?.data)\n  }\n})\n\nexport const getCurrencies = createAsyncThunk('diary/getCurrencies', async (_: void, { rejectWithValue }) => {\n  try {\n    const response = await api.get(API_CURRENCY_DIRECTORY_ENDPOINT)\n    return response.data\n  } catch (error) {\n    const typedError = error as AxiosError\n    return rejectWithValue(typedError?.response?.data)\n  }\n})\n\nexport const createResponse = createAsyncThunk(\n  'diary/createResponse',\n  async (data: FormData, { dispatch, rejectWithValue }) => {\n    try {\n      const response = await api.post(API_VACANCIES_ENDPOINT, data)\n      showAchievementsNotifications(response.data?.achievements, dispatch)\n      return response.data\n    } catch (error) {\n      const typedError = error as AxiosError\n      return rejectWithValue(typedError?.response?.data)\n    }\n  },\n)\n\nexport const patchResponse = createAsyncThunk(\n  'diary/patchResponse',\n  async (rawData: { id: number; data: { [value: string]: string } }, { dispatch, rejectWithValue }) => {\n    try {\n      const { id, data } = rawData\n      const response = await api.patch(API_VACANCY_BY_ID_ENDPOINT(id), data)\n      showAchievementsNotifications(response.data?.achievements, dispatch)\n      return response.data\n    } catch (error) {\n      const typedError = error as AxiosError\n      return rejectWithValue(typedError?.response?.data)\n    }\n  },\n)\n\nexport const deleteResponse = createAsyncThunk('diary/deleteResponse', async (id: string, { rejectWithValue }) => {\n  try {\n    await api.delete(API_VACANCY_BY_ID_ENDPOINT(id))\n    return id\n  } catch (error) {\n    const typedError = error as AxiosError\n    return rejectWithValue(typedError?.response?.data)\n  }\n})\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux'\nimport type { TRootState, AppDispatch } from './store'\n\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\nexport const useAppDispatch = () => useDispatch<AppDispatch>()\nexport const useAppSelector: TypedUseSelectorHook<TRootState> = useSelector\n","import { createSlice } from '@reduxjs/toolkit'\nimport {\n  createPassword,\n  getProfile,\n  getStatus,\n  postOnboarding,\n  resetPassword,\n  signIn,\n  signOut,\n  signUp,\n} from '../axios/auth'\nimport { IAuthState, IAPIError, IRequestInfo, TProfile } from '../types/auth/auth-types'\n\nconst initialRequestInfoState: IRequestInfo = {\n  status: 'idle',\n  isError: false,\n  errorInfo: null,\n}\n\nexport const initialState: IAuthState = {\n  isLoggedIn: false,\n  profile: undefined,\n  role: null,\n  timeoutId: undefined,\n  signInRequest: initialRequestInfoState,\n  signUpRequest: initialRequestInfoState,\n  signOutRequest: initialRequestInfoState,\n  resetPassRequest: initialRequestInfoState,\n  createPassRequest: initialRequestInfoState,\n  getProfileRequest: initialRequestInfoState,\n  postOnboardingRequest: initialRequestInfoState,\n  getStatusRequest: initialRequestInfoState,\n}\n\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  reducers: {\n    setTimeoutId(state, action) {\n      state.timeoutId = action.payload\n    },\n    clearTimeoutId(state) {\n      state.timeoutId = undefined\n    },\n    setUnlogged(state) {\n      state.isLoggedIn = false\n      state.profile = undefined\n      state.role = null\n    },\n    setProfile(state, action) {\n      state.profile = action.payload\n    },\n    clearRequestProfile(state) {\n      state.getProfileRequest = { ...initialRequestInfoState }\n    },\n    setVacation(state, action) {\n      state.getProfileRequest = {\n        ...state,\n        status: 'idle',\n        isError: true,\n        errorInfo: {\n          detail: 'vacation',\n          end_date: action.payload,\n          message: '',\n        },\n      }\n      state.role = null\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      // SIGN IN\n      .addCase(signIn.pending, (state) => {\n        state.signInRequest.status = 'pending'\n        state.signInRequest.isError = false\n        state.signInRequest.errorInfo = null\n      })\n      .addCase(signIn.fulfilled, (state, action) => {\n        state.signInRequest.status = 'succeeded'\n        state.isLoggedIn = true\n        state.role = action.payload?.role.toLowerCase()\n      })\n      .addCase(signIn.rejected, (state, action) => {\n        state.signInRequest.isError = true\n        state.signInRequest.errorInfo = action.payload as IAPIError\n        state.signInRequest.status = 'failed'\n      })\n\n      // SIGN UP\n      .addCase(signUp.pending, (state) => {\n        state.signUpRequest.status = 'pending'\n        state.signUpRequest.isError = false\n        state.signUpRequest.errorInfo = null\n      })\n      .addCase(signUp.fulfilled, (state, action) => {\n        state.signUpRequest.status = 'succeeded'\n      })\n      .addCase(signUp.rejected, (state, action) => {\n        state.signUpRequest.isError = true\n        state.signUpRequest.errorInfo = action.payload as IAPIError\n        state.signUpRequest.status = 'failed'\n      })\n\n      // SIGN OUT\n      .addCase(signOut.pending, (state) => {\n        state.signOutRequest.status = 'pending'\n        state.signOutRequest.isError = false\n        state.signOutRequest.errorInfo = null\n      })\n      .addCase(signOut.fulfilled, (state) => {\n        state.isLoggedIn = false\n        state.profile = undefined\n        state.role = null\n        state.signOutRequest.status = 'succeeded'\n      })\n      .addCase(signOut.rejected, (state, action) => {\n        state.isLoggedIn = false\n        state.profile = undefined\n        state.role = null\n        state.signOutRequest.isError = true\n        state.signOutRequest.errorInfo = action.payload as IAPIError\n        state.signOutRequest.status = 'failed'\n      })\n\n      // RESET PASSWORD\n      .addCase(resetPassword.pending, (state) => {\n        state.resetPassRequest.status = 'pending'\n        state.resetPassRequest.isError = false\n        state.resetPassRequest.errorInfo = null\n      })\n      .addCase(resetPassword.fulfilled, (state, action) => {\n        state.resetPassRequest.status = 'succeeded'\n      })\n      .addCase(resetPassword.rejected, (state, action) => {\n        state.resetPassRequest.isError = true\n        state.resetPassRequest.errorInfo = action.payload as IAPIError\n        state.resetPassRequest.status = 'failed'\n      })\n\n      // CREATE PASSWORD\n      .addCase(createPassword.pending, (state) => {\n        state.createPassRequest.status = 'pending'\n        state.createPassRequest.isError = false\n        state.createPassRequest.errorInfo = null\n      })\n      .addCase(createPassword.fulfilled, (state, action) => {\n        state.createPassRequest.status = 'succeeded'\n      })\n      .addCase(createPassword.rejected, (state, action) => {\n        state.createPassRequest.isError = true\n        state.createPassRequest.errorInfo = action.payload as IAPIError\n        state.createPassRequest.status = 'failed'\n      })\n\n      // GET PROFILE\n      .addCase(getProfile.pending, (state) => {\n        state.getProfileRequest.status = 'pending'\n        state.getProfileRequest.isError = false\n        state.getProfileRequest.errorInfo = null\n      })\n      .addCase(getProfile.fulfilled, (state, action) => {\n        state.getProfileRequest.status = 'succeeded'\n        state.profile = { ...action.payload }\n      })\n      .addCase(getProfile.rejected, (state, action) => {\n        const payload = action.payload as IAPIError\n        if (payload?.end_date) {\n          state.profile = undefined\n        } else {\n          state.profile = null\n        }\n        state.getProfileRequest.isError = true\n        state.getProfileRequest.errorInfo = payload\n        state.getProfileRequest.status = 'failed'\n      })\n\n      // GET STATUS\n      .addCase(getStatus.pending, (state) => {\n        state.getStatusRequest.status = 'pending'\n        state.getStatusRequest.isError = false\n        state.getStatusRequest.errorInfo = null\n      })\n      .addCase(getStatus.fulfilled, (state, action) => {\n        state.getStatusRequest.status = 'succeeded'\n        if (state.profile) state.profile = { ...state.profile, status: action.payload[0].value }\n      })\n      .addCase(getStatus.rejected, (state, action) => {\n        const payload = action.payload as IAPIError\n        if (payload?.end_date) {\n          state.profile = undefined\n        } else {\n          state.profile = null\n        }\n        state.getStatusRequest.isError = true\n        state.getStatusRequest.errorInfo = payload\n        state.getStatusRequest.status = 'failed'\n      })\n\n      // POST ONBOARDING\n      .addCase(postOnboarding.pending, (state) => {\n        state.postOnboardingRequest.status = 'pending'\n        state.postOnboardingRequest.isError = false\n        state.postOnboardingRequest.errorInfo = null\n      })\n      .addCase(postOnboarding.fulfilled, (state, action) => {\n        state.postOnboardingRequest.status = 'succeeded'\n        state.profile = action.payload\n      })\n      .addCase(postOnboarding.rejected, (state, action) => {\n        state.postOnboardingRequest.status = 'failed'\n        state.postOnboardingRequest.isError = true\n        state.postOnboardingRequest.errorInfo = action.payload as IAPIError\n      })\n  },\n})\n\nexport const { setUnlogged, setProfile, clearRequestProfile, setVacation, setTimeoutId, clearTimeoutId } =\n  authSlice.actions\n\nexport default authSlice\n","const theme = {\n  typography: {\n    fontFamily: [\n      'YS Display',\n      'YS Text',\n      '-apple-system',\n      'BlinkMacSystemFont',\n      'Arial',\n      'Helvetica',\n      'sans-serif',\n    ].join(','),\n    color: '#1a1b22',\n    h1: {\n      fontFamily: ['YS Display', '-apple-system', 'BlinkMacSystemFont', 'Arial', 'Helvetica', 'sans-serif'].join(','),\n      fontSize: '34px',\n      lineHeight: '40px',\n    },\n    h2: {\n      fontFamily: ['YS Display', '-apple-system', 'BlinkMacSystemFont', 'Arial', 'Helvetica', 'sans-serif'].join(','),\n      fontSize: '24px',\n      lineHeight: '32px',\n    },\n    h3: {\n      fontFamily: ['YS Display', '-apple-system', 'BlinkMacSystemFont', 'Arial', 'Helvetica', 'sans-serif'].join(','),\n      fontSize: '20px',\n      lineHeight: '24px',\n    },\n    subtitle1: {\n      fontFamily: ['YS Text', '-apple-system', 'BlinkMacSystemFont', 'Arial', 'Helvetica', 'sans-serif'].join(','),\n      fontSize: '18px',\n      lineHeight: '24px',\n    },\n    body1: {\n      fontFamily: ['YS Display', '-apple-system', 'BlinkMacSystemFont', 'Arial', 'Helvetica', 'sans-serif'].join(','),\n      fontSize: '16px',\n      lineHeight: '20px',\n    },\n    body2: {\n      // для использования в качестве меток инпутбоксов в формах\n      fontFamily: ['YS Text', '-apple-system', 'BlinkMacSystemFont', 'Arial', 'Helvetica', 'sans-serif'].join(','),\n      fontSize: '13px',\n      lineHeight: '16px',\n      fontWeight: 500,\n      '&.MuiTypography-root': {\n        fontFamily: ['YS Text', '-apple-system', 'BlinkMacSystemFont', 'Arial', 'Helvetica', 'sans-serif'].join(','),\n        fontSize: '13px',\n        lineHeight: '16px',\n        fontWeight: 500,\n      },\n    },\n    caption1: {\n      fontFamily: ['YS Text', '-apple-system', 'BlinkMacSystemFont', 'Arial', 'Helvetica', 'sans-serif'].join(','),\n      fontSize: '13px',\n      lineHeight: '14px',\n    },\n    caption2: {\n      fontFamily: ['YS Text', '-apple-system', 'BlinkMacSystemFont', 'Arial', 'Helvetica', 'sans-serif'].join(','),\n      fontSize: '13px',\n      lineHeight: '14px',\n    },\n  },\n  palette: {\n    type: 'light',\n    text: {\n      primary: '#1A1B22',\n      secondary: '#797981',\n    },\n    background: {\n      default: '#FFFFFF',\n    },\n    button: {\n      primary: '#488EFB',\n      primaryTextColor: '#FFFFFF',\n      primaryHover: '#1D6BF3',\n    },\n    link: {\n      primary: '#488EFB',\n      primaryTextColor: '#FFFFFF',\n      primaryHover: '#1D6BF3',\n    },\n  },\n}\n\nexport default theme\n","import React from 'react'\nimport { AnyAction, ThunkDispatch } from '@reduxjs/toolkit'\nimport { enqueueSnackbar } from '../services/slices/app-slice'\nimport { ApiStage } from '../services/types/achievements/achievements-types'\n\nconst showAchievementsNotifications = (\n  achievements: Array<ApiStage>,\n  dispatch: ThunkDispatch<unknown, unknown, AnyAction>,\n) => {\n  if (achievements) {\n    achievements.forEach((achievement, index) => {\n      setTimeout(() => {\n        dispatch(\n          enqueueSnackbar({\n            info: {\n              type: 'achievement',\n              title: achievement.name,\n              message: achievement.condition_text,\n              image: achievement.success_image,\n            },\n            options: {\n              key: new Date().getTime() + Math.random(),\n              autoHideDuration: 6000,\n            },\n          }),\n        )\n      }, 500 * (index + 1))\n    })\n  }\n}\n\nexport default showAchievementsNotifications\n","import { createAsyncThunk } from '@reduxjs/toolkit'\nimport { AxiosError } from 'axios'\nimport { API_STATS_ENDPOINT } from '../../utils/constants'\nimport api from './settings'\n\nexport const getNotifications = createAsyncThunk(\n  'metrics/getNotifications',\n  async (url: string, { rejectWithValue }) => {\n    try {\n      const response = await api.get(url)\n      return response.data\n    } catch (error) {\n      const typedError = error as AxiosError\n      return rejectWithValue(typedError?.response?.data)\n    }\n  },\n)\n\nexport const getStats = createAsyncThunk('metrics/getStats', async (id: string | undefined, { rejectWithValue }) => {\n  try {\n    let url = API_STATS_ENDPOINT\n    if (id) url += `?profile_id=${id}`\n    const response = await api.get(url)\n    return response.data\n  } catch (error) {\n    const typedError = error as AxiosError\n    return rejectWithValue(typedError?.response?.data)\n  }\n})\n","import { createSlice } from '@reduxjs/toolkit'\nimport { Notification } from '../types/global-types'\n\ninterface IAppState {\n  achievementNotifications: Array<Notification>\n}\n\nexport const initialState: IAppState = {\n  achievementNotifications: [],\n}\n\nconst appSlice = createSlice({\n  name: 'app',\n  initialState,\n  reducers: {\n    enqueueSnackbar(state, action) {\n      let notification = action.payload\n      const key = notification.options && notification.options.key\n      notification = {\n        ...notification,\n        key: key || new Date().getTime() + Math.random(),\n      }\n      state.achievementNotifications.push(notification)\n    },\n    closeSnackbar(state, action) {\n      // const dismissAll = !action.payload.key\n      // state.achievementNotifications = state.achievementNotifications.map((notification) =>\n      //   dismissAll || notification.key === action.payload.key\n      //     ? { ...notification, dismissed: true }\n      //     : { ...notification },\n      // )\n      if (!action.payload) {\n        state.achievementNotifications = []\n      } else {\n        state.achievementNotifications = state.achievementNotifications.filter(\n          (notification) => notification.key !== action.payload,\n        )\n      }\n    },\n    removeSnackbar(state, action) {\n      const dismissAll = !action.payload\n      state.achievementNotifications = state.achievementNotifications.map((notification) =>\n        dismissAll || notification.key === action.payload ? { ...notification, dismissed: true } : { ...notification },\n      )\n    },\n  },\n})\n\nexport const { enqueueSnackbar, closeSnackbar, removeSnackbar } = appSlice.actions\n\nexport default appSlice\n","export const RELEASE = '1.0.0'\nexport const PROJECT_NAME = 'Карьерный трекер'\nexport const PROJECT_START_DATE = new Date(2021, 10, 1)\n\nexport const PASSWORD_REG_EXP = /^[a-zA-Z0-9-._!\"`'#%&,:;<>=@{}~$()*+|/\\\\?[\\]^ ]*$/\n\nexport const ONBOARDING_COHORT_EXP = /^\\d+$/\nexport const NAME_FIELDS_REG_EXP = /^[A-ZА-ЯЁ -]*$/i\nexport const CITY_FIELDS_REG_EXP = /^[A-ZА-ЯЁ0-9 .,\\-\"]*$/i\nexport const OTHER_TEXT_FIELDS_REG_EXP = /^[A-ZА-ЯЁ0-9 \\-\"]*$/i\nexport const INSTITUTION_TEXT_FIELDS_REG_EXP = /^[A-ZА-ЯЁ0-9 .\\-\"]*$/i\nexport const NAME_FIELDS_TIP =\n  'Используй в поле только русские буквы А-Я, а-я, латинские буквы A-Z, a-z, пробел и знак дефиса \"-\"'\nexport const CITY_FIELDS_TIP =\n  'Используй в поле только русские буквы А-Я, а-я, латинские буквы A-Z, a-z, цифры 0-9, точку, запятую, знак дефиса \"-\" и пробел'\nexport const OTHER_TEXT_FIELDS_TIP =\n  'Используй в поле только русские буквы А-Я, а-я, латинские буквы A-Z, a-z, цифры 0-9, знак дефиса \"-\", пробел и кавычки'\nexport const INSTITUTION_TEXT_FIELDS_TIP =\n  'Используй в поле только русские буквы А-Я, а-я, латинские буквы A-Z, a-z, цифры 0-9, знак дефиса \"-\", пробел, кавычки и точку'\nexport const URL_REG_EXP =\n  /^$|((https?):\\/\\/)?(www.)?[a-z0-9]+(\\.[a-z]{2,}){1,3}(#?\\/?[a-zA-Z0-9#]+)*\\/?(\\?[a-zA-Z0-9-_]+=[a-zA-Z0-9-%]+&?)?.*$/\n\nexport const CONSULTANT_ROLES = ['admin', 'consultant']\nexport const VACANCY_MANAGER_ROLES = ['vacancy_manager']\nexport const USER_ROLES = ['user']\n\nexport const API_SIGN_IN_ENDPOINT = '/token'\nexport const API_SIGN_OUT_ENDPOINT = '/signout'\nexport const API_SIGN_UP_ENDPOINT = '/register'\nexport const API_TOKEN_REFRESH_ENDPOINT = '/token/refresh'\nexport const API_REFRESH_ENDPOINT = '/refresh'\nexport const API_PASSWORD_RECOVERY_ENDPOINT = '/password_reset'\nexport const API_CREATE_NEW_PASSWORD_ENDPOINT = '/password_resetconfirm/ '\nexport const API_CONSULTANT_DESCRIPTION_ENDPOINT = '/consultations/themes'\nexport const API_CONSULTATION_ENDPOINT = '/consultations'\nexport const API_RECOMMENDATION_ENDPOINT = '/recommendations'\nexport const API_ADVICE_ENDPOINT = '/advice'\nexport const API_INTERVIEWS_ENDPOINT = '/interviews'\nexport const API_ONBOARDING_DIRECTORY_ENDPOINT = '/onboarding-directory'\nexport const API_CURRENCY_DIRECTORY_ENDPOINT = '/currency-directory'\nexport const API_PARTNER_DIRECTORY_ENDPOINT = '/partner-directory'\nexport const API_PROFILE_ENDPOINT = '/profile'\nexport const API_USER_PROFILE_ENDPOINT = '/profile/current'\nexport const API_USER_STATUS_ENDPOINT = '/student-status'\nexport const API_ACHIEVEMENTS_ENDPOINT = '/achievements'\nexport const API_STATS_ENDPOINT = '/vacancies/get_stats'\nexport const API_FOUND_JOB_ENDPOINT = '/work'\nexport const API_STAFF_FOUND_JOB_ENDPOINT = '/staffwork'\nexport const API_HOLIDAYS_ENDPOINT = '/holidays'\nexport const API_SET_HOLIDAYS_ENDPOINT = '/holidays/set_holiday'\nexport const API_HOLIDAYS_COUNTER_ENDPOINT = '/holidays/counter'\nexport const API_REPORTS_ENDPOINT = '/reports'\nexport const API_REPORT_BY_ID_ENDPOINT = (id) => `${API_REPORTS_ENDPOINT}/${id}`\nexport const API_REPORTS_FEED_ENDPOINT = (params) => `${API_REPORTS_ENDPOINT}/feed${params}`\nexport const API_USER_REPORTS_ENDPOINT = (params) => `${API_REPORTS_ENDPOINT}/me?${params}`\nexport const API_VACANCIES_ENDPOINT = '/vacancies'\nexport const API_RESPONSE_CONTACTS_ENDPOINT = (id) => `/vacancies/contacts?vacancy_id=${id}`\nexport const API_VACANCY_BY_ID_ENDPOINT = (id) => `${API_VACANCIES_ENDPOINT}/${id}`\nexport const API_VACANCIES_CONTACTS_ENDPOINT = `/vacancies/contacts`\nexport const API_APPLICATIONS_ENDPOINT = '/application'\nexport const API_APPLICATION_BY_ID_ENDPOINT = (id) => `${API_APPLICATIONS_ENDPOINT}/${id}`\nexport const API_STUDENTS_LIST_ENDPOINT = '/profile'\nexport const API_STUDENT_BY_ID_ENDPOINT = (id) => `${API_STUDENTS_LIST_ENDPOINT}/${id}`\nexport const API_GET_FILTERS_STUDENTS = '/admin-students-directory'\nexport const API_APPLICATION_GET_FILTERS = '/application-directory'\nexport const API_GET_WEEK_STATS = '/reports/get_last_report_stats'\nexport const API_APPLICATIONS_CSV = '/application/application-downloader'\nexport const API_STUDENTS_CSV = '/profile-downloader'\nexport const API_FEED_CSV = '/report-downloader'\nexport const API_FEED_SUMMARY_CSV = '/profile-statistics-downloader'\nexport const API_COHORT_GET_FILTERS_ENDPOINT = '/cohort-directory'\nexport const API_COHORT_ENDPOINT = '/cohort'\nexport const API_COHORT_BY_ID_ENDPOINT = (id) => `${API_COHORT_ENDPOINT}/${id}`\nexport const API_LOCATION_DIRECTORY_ENDPOINT = '/location-directory'\nexport const API_COMPANY_DIRECTORY_ENDPOINT = '/companies-student-directory'\nexport const API_COMPANY_DIRECTORY_NOT_STUDENT_ENDPOINT = '/hr_part/company-staff-directory'\nexport const API_COMPANY_SEARCH_ENDPOINT = '/companies'\nexport const API_HR_PART_DIRECTORY_ENDPOINT = '/hr_part/directory'\nexport const API_HR_PART_VACANCY_STUDENT_ENDPOINT = '/hr_part/vacancy/show_vacancies_for_student'\nexport const API_HR_PART_ABOUT_VACANCY_STUDENT_ENDPOINT = (id) => `/hr_part/vacancy/${id}/show_detail_for_student`\nexport const API_STUDENT_EXTERNAL_VACANCY = '/external'\nexport const API_HR_PART_VACANCY_ENDPOINT = '/hr_part/vacancy'\nexport const API_HR_PART_VACANCY_BY_ID_ENDPOINT = (id) => `${API_HR_PART_VACANCY_ENDPOINT}/${id}`\nexport const API_HR_PART_VACANCY_INFO_ENDPOINT = (id) => `${API_HR_PART_VACANCY_ENDPOINT}/${id}/info`\nexport const API_HR_PART_EXPORT_INFO_ENDPOINT = (id) => `${API_HR_PART_VACANCY_ENDPOINT}/${id}/info/get_file`\nexport const API_GET_TERM_OF_USE = '/terms-of-use-text/latest'\nexport const API_POST_TERM_OF_USE = '/terms-of-use'\nexport const API_PARTNER_VACANCY_RESPONSE_ENDPOINT = '/vacancies/partner_response'\nexport const API_VACANCY_RESPONSE_ENDPOINT = '/vacancies/external-response'\nexport const REG_PAGE_TITLE = 'Регистрация'\nexport const REG_PAGE_DESCRIPTION = 'Зарегистрироваться'\nexport const REG_FORM_EMAIL_PLACEHOLDER = 'Почта как в Slack'\nexport const REG_FORM_PASS_PLACEHOLDER = 'Придумай пароль'\nexport const REG_FORM_PASS_CONFIRM_PLACEHOLDER = 'Повтори пароль'\nexport const REG_FORM_EMPTY_EMAIL_ERROR = 'Введите адрес электронной почты'\nexport const REG_FORM_MIN_SYMBOLS = 8\nexport const REG_FORM_MAX_SYMBOLS = 25\nexport const REG_FORM_MINMAX_SYMBOLS_ERROR = `Возможная длина поля пароль ${REG_FORM_MIN_SYMBOLS}-${REG_FORM_MAX_SYMBOLS} символов`\nexport const REG_FORM_BAD_EMAIL_ERROR = 'Укажи адрес почты в формате “user@gmail.com\"'\nexport const REG_FORM_EMPTY_PASS_ERROR = 'Введите пароль'\nexport const REG_FORM_BAD_PASS_ERROR =\n  'В пароле могут использоваться только англ. заглавный и прописные буквы A-Z, цифры 0-9, а также знак тире “-” и спец. символы'\nexport const REG_FORM_CONFIRM_PASS_ERROR = 'Введенные пароли не совпадают'\nexport const REG_FORM_POPUP_BUTTON = 'Войти'\nexport const REG_FORM_POPUP_CONFIRM_REGISTRATION = 'Регистрация завершена'\nexport const LOG_PAGE_DESCRIPTION = 'Войти в аккаунт'\nexport const LOG_FORM_EMPTY_PASSWORD_ERROR = 'Введите пароль'\nexport const LOG_FORM_EMPTY_EMAIL_ERROR = 'Введите адрес электронной почты'\nexport const LOG_FORM_BAD_EMAIL_ERROR = 'Введите адрес почты вида Ivan@mail.ru'\nexport const LOG_FORM_EMAIL_PLACEHOLDER = 'Почта'\nexport const LOG_FORM_PASS_PLACEHOLDER = 'Пароль'\nexport const EXIT_POPUP_TITLE = 'Выход'\nexport const EXIT_POPUP_SUBTITLE = 'Выйти из учетной записи?'\nexport const EXIT_POPUP_CLOSE_BUTTON = 'Остаться'\nexport const EXIT_POPUP_EXIT_BUTTON = 'Выйти'\nexport const CREATE_COHORT_NUMBER_ERROR = 'Выбран некорректный номер потока'\nexport const CREATE_COHORT_NUMBER_REQUIRED_ERROR = 'Введи номер потока'\nexport const CREATE_COHORT_COURSE_REQUIRED_ERROR = 'Выбери курс'\nexport const CREATE_COHORT_INFORMATION_POPUP_TITLE = 'Внимание!'\nexport const CREATE_COHORT_INFORMATION_POPUP_SUBTITLE =\n  'Вы не можете сменить статус потока на архивный, пока в нём ещё есть активные студенты. Чтобы это сделать, у всех студентов (в этом потоке) должен быть выставлен статус “Нашёл работу” или “Отчислен“'\nexport const CREATE_COHORT_INFORMATION_POPUP_BUTTON_TEXT = 'Понятно'\nexport const TEMP_STATUSES = [\n  {\n    priority: 1,\n    title: 'Отклики на вакансии',\n    status_id: 'response',\n  },\n  {\n    priority: 2,\n    title: 'Собеседования с HR',\n    status_id: 'hr_interview',\n  },\n  {\n    priority: 3,\n    title: 'Тестовые задания',\n    status_id: 'test_task',\n  },\n  {\n    priority: 4,\n    title: 'Технические собеседования',\n    status_id: 'tech_interview',\n  },\n  {\n    priority: 5,\n    title: 'Собеседования с руководителем',\n    status_id: 'boss_interview',\n  },\n  {\n    priority: 6,\n    title: 'Офферы',\n    status_id: 'offer',\n  },\n  {\n    priority: 7,\n    title: 'Отказы',\n    status_id: 'rejection',\n  },\n]\n\nexport const COLORS = [\n  {\n    title: 'Фиолетовый',\n    color: '#CCC2ED',\n  },\n  {\n    title: 'Желтый',\n    color: '#FFE1BD',\n  },\n  {\n    title: 'Розовый',\n    color: '#FFDDE5',\n  },\n  {\n    title: 'Зеленый',\n    color: '#C2E5CE',\n  },\n  {\n    title: 'Синий',\n    color: '#ACCCFF',\n  },\n]\nexport const ELLIPSE_GREEN_COLORS = '#87CC9E'\nexport const ELLIPSE_ORANGE_COLORS = '#FFCE92'\nexport const ELLIPSE_ORCHID_COLORS = '#7F67D2'\nexport const ELLIPSE_BLUE_COLORS = '#5A9BFF'\nexport const FILE_SIZE = '5242880'\nexport const SUPPORTED_FORMATS = ['image/jpeg', 'image/png', 'image/pjpeg']\nexport const LOGO_SUPPORTED_FORMATS_VALIDATION = ['image/jpeg', 'image/png', 'image/pjpeg', 'image/svg+xml']\nexport const LOGO_SUPPORTED_FORMATS = 'image/jpeg,image/png,image/pjpeg,image/svg+xml'\nexport const MAX_COMMENT_SYMBOLS_FOUND_JOB_AND_WEEK_REPORT = 500\nexport const MIN_COMMENT_SYMBOLS_FOUND_JOB_AND_WEEK_REPORT = 80\nexport const MAX_COMMENT_SYMBOLS_LAST_WORK_ONBOARDING = 150\nexport const MIN_COMMENT_SYMBOLS_LAST_WORK_ONBOARDING = 3\nexport const MIN_TEXT_FIELD_SYMBOLS = 1\nexport const MAX_TEXT_FIELD_SYMBOLS = 150\nexport const EXIT_TIMER = 6002\nexport const RESPONSE_WORK_REGEXP = /^[a-zA-ZА-ЯЁ0-9-._!\"`'#%&,:;<>=@{}~$()*+|/\\\\?[\\]^ ]*$/i\nexport const RESPONSE_WORK_TIP =\n  'Поле может содержать только русские и английские буквы А-Я, а-я, A-Z, a-z, кавычки, точку, пробел, дефис, спецсимволы'\nexport const RESPONSE_LOCATION_TIP =\n  'Поле может содержать только русские и английские буквы, точку, запятую, пробел, дефис'\nexport const RESPONSE_COMMENT_REGEXP = /^[A-ZА-ЯЁ0-9 \\-\".,]*$/i\nexport const RESPONSE_COMMENT_TIP =\n  'Поле может содержать русские и английские буквы А-Я, а-я, A-Z, a-z, цифры 0-9, пробел, кавычки, точку, запятую, дефис'\nexport const RESPONSE_TEXT_FIELDS_MIN_SYMBOLS = 2\nexport const RESPONSE_TEXT_FIELD_MAX_SYMBOLS = 150\nexport const RESPONSE_TEXT_FIELD_MINMAX_TIP = `Длина поля ${RESPONSE_TEXT_FIELDS_MIN_SYMBOLS}-${RESPONSE_TEXT_FIELD_MAX_SYMBOLS} символов`\nexport const RESPONSE_COMMENT_MAX_SYMBOLS = 3000\nexport const RESPONSE_COMMENT_MAX_SYMBOLS_TIP = `Длина поля не более ${RESPONSE_COMMENT_MAX_SYMBOLS} символов`\nexport const MAX_BIRTHDAY_DATE_ERROR = 'В данный момент в проекте можно участвовать лицам старше 18 лет'\nexport const MAX_PORTFOLIO_SIZE = 10485760\nexport const MAX_PORTFOLIO_SIZE_TIP = 'Превышен допустимый размер'\nexport const PORTFOLIO_SUPPORTED_FORMATS = 'image/jpeg, image/png, application/pdf'\nexport const PORTFOLIO_LETTER_SUPPORTED_FORMATS =\n  'application/pdf, .doc,.docx,application/msword,application/vnd.openxmlformats-officedocument.wordprocessingml.document,text/plain,.txt'\nexport const PORTFOLIO_SUPPORTED_FORMATS_TIP = 'Данный формат файла не поддерживается'\nexport const PORTFOLIO_COUNT_TIP = (number) =>\n  `Возможно добавить не более ${number} ${number === 1 ? 'файла' : 'файлов'}`\nexport const PORTFOLIO_COUNT_EXTRA_TIP = 'Возможно добавить ещё не более одного файла'\nexport const TEXT_REGEX = /^[A-ZА-ЯЁ0-9 !\"#$%&'()*+,-./:;<=>?@[\\]^_`{|}~]*$/i\nexport const TEXT_REGEX_TIP =\n  'Используй в поле только русские буквы, латинские буквы, цифры, точку, запятую, пробел, дефис, кавычки, спец. символы.'\nexport const INTEGER_REGEX = /^-?[0-9]+$/i\nexport const REGISTER_WEAK_NUMBER_PASSWORD_ERROR = 'Введённый пароль состоит только из цифр.'\nexport const REGISTER_WEAK_PASSWORD_ERROR = 'Введённый пароль слишком широко распространён.'\nexport const REGISTER_SHORT_PASSWORD_ERROR =\n  'Введённый пароль слишком короткий. Он должен содержать как минимум 8 символов.'\nexport const REGISTER_PRIVATE_INFO_ERROR = 'Ваш пароль не может быть слишком похож на другую вашу личную информацию'\nexport const REGISTER_UNIQUE_MAIL = 'Значения поля должны быть уникальны.'\nexport const REGISTER_UNIQUE_MAIL_FORM_TEXT = 'Указанный email уже используется'\nexport const REGISTER_INVALID_MAIL = 'Введите правильный адрес электронной почты.'\nexport const AUTH_ACCOUNT_NOT_FOUND_ERROR = 'Не найдено активной учетной записи с указанными данными'\nexport const NOT_EQUAL_PASSWORD_ERROR = 'Пароли не совпадают.'\nexport const LOGIN_ENTER_ERROR = 'Не удается войти. Пожалуйста, проверь правильность написания логина и пароля'\nexport const FORGOT_PASSWORD_ERROR =\n  \"We couldn't find an account associated with that email. Please try a different e-mail address.\"\nexport const FORGOT_PASSWORD_ERROR_FORM_TEXT = 'Не удалось найти аккаунт, связанный с данным email-адресом'\nexport const PASSWORD_LIKE_EMAIL_ERROR = 'Введённый пароль слишком похож на email.'\nexport const PASSWORD_LIKE_EMAIL_ERROR_FORM_TEXT = 'Введённый пароль слишком похож на email. Придумайте другой пароль'\nexport const VACATION_THIRD_PAD_TEXTFIELD_MIN_SYMBOLS = 20\nexport const VACATION_THIRD_PAD_SELECTION_STAGE_FIELD_MIN_SYMBOLS = 1\nexport const VACATION_THIRD_PAD_ABOUT_COMPANY_MAX_SYMBOLS = 500\nexport const VACATION_THIRD_PAD_TEXTFIELD_MAX_SYMBOLS = 1000\nexport const VACATION_THIRD_PAD_SELECTION_STAGE_MINMAX_TIPS = `Допустимая длина ${VACATION_THIRD_PAD_SELECTION_STAGE_FIELD_MIN_SYMBOLS}-${VACATION_THIRD_PAD_ABOUT_COMPANY_MAX_SYMBOLS} символов`\nexport const VACATION_THIRD_PAD_ABOUT_COMPANY_MINMAX_TIPS = `Допустимая длина ${VACATION_THIRD_PAD_TEXTFIELD_MIN_SYMBOLS}-${VACATION_THIRD_PAD_ABOUT_COMPANY_MAX_SYMBOLS} символов`\nexport const VACATION_THIRD_PAD_TEXTFIELD_MINMAX_TIPS = `Допустимая длина ${VACATION_THIRD_PAD_TEXTFIELD_MIN_SYMBOLS}-${VACATION_THIRD_PAD_TEXTFIELD_MAX_SYMBOLS} символов`\nexport const VACATION_THIRD_PAD_REGEXP = /^[a-zA-ZА-ЯЁ0-9- ]*$/i\nexport const VACATION_THIRD_PAD_TEXT_TIPS =\n  'Можно использовать русские буквы А-Я, а-я, латинские буквы A-Z, a-z, знак дефиса \"-\", пробел'\nexport const VACATION_WITHOUT_MIN_MINMAX_TIPS = `Допустимая длина 0-${VACATION_THIRD_PAD_TEXTFIELD_MAX_SYMBOLS} символов`\nexport const ACCELERATION_IN_POPUP_DATA = (patch) => ({\n  title: 'Переход в Акселерацию',\n  subtitle: 'Выбери дату, когда студент вступил в Акселерацию. Эти данные будут отображаться в DataLens',\n  datePickerText: 'Дата перехода в Акселерацию',\n  patch,\n})\n\nexport const ACCELERATION_OUT_POPUP_DATA = (patch) => ({\n  title: 'Выход из Акселерации',\n  subtitle: 'Выбери дату, когда студент вышел из Акселерации. Эти данные будут отображаться в DataLens',\n  datePickerText: 'Дата выхода из Акселерации',\n  patch,\n})\nexport const PHONE_REG_EXP = /^\\+?1?\\d{9,15}$/\nexport const API_SEARCH_RESPONSES = '/vacancies/lookup'\nexport const API_CONTACTS_SEVERAL_ENDPOINT = '/vacancies/contacts/several'\nexport const API_CONTACTS_ENDPOINT = '/vacancies/contacts'\nexport const API_CONTACTS_BY_ID_ENDPOINT = (id) => `${API_CONTACTS_ENDPOINT}/${id}`\nexport const ONLY_SPACES_REGEXP = /^\\s+$/\nexport const COVERS_EXAMPLE_LINK = 'https://praktikum.notion.site/1056a6e1e94a47808e0ba41115573616'\nexport const API_SEARCH_COURSES = '/dictionary/courses'\n// в миллисекундах\nexport const STATUS_CHECK_PERIOD = 300000\nexport const API_CONSULTANTS_STUDENT_STATISTICS = '/student-list-statistics'\n","import { createSlice } from '@reduxjs/toolkit'\nimport { IAPIError, IRequestInfo, TApiReference } from '../types/global-types'\nimport {\n  createVacancyResponse,\n  getExternalVacancies,\n  getExternalVacancy,\n  getPartnersDirectories,\n  getPartnersVacancies,\n  getPartnersVacancy,\n  postPartnersVacancyResponse,\n} from '../axios/student-vacancies'\nimport { IStudentVacanciesDirectory, IStudentVacancy } from '../types/student-vacancies/student-vacancies-types'\n\ninterface IPartnersState extends IRequestInfo {\n  directories: IStudentVacanciesDirectory\n  vacancies: IStudentVacancy[]\n  vacancyPage: string | null | undefined\n  externalVacancies: IStudentVacancy[]\n  externalPage: string | null | undefined\n  selectedVacancy: IStudentVacancy | null\n  isJobApplicationModalOpen: boolean\n  achievements: TApiReference[]\n  isOpenVacancyPopup: boolean\n  isOpenPartnersVacancyPopup: boolean\n  selectedFullVacancy: IStudentVacancy | null\n  isNoDetails: boolean\n  filteredVacancies: IStudentVacancy[]\n  isExternalLoading: boolean\n  isVacancyLoading: boolean\n}\n\nexport const initialState: IPartnersState = {\n  status: 'idle',\n  isError: false,\n  errorInfo: null,\n  directories: {\n    courses: [],\n    currencies: [],\n    jobApplicationItems: [],\n    employmentItems: [],\n    workFormatItems: [],\n  },\n  vacancies: [],\n  vacancyPage: undefined,\n  externalVacancies: [],\n  externalPage: undefined,\n  selectedVacancy: null,\n  isJobApplicationModalOpen: false,\n  achievements: [],\n  isOpenVacancyPopup: false,\n  isOpenPartnersVacancyPopup: false,\n  selectedFullVacancy: null,\n  // Два стейта под рендер вакансий после фильтра\n  isNoDetails: false,\n  filteredVacancies: [],\n  isExternalLoading: false,\n  isVacancyLoading: false,\n}\n\nconst studentVacanciesSlice = createSlice({\n  name: 'partners',\n  initialState,\n  reducers: {\n    openJobApplicationModal(state) {\n      state.isJobApplicationModalOpen = true\n    },\n    closeJobApplicationModal(state) {\n      state.isJobApplicationModalOpen = false\n    },\n    openVacancyPopup(state) {\n      state.isOpenVacancyPopup = true\n    },\n    closeVacancyPopup(state) {\n      state.isOpenVacancyPopup = false\n      // надо обновить стейт is_viewed в просмотренной вакансии\n      const index = state.externalVacancies.findIndex((vacancy) => vacancy?.id === state.selectedFullVacancy?.id)\n      if (!state.externalVacancies[index].is_viewed) state.externalVacancies[index].is_viewed = true\n      state.selectedFullVacancy = null\n      state.selectedVacancy = null\n    },\n    openPartnersVacancyPopup(state) {\n      state.isOpenPartnersVacancyPopup = true\n    },\n    closePartnersVacancyPopup(state) {\n      state.isOpenPartnersVacancyPopup = false\n      // надо обновить стейт is_viewed в просмотренной вакансии\n      const index = state.vacancies.findIndex((vacancy) => vacancy?.id === state.selectedFullVacancy?.id)\n      if (!state.vacancies[index].is_viewed) state.vacancies[index].is_viewed = true\n      // Закомментил, потому что иначе не работает создание отклика и возвращение в вакансию\n      // state.selectedFullVacancy = null\n      // state.selectedVacancy = null\n    },\n    selectVacancy(state, action) {\n      state.selectedVacancy = action.payload\n    },\n    resetPartnersAchievements(state) {\n      state.achievements = []\n    },\n    resetPage(state) {\n      state.externalPage = undefined\n      state.vacancyPage = undefined\n    },\n    resetPartnersPage(state) {\n      state.vacancyPage = undefined\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      // Get partners directories\n      .addCase(getPartnersDirectories.pending, (state) => {\n        state.status = 'pending'\n        state.isError = false\n        state.errorInfo = null\n      })\n      .addCase(getPartnersDirectories.fulfilled, (state, action) => {\n        const rawData = action.payload\n        state.status = 'succeeded'\n        state.directories.courses = rawData.courses\n        state.directories.currencies = rawData?.currencies?.map((currency: TApiReference) => ({\n          id: currency.id,\n          name: currency.name,\n          icon: currency.label,\n        }))\n        state.directories.employmentItems = rawData?.employment?.map((e: TApiReference) => ({ ...e, name: e?.value }))\n        state.directories.workFormatItems = rawData?.work_format?.map((w: TApiReference) => ({ ...w, name: w?.value }))\n        state.directories.jobApplicationItems = rawData?.design_formats?.map((d: TApiReference) => ({\n          ...d,\n          name: d?.value,\n        }))\n      })\n      .addCase(getPartnersDirectories.rejected, (state, action) => {\n        state.isError = true\n        state.errorInfo = action.payload as IAPIError\n        state.status = 'failed'\n      })\n\n      // Get partners vacancies\n      .addCase(getPartnersVacancies.pending, (state) => {\n        state.status = 'pending'\n        state.isError = false\n        state.errorInfo = null\n        state.isVacancyLoading = true\n      })\n      .addCase(getPartnersVacancies.fulfilled, (state, action) => {\n        state.status = 'succeeded'\n        const searchParams = new URLSearchParams(action.payload?.next)\n        const page = searchParams.get('page')\n        if (state.vacancyPage) {\n          state.vacancies.push(...action.payload?.results)\n        } else {\n          state.vacancies = action.payload?.results\n        }\n        state.vacancyPage = page\n        if (action.payload?.results?.length > 0 && !page) {\n          const [firstVacancy] = action.payload?.results\n          state.selectedVacancy = firstVacancy\n        }\n        state.isVacancyLoading = false\n      })\n      .addCase(getPartnersVacancies.rejected, (state, action) => {\n        state.isError = true\n        state.errorInfo = action.payload as IAPIError\n        state.status = 'failed'\n      })\n\n      // Get external vacancies\n      .addCase(getExternalVacancies.pending, (state) => {\n        state.status = 'pending'\n        state.isError = false\n        state.errorInfo = null\n        state.isExternalLoading = true\n      })\n      .addCase(getExternalVacancies.fulfilled, (state, action) => {\n        state.status = 'succeeded'\n        const searchParams = new URLSearchParams(action.payload?.next)\n        const page = searchParams.get('page')\n        if (state.externalPage) {\n          state.externalVacancies.push(...action.payload?.results)\n        } else {\n          state.externalVacancies = action.payload?.results\n        }\n        state.externalPage = page\n        state.isExternalLoading = false\n      })\n      .addCase(getExternalVacancies.rejected, (state, action) => {\n        state.isError = true\n        state.errorInfo = action.payload as IAPIError\n        state.status = 'failed'\n        state.isExternalLoading = false\n      })\n\n      // Get partners vacancy\n      .addCase(getPartnersVacancy.pending, (state) => {\n        state.status = 'pending'\n        state.isError = false\n        state.errorInfo = null\n      })\n      .addCase(getPartnersVacancy.fulfilled, (state, action) => {\n        state.status = 'succeeded'\n        state.selectedFullVacancy = action.payload\n        // if (action.payload.length > 0) {\n        //   const [firstVacancy] = action.payload\n        //   state.selectedVacancy = firstVacancy\n        // }\n      })\n      .addCase(getPartnersVacancy.rejected, (state, action) => {\n        state.isError = true\n        state.errorInfo = action.payload as IAPIError\n        state.status = 'failed'\n      })\n\n      // Get partners vacancy\n      .addCase(getExternalVacancy.pending, (state) => {\n        state.status = 'pending'\n        state.isError = false\n        state.errorInfo = null\n      })\n      .addCase(getExternalVacancy.fulfilled, (state, action) => {\n        state.status = 'succeeded'\n        state.selectedFullVacancy = action.payload\n        // if (action.payload.length > 0) {\n        //   const [firstVacancy] = action.payload\n        //   state.selectedVacancy = firstVacancy\n        // }\n      })\n      .addCase(getExternalVacancy.rejected, (state, action) => {\n        state.isError = true\n        state.errorInfo = action.payload as IAPIError\n        state.status = 'failed'\n      })\n\n      // Post partners vacancy response\n      .addCase(postPartnersVacancyResponse.pending, (state) => {\n        state.status = 'pending'\n        state.isError = false\n        state.errorInfo = null\n      })\n      .addCase(postPartnersVacancyResponse.fulfilled, (state, action) => {\n        state.status = 'succeeded'\n        const newVacancies = state.vacancies.map((v) => {\n          if (v.id === state.selectedVacancy?.id) return { ...v, is_accepted: true }\n          return v\n        })\n        state.achievements = action.payload.achievements\n        state.vacancies = newVacancies\n      })\n      .addCase(postPartnersVacancyResponse.rejected, (state, action) => {\n        state.isError = true\n        state.errorInfo = action.payload as IAPIError\n        state.status = 'failed'\n      })\n\n      // Post external vacancy response\n      .addCase(createVacancyResponse.pending, (state) => {\n        state.status = 'pending'\n        state.isError = false\n        state.errorInfo = null\n      })\n      .addCase(createVacancyResponse.fulfilled, (state, action) => {\n        state.status = 'succeeded'\n        // state.achievements = action.payload.achievements\n        state.externalVacancies = state.externalVacancies?.map((v) => {\n          if (v.id === state.selectedFullVacancy?.id) {\n            return { ...v, is_accepted: true }\n          }\n          return v\n        })\n      })\n      .addCase(createVacancyResponse.rejected, (state, action) => {\n        state.isError = true\n        state.errorInfo = action.payload as IAPIError\n        state.status = 'failed'\n      })\n  },\n})\n\nexport const {\n  openJobApplicationModal,\n  closeJobApplicationModal,\n  selectVacancy,\n  resetPartnersAchievements,\n  openVacancyPopup,\n  closeVacancyPopup,\n  openPartnersVacancyPopup,\n  closePartnersVacancyPopup,\n  resetPage,\n  resetPartnersPage,\n} = studentVacanciesSlice.actions\n\nexport default studentVacanciesSlice\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { useAppDispatch } from '../store/hooks'\n\ninterface IWebsocketState {\n  wsConnected: boolean\n  wsError: boolean\n}\n\nconst initialState = {\n  wsConnected: false,\n  wsError: false,\n} as IWebsocketState\n\nconst websocketSlice = createSlice({\n  name: 'ws',\n  initialState,\n  reducers: {\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    wsConnectionStart(state, action: PayloadAction<{ url: string; token?: string }>) {},\n\n    wsConnectionStop(state) {\n      state.wsConnected = false\n      state.wsError = false\n    },\n\n    wsConnectionSuccess(state) {\n      state.wsConnected = true\n      state.wsError = false\n    },\n\n    wsConnectionError(state) {\n      state.wsConnected = false\n      state.wsError = true\n    },\n\n    wsConnectionClosed(state) {\n      state.wsConnected = false\n      state.wsError = false\n    },\n  },\n})\n\nexport default websocketSlice\n\nexport const openSocket =\n  () =>\n  (dispatch = useAppDispatch()) =>\n    dispatch(websocketSlice.actions.wsConnectionStart({ url: `${process.env.REACT_APP_WS}/ws/achievements` }))\n\nexport const closeSocket =\n  () =>\n  (dispatch = useAppDispatch()) => {\n    dispatch(websocketSlice.actions.wsConnectionStop())\n  }\n","import { createAsyncThunk } from '@reduxjs/toolkit'\nimport { AxiosError } from 'axios'\nimport { API_ACHIEVEMENTS_ENDPOINT } from '../../utils/constants'\nimport api from './settings'\n\nexport const getAchievements = createAsyncThunk(\n  'achievement/getAchievements',\n  async (id: string | undefined, { rejectWithValue }) => {\n    try {\n      let url = API_ACHIEVEMENTS_ENDPOINT\n      if (id) url += `?profile_id=${id}`\n      const response = await api.get(url)\n      return response.data\n    } catch (error) {\n      const typedError = error as AxiosError\n      return rejectWithValue(typedError?.response?.data)\n    }\n  },\n)\n"],"sourceRoot":""}