{"version":3,"sources":["pages/auth/ResetPassword/ResetPassword.styles.ts","pages/auth/CreateNewPassword/CreateNewPassword.styles.ts","pages/auth/CreateNewPassword/CreateNewPassword.tsx","pages/auth/ResetPassword/ResetPassword.tsx","components/Sub/FormContainer/FormContainer.styles.ts","components/Sub/FormContainer/FormContainer.tsx","../node_modules/@material-ui/core/esm/Container/Container.js","utils/auth-server-error.js","../node_modules/@material-ui/core/esm/Link/Link.js"],"names":["useStyles","makeStyles","root","display","flexDirection","alignItems","width","boxSizing","padding","fieldset","gap","succesText","fontFamily","color","fontWeight","input","button","textTransform","fontSize","lineHeight","marginTop","registerTitle","marginBottom","registerLink","successContainer","successTitle","margin","textAlign","firstInput","CreateNewPassword","token","dispatch","useAppDispatch","useAppSelector","store","auth","createPassRequest","status","isError","errorInfo","navigate","useNavigate","isLoading","isSuccess","useForm","resolver","yupResolver","regFormNewPasswordSchema","mode","control","handleSubmit","setError","errors","formState","classes","useEffect","processAuthServerError","Container","className","FormContainer","title","PROJECT_NAME","description","noTextContainer","error","IconSuccessRegistration","Typography","variant","Button","type","onClick","onSubmit","data","createPassword","password","name","render","field","TextField","message","helperText","placeholder","inputProps","disableUnderline","password2","loading","size","React","memo","schema","yup","shape","email","required","ResetPassword","resetPassRequest","useSearchParams","get","defaultValues","subtitle","align","resetPassword","Link","component","RouterLink","to","underline","theme","background","palette","default","borderRadius","maxWidth","description_color_red","textContainer","children","non_field_errors","props","ref","_props$component","Component","_props$disableGutters","disableGutters","_props$fixed","fixed","_props$maxWidth","other","_objectWithoutProperties","_extends","clsx","concat","capitalize","String","withStyles","_defineProperty","marginLeft","marginRight","paddingLeft","spacing","paddingRight","breakpoints","up","Object","keys","values","reduce","acc","breakpoint","value","maxWidthXs","Math","max","xs","maxWidthSm","sm","maxWidthMd","md","maxWidthLg","lg","maxWidthXl","xl","authErrorChecker","REGISTER_WEAK_NUMBER_PASSWORD_ERROR","REGISTER_WEAK_PASSWORD_ERROR","REGISTER_SHORT_PASSWORD_ERROR","REG_FORM_MINMAX_SYMBOLS_ERROR","REGISTER_PRIVATE_INFO_ERROR","REGISTER_UNIQUE_MAIL","REGISTER_UNIQUE_MAIL_FORM_TEXT","REGISTER_INVALID_MAIL","REG_FORM_BAD_EMAIL_ERROR","AUTH_ACCOUNT_NOT_FOUND_ERROR","LOGIN_ENTER_ERROR","NOT_EQUAL_PASSWORD_ERROR","REG_FORM_CONFIRM_PASS_ERROR","FORGOT_PASSWORD_ERROR","FORGOT_PASSWORD_ERROR_FORM_TEXT","PASSWORD_LIKE_EMAIL_ERROR","PASSWORD_LIKE_EMAIL_ERROR_FORM_TEXT","serverErrors","forEach","Array","isArray","toString","_props$color","onBlur","onFocus","TypographyClasses","_props$underline","_props$variant","_useIsFocusVisible","useIsFocusVisible","isFocusVisible","onBlurVisible","focusVisibleRef","_React$useState","focusVisible","setFocusVisible","handlerRef","useForkRef","event","underlineNone","textDecoration","underlineHover","underlineAlways","position","WebkitTapHighlightColor","backgroundColor","outline","border","cursor","userSelect","verticalAlign","borderStyle"],"mappings":"yQA0CeA,EAxCGC,aAAW,iBAAO,CAClCC,KAAM,CACJC,QAAS,OACTC,cAAe,SACfC,WAAY,SACZC,MAAO,OACPC,UAAW,aACXC,QAAS,KAEXC,SAAU,CACRN,QAAS,OACTC,cAAe,SACfM,IAAK,OACLL,WAAY,UAEdM,WAAY,CACVC,WAAY,UACZC,MAAO,wBACPC,WAAY,UAEdC,MAAO,CACLT,MAAO,QAETU,OAAQ,CACNR,QAAS,IACTS,cAAe,OACfC,SAAU,OACVC,WAAY,OACZC,UAAW,SAEbC,cAAe,CACbR,MAAO,UACPO,UAAW,OACXE,aAAc,SAEhBC,aAAc,CACZV,MAAO,e,wBCiBIb,EArDGC,aAAW,iBAAO,CAClCC,KAAM,CACJC,QAAS,OACTC,cAAe,SACfC,WAAY,SACZC,MAAO,OACPC,UAAW,aACXC,QAAS,KAEXgB,iBAAkB,CAChBrB,QAAS,OACTC,cAAe,SACfC,WAAY,SACZC,MAAO,OACPC,UAAW,aACXC,QAAS,IACTY,UAAW,QAEbK,aAAc,CACZC,OAAQ,gBACRd,WAAY,UACZe,UAAW,UAEblB,SAAU,CACRN,QAAS,OACTC,cAAe,SACfM,IAAK,OACLL,WAAY,UAEdU,MAAO,CACLT,MAAO,OACPc,UAAW,SAEbQ,WAAY,CACVR,UAAW,GAEbJ,OAAQ,CACNR,QAAS,IACTS,cAAe,OACfC,SAAU,OACVC,WAAY,OACZC,UAAW,SAEbC,cAAe,CACbR,MAAO,UACPO,UAAW,OACXE,aAAc,SAEhBC,aAAc,CACZV,MAAO,e,kDC3BLgB,EAAiD,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAClDC,EAAWC,cACjB,EAEIC,aAAe,SAACC,GAAD,OAAWA,EAAMC,QADlCC,kBAAqBC,EADvB,EACuBA,OAAQC,EAD/B,EAC+BA,QAASC,EADxC,EACwCA,UAElCC,EAAWC,cACXC,EAAuB,YAAXL,EACZM,EAAuB,cAAXN,EAClB,EAKIO,YAAoB,CACtBC,SAAUC,YAAYC,KACtBC,KAAM,aANNC,EADF,EACEA,QACAC,EAFF,EAEEA,aACAC,EAHF,EAGEA,SACaC,EAJf,EAIEC,UAAaD,OAaTE,EAAUtD,IAMhB,OAJAuD,qBAAU,WACJjB,GAASkB,YAAuBjB,EAAWY,KAC9C,CAACb,IAGF,cAACmB,EAAA,EAAD,CAAWC,UAAWJ,EAAQpD,KAA9B,SACE,cAACyD,EAAA,EAAD,CACEC,MAAOC,KACPC,YAAY,uHACZC,gBAAiBpB,EACjBqB,MAAOZ,EAJT,SAMGT,EACC,sBAAKe,UAAWJ,EAAQ9B,iBAAxB,UACE,cAACyC,EAAA,EAAD,IACA,cAACC,EAAA,EAAD,CAAYC,QAAQ,QAAQT,UAAWJ,EAAQ7B,aAA/C,6FAGA,cAAC2C,EAAA,EAAD,CAAQV,UAAWJ,EAAQtC,OAAQqD,KAAK,SAASC,QAvBjC,WACxB9B,EAAS,aAsBD,mHAKF,sBAAM+B,SAAUrB,GAhCoB,SAACsB,GAC3CzC,EAAS0C,YAAe,CAAEC,SAAUF,EAAKE,SAAU5C,cA+B7C,SACE,2BAAU4B,UAAWJ,EAAQ7C,SAA7B,UACE,cAAC,IAAD,CACEkE,KAAK,WACL1B,QAASA,EACT2B,OAAQ,oBAAGC,EAAH,EAAGA,MAAH,OACN,cAACC,EAAA,EAAD,2BACMD,GADN,IAEER,KAAK,WACLL,SAAQ,UAACZ,EAAOsB,gBAAR,aAAC,EAAiBK,SAC1BC,YAAY,UAAA5B,EAAOsB,gBAAP,eAAiBK,UAAW,IACxCrB,UAAS,UAAKJ,EAAQvC,MAAb,YAAsBuC,EAAQ1B,YACvCuC,QAAQ,WACRc,YAAY,uHACZC,WAAY,CAAEC,kBAAkB,SAItC,cAAC,IAAD,CACER,KAAK,YACL1B,QAASA,EACT2B,OAAQ,oBAAGC,EAAH,EAAGA,MAAH,OACN,cAACC,EAAA,EAAD,2BACMD,GADN,IAEER,KAAK,WACLL,SAAQ,UAACZ,EAAOgC,iBAAR,aAAC,EAAkBL,SAC3BC,YAAY,UAAA5B,EAAOgC,iBAAP,eAAkBL,UAAW,IACzCrB,UAAWJ,EAAQvC,MACnBoD,QAAQ,WACRc,YAAY,iHACZC,WAAY,CAAEC,kBAAkB,SAKrCzC,EACC,cAAC,aAAD,CAAY7B,MAAM,UAAUwE,SAAO,EAACC,KAAM,KAE1C,cAAClB,EAAA,EAAD,CAAQV,UAAWJ,EAAQtC,OAAQqD,KAAK,SAAxC,wJAYDkB,MAAMC,KAAK3D,GC5GpB4D,EAASC,MAAaC,MAAM,CAChCC,MAAOF,MAAaG,SAAS,oDAAiBD,MAAM,wGAEhDE,EAAoB,WACxB,IAAM/D,EAAWC,cACjB,EAEIC,aAAe,SAACC,GAAD,OAAWA,EAAMC,QADlC4D,iBAAoB1D,EADtB,EACsBA,OAAQC,EAD9B,EAC8BA,QAASC,EADvC,EACuCA,UAEjCG,EAAuB,YAAXL,EACZM,EAAuB,cAAXN,EAClB,EAAuB2D,cACjBlE,EADN,oBAC2BmE,IAAI,SAG/B,EAKIrD,YAA4B,CAC9BsD,cARoB,GASpBrD,SAAUC,YAAiC2C,GAC3CzC,KAAM,aAPNC,EADF,EACEA,QACAC,EAFF,EAEEA,aACAC,EAHF,EAGEA,SACaC,EAJf,EAIEC,UAAaD,OAUTE,EAAUtD,IAMhB,OAJAuD,qBAAU,WACJjB,GAASkB,YAAuBjB,EAAWY,KAC9C,CAACb,IAGF,cAACmB,EAAA,EAAD,CAAWC,UAAWJ,EAAQpD,KAA9B,SACG4B,EACC,cAAC,EAAD,CAAmBA,MAAOA,IAE1B,qCACE,cAAC6B,EAAA,EAAD,CACEC,MAAOC,KACPsC,SAAS,4HACTrC,YAAY,iRACZC,gBAAiBpB,EACjBqB,MAAOZ,EALT,SAOGT,EACC,cAACuB,EAAA,EAAD,CAAYkC,MAAM,SAASjC,QAAQ,QAAQT,UAAWJ,EAAQ3C,WAA9D,0YAIA,sBAAM4D,SAAUrB,GA3BwB,SAACsB,GACnDzC,EAASsE,YAAc7B,OA0Bb,SACE,2BAAUd,UAAWJ,EAAQ7C,SAA7B,UACE,cAAC,IAAD,CACEkE,KAAK,QACL1B,QAASA,EACT2B,OAAQ,oBAAGC,EAAH,EAAGA,MAAH,OACN,cAACC,EAAA,EAAD,2BACMD,GADN,IAEEb,SAAQ,UAACZ,EAAOwC,aAAR,aAAC,EAAcb,SACvBC,YAAY,UAAA5B,EAAOwC,aAAP,eAAcb,UAAW,IACrCrB,UAAWJ,EAAQvC,MACnBoD,QAAQ,WACRc,YAAY,iCACZC,WAAY,CAAEC,kBAAkB,SAKrCzC,EACC,cAAC,aAAD,CAAY7B,MAAM,UAAUwE,SAAO,EAACC,KAAM,KAE1C,cAAClB,EAAA,EAAD,CAAQV,UAAWJ,EAAQtC,OAAQqD,KAAK,SAAxC,kIAQV,cAACH,EAAA,EAAD,CAAYR,UAAWJ,EAAQjC,cAAe8C,QAAQ,QAAtD,SACE,cAACmC,EAAA,EAAD,CAAM5C,UAAWJ,EAAQ/B,aAAcgF,UAAWC,IAAYC,GAAG,WAAWC,UAAU,OAAtF,oIAUGnB,cAAMC,KAAKM,I,uEC3EX9F,EA/BGC,aAAW,SAAC0G,GAAD,MAAY,CACvCzG,KAAM,CACJ0G,WAAYD,EAAME,QAAQD,WAAWE,QACrCC,aAAc,OACdC,SAAU,IACV1G,MAAO,OACPE,QAAS,uBAEXoD,MAAO,CACL9C,WAAY,OACZQ,aAAc,OACdK,UAAW,UAEbwE,SAAU,CACRxE,UAAW,UAEbmC,YAAa,CACXnC,UAAW,UAEbsF,sBAAuB,CACrBpG,MAAO,WAETqG,cAAe,CACb/G,QAAS,OACTC,cAAe,SACfM,IAAK,MACLL,WAAY,SACZiB,aAAc,Y,OCdZqC,EAAyC,SAAC,GAAwE,IAAD,EAArEwD,EAAqE,EAArEA,SAAUvD,EAA2D,EAA3DA,MAAOuC,EAAoD,EAApDA,SAAUrC,EAA0C,EAA1CA,YAAaE,EAA6B,EAA7BA,MAAOD,EAAsB,EAAtBA,gBACzFT,EAAUtD,IAChB,OACE,sBAAK0D,UAAWJ,EAAQpD,KAAxB,UACE,cAACgE,EAAA,EAAD,CAAYR,UAAWJ,EAAQM,MAAO/C,MAAM,cAAcsD,QAAQ,KAAKoC,UAAU,KAAjF,SACG3C,KAEDG,GACA,sBAAKL,UAAWJ,EAAQ4D,cAAxB,UACE,cAAChD,EAAA,EAAD,CAAYR,UAAWJ,EAAQ6C,SAAUhC,QAAQ,QAAjD,SACGgC,IAEFrC,GACC,cAACI,EAAA,EAAD,CACER,WACO,OAALM,QAAK,IAALA,OAAA,EAAAA,EAAOoD,kBAAP,UACO9D,EAAQQ,YADf,YAC8BR,EAAQ2D,uBAClC3D,EAAQQ,YAEdjD,MAAM,gBACNsD,QAAQ,QAPV,UAUQ,OAALH,QAAK,IAALA,OAAA,EAAAA,EAAOoD,kBAAP,OAA0BpD,QAA1B,IAA0BA,GAA1B,UAA0BA,EAAOoD,wBAAjC,aAA0B,EAAyBrC,QAAUjB,OAKrEqD,MAKQ5B,QAAMC,KAAK7B,I,iCChD1B,4DAqEIF,EAAyB8B,cAAiB,SAAmB8B,EAAOC,GACtE,IAAIhE,EAAU+D,EAAM/D,QAChBI,EAAY2D,EAAM3D,UAClB6D,EAAmBF,EAAMd,UACzBiB,OAAiC,IAArBD,EAA8B,MAAQA,EAClDE,EAAwBJ,EAAMK,eAC9BA,OAA2C,IAA1BD,GAA2CA,EAC5DE,EAAeN,EAAMO,MACrBA,OAAyB,IAAjBD,GAAkCA,EAC1CE,EAAkBR,EAAML,SACxBA,OAA+B,IAApBa,EAA6B,KAAOA,EAC/CC,EAAQC,YAAyBV,EAAO,CAAC,UAAW,YAAa,YAAa,iBAAkB,QAAS,aAE7G,OAAoB9B,gBAAoBiC,EAAWQ,YAAS,CAC1DtE,UAAWuE,YAAK3E,EAAQpD,KAAMwD,EAAWkE,GAAStE,EAAQsE,MAAOF,GAAkBpE,EAAQoE,gBAA6B,IAAbV,GAAsB1D,EAAQ,WAAW4E,OAAOC,YAAWC,OAAOpB,OAC7KM,IAAKA,GACJQ,OAsDUO,iBAnIK,SAAgB1B,GAClC,MAAO,CAELzG,KAAMoI,YAAgB,CACpBhI,MAAO,OACPiI,WAAY,OACZhI,UAAW,aACXiI,YAAa,OACbC,YAAa9B,EAAM+B,QAAQ,GAC3BC,aAAchC,EAAM+B,QAAQ,GAC5BvI,QAAS,SACRwG,EAAMiC,YAAYC,GAAG,MAAO,CAC7BJ,YAAa9B,EAAM+B,QAAQ,GAC3BC,aAAchC,EAAM+B,QAAQ,KAI9BhB,eAAgB,CACde,YAAa,EACbE,aAAc,GAIhBf,MAAOkB,OAAOC,KAAKpC,EAAMiC,YAAYI,QAAQC,QAAO,SAAUC,EAAKC,GACjE,IAAIC,EAAQzC,EAAMiC,YAAYI,OAAOG,GAQrC,OANc,IAAVC,IACFF,EAAIvC,EAAMiC,YAAYC,GAAGM,IAAe,CACtCnC,SAAUoC,IAIPF,IACN,IAGHG,WAAYf,YAAgB,GAAI3B,EAAMiC,YAAYC,GAAG,MAAO,CAC1D7B,SAAUsC,KAAKC,IAAI5C,EAAMiC,YAAYI,OAAOQ,GAAI,OAIlDC,WAAYnB,YAAgB,GAAI3B,EAAMiC,YAAYC,GAAG,MAAO,CAC1D7B,SAAUL,EAAMiC,YAAYI,OAAOU,KAIrCC,WAAYrB,YAAgB,GAAI3B,EAAMiC,YAAYC,GAAG,MAAO,CAC1D7B,SAAUL,EAAMiC,YAAYI,OAAOY,KAIrCC,WAAYvB,YAAgB,GAAI3B,EAAMiC,YAAYC,GAAG,MAAO,CAC1D7B,SAAUL,EAAMiC,YAAYI,OAAOc,KAIrCC,WAAYzB,YAAgB,GAAI3B,EAAMiC,YAAYC,GAAG,MAAO,CAC1D7B,SAAUL,EAAMiC,YAAYI,OAAOgB,QA0EP,CAChCrF,KAAM,gBADO0D,CAEZ5E,I,iCC7IH,WAoBMwG,EAAmB,SAACjG,EAAOa,EAAO1B,GACtC,OAAQa,GACN,KAAKkG,KACH/G,EAAS0B,EAAO,CACdR,KAAM,SACNU,QAASmF,OAEX,MAEF,KAAKC,KACHhH,EAAS0B,EAAO,CACdR,KAAM,SACNU,QAASoF,OAEX,MAEF,KAAKC,KACHjH,EAAS0B,EAAO,CACdR,KAAM,SACNU,QAASsF,OAEX,MAEF,KAAKC,KACHnH,EAAS0B,EAAO,CACdR,KAAM,SACNU,QAASuF,OAEX,MAEF,KAAKC,KACHpH,EAAS0B,EAAO,CACdR,KAAM,SACNU,QAASyF,OAEX,MAEF,KAAKC,KACHtH,EAAS0B,EAAO,CACdR,KAAM,SACNU,QAAS2F,OAEX,MAEF,KAAKC,KACHxH,EAAS,mBAAoB,CAC3BkB,KAAM,SACNU,QAAS6F,OAEX,MAEF,KAAKC,KACH1H,EAAS,mBAAoB,CAC3BkB,KAAM,SACNU,QAAS+F,OAEX,MAEF,KAAKC,KACH5H,EAAS0B,EAAO,CACdR,KAAM,SACNU,QAASiG,OAEX,MAEF,KAAKC,KACH9H,EAAS0B,EAAO,CACdR,KAAM,SACNU,QAASmG,OAEX,MAEF,QACE/H,EAAS,mBAAoB,CAC3BkB,KAAM,SACNU,QAAS,kGAyBFvB,IAnBgB,SAAC2H,EAAchI,GAChB,kBAAjBgI,EACThI,EAAS,mBAAoB,CAC3BkB,KAAM,SACNU,QAAS,gGAGX+D,OAAOC,KAAKoC,GAAcC,SAAQ,SAACvG,GAE7BwG,MAAMC,QAAQH,EAAatG,IAE7BoF,EAAiBkB,EAAatG,GAAO,GAAG0G,WAAY1G,EAAO1B,GAE3D8G,EAAiBkB,EAAatG,GAAO0G,WAAY1G,EAAO1B,Q,iCClHhE,+EAmEImD,EAAoBf,cAAiB,SAAc8B,EAAOC,GAC5D,IAAIhE,EAAU+D,EAAM/D,QAChBI,EAAY2D,EAAM3D,UAClB8H,EAAenE,EAAMxG,MACrBA,OAAyB,IAAjB2K,EAA0B,UAAYA,EAC9CjE,EAAmBF,EAAMd,UACzBA,OAAiC,IAArBgB,EAA8B,IAAMA,EAChDkE,EAASpE,EAAMoE,OACfC,EAAUrE,EAAMqE,QAChBC,EAAoBtE,EAAMsE,kBAC1BC,EAAmBvE,EAAMX,UACzBA,OAAiC,IAArBkF,EAA8B,QAAUA,EACpDC,EAAiBxE,EAAMlD,QACvBA,OAA6B,IAAnB0H,EAA4B,UAAYA,EAClD/D,EAAQC,YAAyBV,EAAO,CAAC,UAAW,YAAa,QAAS,YAAa,SAAU,UAAW,oBAAqB,YAAa,YAE9IyE,EAAqBC,cACrBC,EAAiBF,EAAmBE,eACpCC,EAAgBH,EAAmBG,cACnCC,EAAkBJ,EAAmBxE,IAErC6E,EAAkB5G,YAAe,GACjC6G,EAAeD,EAAgB,GAC/BE,EAAkBF,EAAgB,GAElCG,EAAaC,YAAWjF,EAAK4E,GAuBjC,OAAoB3G,gBAAoBrB,IAAY8D,YAAS,CAC3DtE,UAAWuE,YAAK3E,EAAQpD,KAAMoD,EAAQ,YAAY4E,OAAOC,YAAWzB,KAAchD,EAAW0I,GAAgB9I,EAAQ8I,aAA4B,WAAd7F,GAA0BjD,EAAQtC,QACrKsC,QAASqI,EACT9K,MAAOA,EACP0F,UAAWA,EACXkF,OA1Be,SAAoBe,GAC/BJ,IACFH,IACAI,GAAgB,IAGdZ,GACFA,EAAOe,IAoBTd,QAhBgB,SAAqBc,GACjCR,EAAeQ,IACjBH,GAAgB,GAGdX,GACFA,EAAQc,IAWVlF,IAAKgF,EACLnI,QAASA,GACR2D,OAuDUO,gBAxKK,CAElBnI,KAAM,GAGNuM,cAAe,CACbC,eAAgB,QAIlBC,eAAgB,CACdD,eAAgB,OAChB,UAAW,CACTA,eAAgB,cAKpBE,gBAAiB,CACfF,eAAgB,aAKlB1L,OAAQ,CACN6L,SAAU,WACVC,wBAAyB,cACzBC,gBAAiB,cAGjBC,QAAS,EACTC,OAAQ,EACRvL,OAAQ,EAERqF,aAAc,EACdvG,QAAS,EAET0M,OAAQ,UACRC,WAAY,OACZC,cAAe,SACf,kBAAmB,OAEnB,qBAAsB,OAEtB,sBAAuB,CACrBC,YAAa,QAGf,iBAAkB,CAChBL,QAAS,SAKbZ,aAAc,IAkHkB,CAChCzH,KAAM,WADO0D,CAEZ/B","file":"static/js/36.fe335af2.chunk.js","sourcesContent":["import { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    width: '100%',\n    boxSizing: 'border-box',\n    padding: '0',\n  },\n  fieldset: {\n    display: 'flex',\n    flexDirection: 'column',\n    gap: '24px',\n    alignItems: 'center',\n  },\n  succesText: {\n    fontFamily: 'YS Text',\n    color: 'hsla(240, 3%, 49%, 1)',\n    fontWeight: 'normal',\n  },\n  input: {\n    width: '100%',\n  },\n  button: {\n    padding: '0',\n    textTransform: 'none',\n    fontSize: '16px',\n    lineHeight: '20px',\n    marginTop: '-20px',\n  },\n  registerTitle: {\n    color: '#B5B5B7',\n    marginTop: '20px',\n    marginBottom: '120px',\n  },\n  registerLink: {\n    color: '#ffffff',\n  },\n}))\n\nexport default useStyles\n","import { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    width: '100%',\n    boxSizing: 'border-box',\n    padding: '0',\n  },\n  successContainer: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    width: '100%',\n    boxSizing: 'border-box',\n    padding: '0',\n    marginTop: '32px',\n  },\n  successTitle: {\n    margin: '32px 0 24px 0',\n    fontFamily: 'YS Text',\n    textAlign: 'center',\n  },\n  fieldset: {\n    display: 'flex',\n    flexDirection: 'column',\n    gap: '24px',\n    alignItems: 'center',\n  },\n  input: {\n    width: '100%',\n    marginTop: '-20px',\n  },\n  firstInput: {\n    marginTop: 0,\n  },\n  button: {\n    padding: '0',\n    textTransform: 'none',\n    fontSize: '16px',\n    lineHeight: '20px',\n    marginTop: '-20px',\n  },\n  registerTitle: {\n    color: '#B5B5B7',\n    marginTop: '20px',\n    marginBottom: '120px',\n  },\n  registerLink: {\n    color: '#ffffff',\n  },\n}))\n\nexport default useStyles\n","import React, { FC, useEffect } from 'react'\nimport { Button, Container, TextField, Typography } from '@material-ui/core'\nimport { MoonLoader } from 'react-spinners'\nimport { useNavigate } from 'react-router-dom'\nimport { yupResolver } from '@hookform/resolvers/yup'\nimport { useForm, Controller, SubmitHandler } from 'react-hook-form'\nimport useStyles from './CreateNewPassword.styles'\nimport FormContainer from '../../../components/Sub/FormContainer/FormContainer'\nimport { PROJECT_NAME } from '../../../utils/constants'\nimport IconSuccessRegistration from '../../../assets/Icons/IconSuccessRegistration/IconSuccessRegistration'\nimport { regFormNewPasswordSchema } from '../../../utils/schemas'\nimport processAuthServerError from '../../../utils/auth-server-error'\nimport { useAppDispatch, useAppSelector } from '../../../services/store/hooks'\nimport { createPassword } from '../../../services/axios/auth'\n\ninterface ICreateNewPasswordProps {\n  token: string\n}\n\ntype FormValues = {\n  password: string\n  password2: string\n}\n\nconst CreateNewPassword: FC<ICreateNewPasswordProps> = ({ token }) => {\n  const dispatch = useAppDispatch()\n  const {\n    createPassRequest: { status, isError, errorInfo },\n  } = useAppSelector((store) => store.auth)\n  const navigate = useNavigate()\n  const isLoading = status === 'pending'\n  const isSuccess = status === 'succeeded'\n  const {\n    control,\n    handleSubmit,\n    setError,\n    formState: { errors },\n  } = useForm<FormValues>({\n    resolver: yupResolver(regFormNewPasswordSchema),\n    mode: 'onChange',\n  })\n\n  const onSubmit: SubmitHandler<FormValues> = (data) => {\n    dispatch(createPassword({ password: data.password, token }))\n  }\n\n  const onClickToMainPage = () => {\n    navigate('/sign-in')\n  }\n  const classes = useStyles()\n\n  useEffect(() => {\n    if (isError) processAuthServerError(errorInfo, setError)\n  }, [isError])\n\n  return (\n    <Container className={classes.root}>\n      <FormContainer\n        title={PROJECT_NAME}\n        description=\"Придумай новый пароль\"\n        noTextContainer={isSuccess}\n        error={errors}\n      >\n        {isSuccess ? (\n          <div className={classes.successContainer}>\n            <IconSuccessRegistration />\n            <Typography variant=\"body1\" className={classes.successTitle}>\n              Пароль изменён\n            </Typography>\n            <Button className={classes.button} type=\"submit\" onClick={onClickToMainPage}>\n              Перейти на главную\n            </Button>\n          </div>\n        ) : (\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <fieldset className={classes.fieldset}>\n              <Controller\n                name=\"password\"\n                control={control}\n                render={({ field }) => (\n                  <TextField\n                    {...field}\n                    type=\"password\"\n                    error={!!errors.password?.message}\n                    helperText={errors.password?.message || ' '}\n                    className={`${classes.input} ${classes.firstInput}`}\n                    variant=\"outlined\"\n                    placeholder=\"Придумай новый пароль\"\n                    inputProps={{ disableUnderline: true }}\n                  />\n                )}\n              />\n              <Controller\n                name=\"password2\"\n                control={control}\n                render={({ field }) => (\n                  <TextField\n                    {...field}\n                    type=\"password\"\n                    error={!!errors.password2?.message}\n                    helperText={errors.password2?.message || ' '}\n                    className={classes.input}\n                    variant=\"outlined\"\n                    placeholder=\"Повтори новый пароль\"\n                    inputProps={{ disableUnderline: true }}\n                  />\n                )}\n              />\n\n              {isLoading ? (\n                <MoonLoader color=\"#1d6bf3\" loading size={39} />\n              ) : (\n                <Button className={classes.button} type=\"submit\">\n                  Установить новый пароль\n                </Button>\n              )}\n            </fieldset>\n          </form>\n        )}\n      </FormContainer>\n    </Container>\n  )\n}\n\nexport default React.memo(CreateNewPassword)\n","import React, { FC, useEffect } from 'react'\nimport { MoonLoader } from 'react-spinners'\nimport { Button, Container, Link, TextField, Typography, CircularProgress } from '@material-ui/core'\nimport { Link as RouterLink, useSearchParams } from 'react-router-dom'\nimport { yupResolver } from '@hookform/resolvers/yup'\nimport { useForm, Controller, SubmitHandler } from 'react-hook-form'\nimport * as yup from 'yup'\nimport useStyles from './ResetPassword.styles'\nimport FormContainer from '../../../components/Sub/FormContainer/FormContainer'\nimport { PROJECT_NAME } from '../../../utils/constants'\nimport CreateNewPassword from '../CreateNewPassword/CreateNewPassword'\nimport processAuthServerError from '../../../utils/auth-server-error'\nimport { useAppDispatch, useAppSelector } from '../../../services/store/hooks'\nimport { resetPassword } from '../../../services/axios/auth'\nimport { TResetPasswordData } from '../../../services/types/auth/auth-types'\n\nconst schema = yup.object().shape({\n  email: yup.string().required('Введите email').email('Такой email не подойдет'),\n})\nconst ResetPassword: FC = () => {\n  const dispatch = useAppDispatch()\n  const {\n    resetPassRequest: { status, isError, errorInfo },\n  } = useAppSelector((store) => store.auth)\n  const isLoading = status === 'pending'\n  const isSuccess = status === 'succeeded'\n  const [searchParams] = useSearchParams()\n  const token = searchParams.get('token')\n  const defaultValues = {}\n\n  const {\n    control,\n    handleSubmit,\n    setError,\n    formState: { errors },\n  } = useForm<TResetPasswordData>({\n    defaultValues,\n    resolver: yupResolver<yup.AnyObjectSchema>(schema),\n    mode: 'onChange',\n  })\n\n  const onSubmit: SubmitHandler<TResetPasswordData> = (data) => {\n    dispatch(resetPassword(data))\n  }\n  const classes = useStyles()\n\n  useEffect(() => {\n    if (isError) processAuthServerError(errorInfo, setError)\n  }, [isError])\n\n  return (\n    <Container className={classes.root}>\n      {token ? (\n        <CreateNewPassword token={token} />\n      ) : (\n        <>\n          <FormContainer\n            title={PROJECT_NAME}\n            subtitle=\"Восстановление пароля\"\n            description=\"Введи электронный адрес, указанный при регистрации\"\n            noTextContainer={isSuccess}\n            error={errors}\n          >\n            {isSuccess ? (\n              <Typography align=\"center\" variant=\"body1\" className={classes.succesText}>\n                На выбранную почту были отправлены инструкции по восстановлению пароля\n              </Typography>\n            ) : (\n              <form onSubmit={handleSubmit(onSubmit)}>\n                <fieldset className={classes.fieldset}>\n                  <Controller\n                    name=\"email\"\n                    control={control}\n                    render={({ field }) => (\n                      <TextField\n                        {...field}\n                        error={!!errors.email?.message}\n                        helperText={errors.email?.message || ' '}\n                        className={classes.input}\n                        variant=\"outlined\"\n                        placeholder=\"Почта\"\n                        inputProps={{ disableUnderline: true }}\n                      />\n                    )}\n                  />\n\n                  {isLoading ? (\n                    <MoonLoader color=\"#1d6bf3\" loading size={39} />\n                  ) : (\n                    <Button className={classes.button} type=\"submit\">\n                      Восстановить пароль\n                    </Button>\n                  )}\n                </fieldset>\n              </form>\n            )}\n          </FormContainer>\n          <Typography className={classes.registerTitle} variant=\"body1\">\n            <Link className={classes.registerLink} component={RouterLink} to=\"/sign-in\" underline=\"none\">\n              Вернуться на главную\n            </Link>\n          </Typography>\n        </>\n      )}\n    </Container>\n  )\n}\n\nexport default React.memo(ResetPassword)\n","import { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    background: theme.palette.background.default,\n    borderRadius: '12px',\n    maxWidth: 386,\n    width: '100%',\n    padding: '32px 40px 32px 40px',\n  },\n  title: {\n    fontWeight: 'bold',\n    marginBottom: '24px',\n    textAlign: 'center',\n  },\n  subtitle: {\n    textAlign: 'center',\n  },\n  description: {\n    textAlign: 'center',\n  },\n  description_color_red: {\n    color: '#FF0200',\n  },\n  textContainer: {\n    display: 'flex',\n    flexDirection: 'column',\n    gap: '4px',\n    alignItems: 'center',\n    marginBottom: '24px',\n  },\n}))\n\nexport default useStyles\n","/* eslint-disable camelcase */\nimport React, { FC, ReactNode } from 'react'\nimport { Typography } from '@material-ui/core'\nimport { FieldError } from 'react-hook-form'\nimport useStyles from './FormContainer.styles'\n\ninterface IFormContainerProps {\n  title: string\n  subtitle?: string\n  description: string\n  error: { [fieldName: string]: FieldError }\n  noTextContainer?: boolean\n  children: ReactNode\n}\n\nconst FormContainer: FC<IFormContainerProps> = ({ children, title, subtitle, description, error, noTextContainer }) => {\n  const classes = useStyles()\n  return (\n    <div className={classes.root}>\n      <Typography className={classes.title} color=\"textPrimary\" variant=\"h2\" component=\"h1\">\n        {title}\n      </Typography>\n      {!noTextContainer && (\n        <div className={classes.textContainer}>\n          <Typography className={classes.subtitle} variant=\"body1\">\n            {subtitle}\n          </Typography>\n          {description && (\n            <Typography\n              className={\n                error?.non_field_errors\n                  ? `${classes.description} ${classes.description_color_red}`\n                  : classes.description\n              }\n              color=\"textSecondary\"\n              variant=\"body1\"\n            >\n              {/* eslint-disable-next-line no-nested-ternary */}\n              {error?.non_field_errors ? error?.non_field_errors?.message : description}\n            </Typography>\n          )}\n        </div>\n      )}\n      {children}\n    </div>\n  )\n}\n\nexport default React.memo(FormContainer)\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: _defineProperty({\n      width: '100%',\n      marginLeft: 'auto',\n      boxSizing: 'border-box',\n      marginRight: 'auto',\n      paddingLeft: theme.spacing(2),\n      paddingRight: theme.spacing(2),\n      display: 'block'\n    }, theme.breakpoints.up('sm'), {\n      paddingLeft: theme.spacing(3),\n      paddingRight: theme.spacing(3)\n    }),\n\n    /* Styles applied to the root element if `disableGutters={true}`. */\n    disableGutters: {\n      paddingLeft: 0,\n      paddingRight: 0\n    },\n\n    /* Styles applied to the root element if `fixed={true}`. */\n    fixed: Object.keys(theme.breakpoints.values).reduce(function (acc, breakpoint) {\n      var value = theme.breakpoints.values[breakpoint];\n\n      if (value !== 0) {\n        acc[theme.breakpoints.up(breakpoint)] = {\n          maxWidth: value\n        };\n      }\n\n      return acc;\n    }, {}),\n\n    /* Styles applied to the root element if `maxWidth=\"xs\"`. */\n    maxWidthXs: _defineProperty({}, theme.breakpoints.up('xs'), {\n      maxWidth: Math.max(theme.breakpoints.values.xs, 444)\n    }),\n\n    /* Styles applied to the root element if `maxWidth=\"sm\"`. */\n    maxWidthSm: _defineProperty({}, theme.breakpoints.up('sm'), {\n      maxWidth: theme.breakpoints.values.sm\n    }),\n\n    /* Styles applied to the root element if `maxWidth=\"md\"`. */\n    maxWidthMd: _defineProperty({}, theme.breakpoints.up('md'), {\n      maxWidth: theme.breakpoints.values.md\n    }),\n\n    /* Styles applied to the root element if `maxWidth=\"lg\"`. */\n    maxWidthLg: _defineProperty({}, theme.breakpoints.up('lg'), {\n      maxWidth: theme.breakpoints.values.lg\n    }),\n\n    /* Styles applied to the root element if `maxWidth=\"xl\"`. */\n    maxWidthXl: _defineProperty({}, theme.breakpoints.up('xl'), {\n      maxWidth: theme.breakpoints.values.xl\n    })\n  };\n};\nvar Container = /*#__PURE__*/React.forwardRef(function Container(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$disableGutters = props.disableGutters,\n      disableGutters = _props$disableGutters === void 0 ? false : _props$disableGutters,\n      _props$fixed = props.fixed,\n      fixed = _props$fixed === void 0 ? false : _props$fixed,\n      _props$maxWidth = props.maxWidth,\n      maxWidth = _props$maxWidth === void 0 ? 'lg' : _props$maxWidth,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\", \"disableGutters\", \"fixed\", \"maxWidth\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, fixed && classes.fixed, disableGutters && classes.disableGutters, maxWidth !== false && classes[\"maxWidth\".concat(capitalize(String(maxWidth)))]),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Container.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * @ignore\n   */\n  children: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, the left and right padding is removed.\n   */\n  disableGutters: PropTypes.bool,\n\n  /**\n   * Set the max-width to match the min-width of the current breakpoint.\n   * This is useful if you'd prefer to design for a fixed set of sizes\n   * instead of trying to accommodate a fully fluid viewport.\n   * It's fluid by default.\n   */\n  fixed: PropTypes.bool,\n\n  /**\n   * Determine the max-width of the container.\n   * The container width grows with the size of the screen.\n   * Set to `false` to disable `maxWidth`.\n   */\n  maxWidth: PropTypes.oneOf(['lg', 'md', 'sm', 'xl', 'xs', false])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiContainer'\n})(Container);","import {\n  AUTH_ACCOUNT_NOT_FOUND_ERROR,\n  FORGOT_PASSWORD_ERROR,\n  FORGOT_PASSWORD_ERROR_FORM_TEXT,\n  LOGIN_ENTER_ERROR,\n  NOT_EQUAL_PASSWORD_ERROR,\n  PASSWORD_LIKE_EMAIL_ERROR,\n  PASSWORD_LIKE_EMAIL_ERROR_FORM_TEXT,\n  REG_FORM_BAD_EMAIL_ERROR,\n  REG_FORM_CONFIRM_PASS_ERROR,\n  REG_FORM_MINMAX_SYMBOLS_ERROR,\n  REGISTER_INVALID_MAIL,\n  REGISTER_PRIVATE_INFO_ERROR,\n  REGISTER_SHORT_PASSWORD_ERROR,\n  REGISTER_UNIQUE_MAIL,\n  REGISTER_UNIQUE_MAIL_FORM_TEXT,\n  REGISTER_WEAK_NUMBER_PASSWORD_ERROR,\n  REGISTER_WEAK_PASSWORD_ERROR,\n} from './constants'\n\nconst authErrorChecker = (error, field, setError) => {\n  switch (error) {\n    case REGISTER_WEAK_NUMBER_PASSWORD_ERROR: {\n      setError(field, {\n        type: 'server',\n        message: REGISTER_WEAK_NUMBER_PASSWORD_ERROR,\n      })\n      break\n    }\n    case REGISTER_WEAK_PASSWORD_ERROR: {\n      setError(field, {\n        type: 'server',\n        message: REGISTER_WEAK_PASSWORD_ERROR,\n      })\n      break\n    }\n    case REGISTER_SHORT_PASSWORD_ERROR: {\n      setError(field, {\n        type: 'server',\n        message: REG_FORM_MINMAX_SYMBOLS_ERROR,\n      })\n      break\n    }\n    case REGISTER_PRIVATE_INFO_ERROR: {\n      setError(field, {\n        type: 'server',\n        message: REGISTER_PRIVATE_INFO_ERROR,\n      })\n      break\n    }\n    case REGISTER_UNIQUE_MAIL: {\n      setError(field, {\n        type: 'server',\n        message: REGISTER_UNIQUE_MAIL_FORM_TEXT,\n      })\n      break\n    }\n    case REGISTER_INVALID_MAIL: {\n      setError(field, {\n        type: 'server',\n        message: REG_FORM_BAD_EMAIL_ERROR,\n      })\n      break\n    }\n    case AUTH_ACCOUNT_NOT_FOUND_ERROR: {\n      setError('non_field_errors', {\n        type: 'server',\n        message: LOGIN_ENTER_ERROR,\n      })\n      break\n    }\n    case NOT_EQUAL_PASSWORD_ERROR: {\n      setError('non_field_errors', {\n        type: 'server',\n        message: REG_FORM_CONFIRM_PASS_ERROR,\n      })\n      break\n    }\n    case FORGOT_PASSWORD_ERROR: {\n      setError(field, {\n        type: 'server',\n        message: FORGOT_PASSWORD_ERROR_FORM_TEXT,\n      })\n      break\n    }\n    case PASSWORD_LIKE_EMAIL_ERROR: {\n      setError(field, {\n        type: 'server',\n        message: PASSWORD_LIKE_EMAIL_ERROR_FORM_TEXT,\n      })\n      break\n    }\n    default: {\n      setError('non_field_errors', {\n        type: 'server',\n        message: 'Серверная ошибка',\n      })\n    }\n  }\n}\n\nconst processAuthServerError = (serverErrors, setError) => {\n  if (typeof serverErrors !== 'object') {\n    setError('non_field_errors', {\n      type: 'server',\n      message: 'Серверная ошибка',\n    })\n  } else {\n    Object.keys(serverErrors).forEach((field) => {\n      // Ошибки могут возвращаться массивом, учитываем это\n      if (Array.isArray(serverErrors[field])) {\n        // Достаточно вывести первую ошибку\n        authErrorChecker(serverErrors[field][0].toString(), field, setError)\n      } else {\n        authErrorChecker(serverErrors[field].toString(), field, setError)\n      }\n    })\n  }\n}\n\nexport default processAuthServerError\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport capitalize from '../utils/capitalize';\nimport withStyles from '../styles/withStyles';\nimport { elementTypeAcceptingRef } from '@material-ui/utils';\nimport useIsFocusVisible from '../utils/useIsFocusVisible';\nimport useForkRef from '../utils/useForkRef';\nimport Typography from '../Typography';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {},\n\n  /* Styles applied to the root element if `underline=\"none\"`. */\n  underlineNone: {\n    textDecoration: 'none'\n  },\n\n  /* Styles applied to the root element if `underline=\"hover\"`. */\n  underlineHover: {\n    textDecoration: 'none',\n    '&:hover': {\n      textDecoration: 'underline'\n    }\n  },\n\n  /* Styles applied to the root element if `underline=\"always\"`. */\n  underlineAlways: {\n    textDecoration: 'underline'\n  },\n  // Same reset as ButtonBase.root\n\n  /* Styles applied to the root element if `component=\"button\"`. */\n  button: {\n    position: 'relative',\n    WebkitTapHighlightColor: 'transparent',\n    backgroundColor: 'transparent',\n    // Reset default value\n    // We disable the focus ring for mouse, touch and keyboard users.\n    outline: 0,\n    border: 0,\n    margin: 0,\n    // Remove the margin in Safari\n    borderRadius: 0,\n    padding: 0,\n    // Remove the padding in Firefox\n    cursor: 'pointer',\n    userSelect: 'none',\n    verticalAlign: 'middle',\n    '-moz-appearance': 'none',\n    // Reset\n    '-webkit-appearance': 'none',\n    // Reset\n    '&::-moz-focus-inner': {\n      borderStyle: 'none' // Remove Firefox dotted outline.\n\n    },\n    '&$focusVisible': {\n      outline: 'auto'\n    }\n  },\n\n  /* Pseudo-class applied to the root element if the link is keyboard focused. */\n  focusVisible: {}\n};\nvar Link = /*#__PURE__*/React.forwardRef(function Link(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'primary' : _props$color,\n      _props$component = props.component,\n      component = _props$component === void 0 ? 'a' : _props$component,\n      onBlur = props.onBlur,\n      onFocus = props.onFocus,\n      TypographyClasses = props.TypographyClasses,\n      _props$underline = props.underline,\n      underline = _props$underline === void 0 ? 'hover' : _props$underline,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'inherit' : _props$variant,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"color\", \"component\", \"onBlur\", \"onFocus\", \"TypographyClasses\", \"underline\", \"variant\"]);\n\n  var _useIsFocusVisible = useIsFocusVisible(),\n      isFocusVisible = _useIsFocusVisible.isFocusVisible,\n      onBlurVisible = _useIsFocusVisible.onBlurVisible,\n      focusVisibleRef = _useIsFocusVisible.ref;\n\n  var _React$useState = React.useState(false),\n      focusVisible = _React$useState[0],\n      setFocusVisible = _React$useState[1];\n\n  var handlerRef = useForkRef(ref, focusVisibleRef);\n\n  var handleBlur = function handleBlur(event) {\n    if (focusVisible) {\n      onBlurVisible();\n      setFocusVisible(false);\n    }\n\n    if (onBlur) {\n      onBlur(event);\n    }\n  };\n\n  var handleFocus = function handleFocus(event) {\n    if (isFocusVisible(event)) {\n      setFocusVisible(true);\n    }\n\n    if (onFocus) {\n      onFocus(event);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Typography, _extends({\n    className: clsx(classes.root, classes[\"underline\".concat(capitalize(underline))], className, focusVisible && classes.focusVisible, component === 'button' && classes.button),\n    classes: TypographyClasses,\n    color: color,\n    component: component,\n    onBlur: handleBlur,\n    onFocus: handleFocus,\n    ref: handlerRef,\n    variant: variant\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Link.propTypes = {\n  /**\n   * The content of the link.\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the link.\n   */\n  color: PropTypes.oneOf(['initial', 'inherit', 'primary', 'secondary', 'textPrimary', 'textSecondary', 'error']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: elementTypeAcceptingRef,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * `classes` prop applied to the [`Typography`](/api/typography/) element.\n   */\n  TypographyClasses: PropTypes.object,\n\n  /**\n   * Controls when the link should have an underline.\n   */\n  underline: PropTypes.oneOf(['none', 'hover', 'always']),\n\n  /**\n   * Applies the theme typography styles.\n   */\n  variant: PropTypes.string\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiLink'\n})(Link);"],"sourceRoot":""}