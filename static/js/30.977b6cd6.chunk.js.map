{"version":3,"sources":["components/Main/OnboardingPage/OnboardingFormResume/OnboardingFormResume.styles.ts","components/Main/OnboardingPage/OnboardingFormResume/OnboardingFormResume.tsx","utils/schemas.js","utils/dates.js","assets/Icons/IconDeleteButton/IconDeleteButton.jsx","assets/Icons/IconExpandMore/IconExpandMore.jsx","assets/telegram-icon.svg","components/Sub/Dropzone/Dropzone.style.js","components/Sub/Dropzone/Dropzone.jsx","assets/email-icon.svg","utils/object-to-form-data.ts"],"names":["useStyles","makeStyles","form","width","zIndex","fieldset","display","flexDirection","gap","alignItems","marginTop","padding","input","fontFamily","join","fontSize","lineHeight","fontWeight","minHeight","marginLeft","color","inputTelegram","paddingLeft","selectContainer","selectName","inputSelect","top","avatarContainer","avatar","backgroundColor","avatarText","buttonContainer","fieldContainer","twoFieldInRowContainer","gridTemplateColumns","formButton","textTransform","borderRadius","outline","previousButton","iconComponent","IconExpandMore","selectMenuProps","anchorOrigin","vertical","horizontal","transformOrigin","getContentAnchorEl","comMethods","id","name","icon","telegramIcon","emailIcon","OnboardingFormResume","classes","navigate","useNavigate","location","useLocation","dispatch","useAppDispatch","state","useAppSelector","store","onboarding","personalInfo","experienceInfo","resumeInfo","status","isError","profile","auth","useState","files","setFiles","onboardingResumeSchema","validationSchema","setValidationSchema","defaultValues","contact_type","contact_info","portfolio_url","useForm","resolver","useMemo","yupResolver","mode","control","handleSubmit","register","setValue","watch","getValues","errors","formState","methodValue","isTelegram","contactPlaceholder","contactClassName","contactAdornment","startAdornment","InputAdornment","position","sx","marginRight","useEffect","clearOnboardingInfo","shouldValidate","shouldDirty","scheme","omit","option","telegramOption","emailOption","shape","Typography","onSubmit","formData","setResumeInfo","course_id","restExperienceInfo","restFormData","allOnboardingData","birth_date","formatApiDate","Date","course","image","undefined","city","allOnboardingDataFD","getFormData","forEach","file","index","append","postOnboarding","className","variant","FormControl","hiddenLabel","Select","MenuProps","labelId","defaultValue","IconComponent","onChange","e","target","value","map","method","MenuItem","src","alt","FormHelperText","message","render","field","TextField","error","helperText","placeholder","InputProps","Dropzone","filesState","Button","type","onClick","values","loading","size","yup","required","REG_FORM_EMPTY_EMAIL_ERROR","email","trim","urlOption","nullable","matches","URL_REG_EXP","urlOptionVacancyTab","telegramChatID","INTEGER_REGEX","firstNameOptions","min","MIN_TEXT_FIELD_SYMBOLS","MAX_TEXT_FIELD_SYMBOLS","max","NAME_FIELDS_REG_EXP","NAME_FIELDS_TIP","firstNameNotRequiredOptions","genderOptions","lastNameOptions","lastNameNotRequiredOptions","birthDateOptions","test","MAX_BIRTHDAY_DATE_ERROR","differenceInYears","courseOptions","multipleValuesOptions","experienceTypeOptions","educationLevelOptions","cohortNumberOptions","previousJobPositionOptions","OTHER_TEXT_FIELDS_REG_EXP","OTHER_TEXT_FIELDS_TIP","institutionOptions","INSTITUTION_TEXT_FIELDS_REG_EXP","INSTITUTION_TEXT_FIELDS_TIP","imageOptions","SUPPORTED_FORMATS","includes","logoOptions","LOGO_SUPPORTED_FORMATS_VALIDATION","vacationThirdPadAboutCompanyOptions","VACATION_THIRD_PAD_TEXTFIELD_MIN_SYMBOLS","VACATION_THIRD_PAD_ABOUT_COMPANY_MINMAX_TIPS","VACATION_THIRD_PAD_TEXTFIELD_MAX_SYMBOLS","vacationThirdSelectionStagesOptions","VACATION_THIRD_PAD_SELECTION_STAGE_FIELD_MIN_SYMBOLS","VACATION_THIRD_PAD_SELECTION_STAGE_MINMAX_TIPS","VACATION_THIRD_PAD_ABOUT_COMPANY_MAX_SYMBOLS","vacationThirdPadTextOptions","VACATION_THIRD_PAD_TEXTFIELD_MINMAX_TIPS","vacationNonRequiredRequirementsOptions","VACATION_WITHOUT_MIN_MINMAX_TIPS","passwordOption","REG_FORM_BAD_PASS_ERROR","REG_FORM_MIN_SYMBOLS","REG_FORM_MINMAX_SYMBOLS_ERROR","REG_FORM_MAX_SYMBOLS","PASSWORD_REG_EXP","passwordRepeatOption","oneOf","REG_FORM_CONFIRM_PASS_ERROR","regFormSchema","REG_FORM_BAD_EMAIL_ERROR","password","password2","regFormNewPasswordSchema","workVacancyOption","moreThan","typeError","transform","original","RESPONSE_TEXT_FIELDS_MIN_SYMBOLS","RESPONSE_TEXT_FIELD_MINMAX_TIP","RESPONSE_TEXT_FIELD_MAX_SYMBOLS","RESPONSE_WORK_REGEXP","RESPONSE_WORK_TIP","positionOption","TEXT_REGEX","excludeEmptyString","TEXT_REGEX_TIP","positionNotRequiredOption","contactResponseOption","newVacationSchema","start_date","format","now","end_date","endDate","context","parent","startDate","differenceInCalendarDays","foundJobSchema","company_name","job_name","offer_date","employment_history","MIN_COMMENT_SYMBOLS_FOUND_JOB_AND_WEEK_REPORT","MAX_COMMENT_SYMBOLS_FOUND_JOB_AND_WEEK_REPORT","newReportSchema","comment","newInterviewSchema","interview_date","newConsultSchema","consultation_theme","problem_description","cityOptions","editFormSchema","first_name","gender","last_name","experience_type","education_type","cohort_number","previous_job_position","institution","FILE_SIZE","newResponseSchema","is_remote_work","cities","RESPONSE_COMMENT_MAX_SYMBOLS","RESPONSE_COMMENT_MAX_SYMBOLS_TIP","url","salary","salary_max","when","is","val","then","theme","color_id","response_date","today","setHours","twoWeeksAgo","setDate","getDate","hr_interview_date","responseDate","schema","test_task_date","tech_interview_date","boss_interview_date","rejection_date","onboardingPersonalSchema","onboardingExperienceSchema","filtersSchema","search","newCohortSchema","CREATE_COHORT_COURSE_REQUIRED_ERROR","CREATE_COHORT_NUMBER_REQUIRED_ERROR","CREATE_COHORT_NUMBER_ERROR","vacancyFirstTabSchema","isSalaryNotRequired","isConfidentialLinkNotRequired","otherwise","notRequired","website","company_confidential_url","currency","vacancySecondTabSchema","isTestTaskLinkNotRequired","test_task_url","vacancyThirdTabSchema","vacancy_info","responsibilities","circs","vacancyFourthTabSchema","mandatory_requirements","optional_requirements","selection_stages","chat_id","vacancy_url","vacancyFifthTabSchema","company_logo","applyJobSchema","isTestLinkRequired","resume","new_resume","termsOfUseSchema","isAccept","accelerationScheme","modified_at","newContactSchema","a","b","c","d","phone","PHONE_REG_EXP","responses_field","changeStatusSchema","date","formatRusStyle","formatDayMonthYear","locale","ru","split","formatDayFullMonthYear","formatDayMonthYearWithComma","formatDayFullMonth","formatDbDate","getDurationInYearWeekDay","duration","intervalToDuration","start","end","formatDuration","IconDeleteButton","height","viewBox","fill","xmlns","props","container","dropzoneTitle","dropzone","border","boxSizing","dropzoneCover","dropzoneLittleCover","dropzoneTextContainer","dropzoneText","dropzoneButtonAndValidationContainer","dropzoneButton","errorText","fileList","margin","resume__link","justifyContent","boxShadow","maxHeight","marginBottom","transition","textDecoration","cursor","fileInfo","maxWidth","overflow","textOverflow","deleteButton","right","deletedFiles","isEditPopup","label","setIsFilesChanged","maxFilesNumber","nameTip","fileTip","acceptedFormats","isBigCover","isCover","isVacancyPopup","React","fileError","setFileError","addedFiles","setAddedFiles","deletedId","setDeletedId","countTip","PORTFOLIO_COUNT_TIP","useDropzone","maxFiles","accept","PORTFOLIO_SUPPORTED_FORMATS","noKeyboard","noClick","onDropAccepted","fileListArr","Array","from","length","PORTFOLIO_COUNT_EXTRA_TIP","onDropRejected","code","PORTFOLIO_SUPPORTED_FORMATS_TIP","onDrop","validator","MAX_PORTFOLIO_SIZE","MAX_PORTFOLIO_SIZE_TIP","getRootProps","getInputProps","open","handleRemoveFile","preventDefault","newFilesState","deletedFile","splice","fileCounter","isArray","acceptedFileItems","objectUrl","URL","createObjectURL","fileName","Box","objectFit","component","IconButton","href","download","rel","style","generateUniqueId","title","dropzoneInput","object","fd","FormData","Object","keys","key"],"mappings":"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","file":"static/js/30.977b6cd6.chunk.js","sourcesContent":["import { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles(() => ({\n  form: {\n    width: '100%',\n    zIndex: 2,\n  },\n  fieldset: {\n    display: 'flex',\n    flexDirection: 'column',\n    gap: '20px',\n    alignItems: 'center',\n    marginTop: '20px',\n    padding: 0,\n  },\n  input: {\n    width: '100%',\n    '& .MuiOutlinedInput-input': {\n      fontFamily: ['YS Text', '-apple-system', 'BlinkMacSystemFont', 'Arial', 'Helvetica', 'sans-serif'].join(','),\n      fontSize: '14px',\n      lineHeight: '20px',\n      fontWeight: 400,\n      padding: '12px 12px',\n    },\n    '& .MuiSelect-root': {\n      fontFamily: ['YS Text', '-apple-system', 'BlinkMacSystemFont', 'Arial', 'Helvetica', 'sans-serif'].join(','),\n      fontSize: '14px',\n      lineHeight: '24px',\n      fontWeight: 400,\n      minHeight: 24,\n      padding: '8px 12px',\n    },\n    '& .MuiFormHelperText-root': {\n      fontFamily: ['YS Text', '-apple-system', 'BlinkMacSystemFont', 'Arial', 'Helvetica', 'sans-serif'].join(','),\n      fontSize: 11,\n      lineHeight: '12px',\n      marginLeft: 0,\n      color: '#f44336',\n    },\n    '& :disabled': {\n      color: '#797981',\n    },\n  },\n  inputTelegram: {\n    '& .MuiOutlinedInput-input': {\n      paddingLeft: 1,\n    },\n  },\n  selectContainer: {\n    display: 'flex',\n    gap: 8,\n  },\n  selectName: {\n    fontFamily: ['YS Text', '-apple-system', 'BlinkMacSystemFont', 'Arial', 'Helvetica', 'sans-serif'].join(','),\n    fontSize: '14px',\n    lineHeight: '24px',\n    fontWeight: 400,\n    color: '#1a1b22',\n  },\n  inputSelect: {\n    '& .MuiInputLabel-formControl': {\n      top: '-8px',\n    },\n  },\n  avatarContainer: {\n    display: 'flex',\n    gap: 8,\n    width: '100%',\n    alignItems: 'center',\n  },\n  avatar: {\n    backgroundColor: '#DDE0E4',\n  },\n  avatarText: {\n    color: '#1D6BF3',\n  },\n  buttonContainer: {\n    display: 'flex',\n    gap: '20px',\n    width: '100%',\n  },\n  fieldContainer: {\n    display: 'flex',\n    flexDirection: 'column',\n    width: '100%',\n    gap: 4,\n  },\n  twoFieldInRowContainer: {\n    display: 'grid',\n    gridTemplateColumns: '148px 1fr',\n    gap: 12,\n  },\n  formButton: {\n    textTransform: 'none',\n    borderRadius: 6,\n    fontFamily: ['YS Text', '-apple-system', 'BlinkMacSystemFont', 'Arial', 'Helvetica', 'sans-serif'].join(','),\n    fontSize: '16px',\n    lineHeight: '20px',\n    fontWeight: 500,\n    outline: '1px solid #488efb',\n    '&:hover': {\n      outline: '1px solid #1d6bf3',\n    },\n  },\n  previousButton: {\n    '& .MuiButton-label': {\n      color: '#b5b5b7',\n    },\n    backgroundColor: '#fff',\n    outline: '1px solid #b5b5b7',\n    '&:hover': {\n      backgroundColor: '#b5b5b7',\n      outline: '1px solid #b5b5b7',\n      '& .MuiButton-label': {\n        color: '#fff',\n      },\n    },\n  },\n}))\n\nexport default useStyles\n","/* eslint-disable no-unused-vars */\nimport React, { useEffect, useMemo, useState } from 'react'\nimport { useLocation, useNavigate } from 'react-router-dom'\nimport { useForm, Controller, SubmitHandler } from 'react-hook-form'\nimport { yupResolver } from '@hookform/resolvers/yup'\nimport { MoonLoader } from 'react-spinners'\nimport {\n  TextField,\n  Button,\n  Select,\n  MenuItem,\n  FormControl,\n  FormHelperText,\n  Typography,\n  MenuProps,\n} from '@material-ui/core'\nimport InputAdornment from '@mui/material/InputAdornment'\nimport telegramIcon from '../../../../assets/telegram-icon.svg'\nimport emailIcon from '../../../../assets/email-icon.svg'\nimport IconExpandMore from '../../../../assets/Icons/IconExpandMore/IconExpandMore'\nimport { onboardingResumeSchema, emailOption, telegramOption } from '../../../../utils/schemas'\nimport getFormData from '../../../../utils/object-to-form-data'\nimport { formatApiDate } from '../../../../utils/dates'\nimport Dropzone from '../../../Sub/Dropzone/Dropzone'\nimport useStyles from './OnboardingFormResume.styles'\nimport { useAppDispatch, useAppSelector } from '../../../../services/store/hooks'\nimport { AllOnboardingInfo, ResumeInfo } from '../../../../services/types/onboarding/onboarding-types'\nimport { clearOnboardingInfo, setResumeInfo } from '../../../../services/slices/onboarding-slice'\nimport { postOnboarding } from '../../../../services/axios/auth'\n\nconst iconComponent = IconExpandMore\n\nconst selectMenuProps: Partial<MenuProps> = {\n  anchorOrigin: {\n    vertical: 'bottom',\n    horizontal: 'left',\n  },\n  transformOrigin: {\n    vertical: 'top',\n    horizontal: 'left',\n  },\n  getContentAnchorEl: null,\n}\n\nconst comMethods = [\n  {\n    id: 1,\n    name: 'Telegram',\n    icon: telegramIcon,\n  },\n  {\n    id: 2,\n    name: 'Email',\n    icon: emailIcon,\n  },\n]\n\nconst OnboardingFormResume = () => {\n  const classes = useStyles()\n  const navigate = useNavigate()\n  const location = useLocation()\n  const dispatch = useAppDispatch()\n\n  const avatar = location.state?.avatar\n  const { personalInfo, experienceInfo, resumeInfo, status, isError } = useAppSelector((store) => store.onboarding)\n  const { profile } = useAppSelector((store) => store.auth)\n\n  const [files, setFiles] = useState<File[]>([])\n  const [validationSchema, setValidationSchema] = useState(onboardingResumeSchema)\n\n  const defaultValues = resumeInfo || {\n    contact_type: 1,\n    contact_info: '',\n    portfolio_url: '',\n    files: [],\n  }\n\n  const {\n    control,\n    handleSubmit,\n    register,\n    setValue,\n    watch,\n    getValues,\n    formState: { errors },\n  } = useForm<ResumeInfo>({\n    defaultValues,\n    resolver: useMemo(() => yupResolver(validationSchema), [validationSchema]),\n    mode: 'onChange',\n  })\n\n  const methodValue = watch('contact_type')\n  if (!methodValue) setValue('contact_type', 1)\n  const isTelegram = methodValue === 1\n\n  let contactPlaceholder = 'Введи свой email'\n  let contactClassName = classes.input\n  let contactAdornment = {}\n  if (isTelegram) {\n    contactPlaceholder = 'Введи свой ник'\n    contactClassName = `${classes.input} ${classes.inputTelegram}`\n    contactAdornment = {\n      startAdornment: (\n        <InputAdornment\n          position=\"start\"\n          sx={{\n            marginRight: 0,\n            '.MuiTypography-root': {\n              color: '#1a1b22',\n              fontFamily: ['YS Text', '-apple-system', 'BlinkMacSystemFont', 'Arial', 'Helvetica', 'sans-serif'].join(\n                ',',\n              ),\n              fontSize: 14,\n              lineHeight: '20px',\n            },\n          }}\n        >\n          @\n        </InputAdornment>\n      ),\n    }\n  }\n\n  useEffect(() => {\n    if (!experienceInfo) {\n      navigate('/onboarding/experience')\n    }\n  }, [experienceInfo])\n\n  useEffect(() => {\n    if (profile) {\n      dispatch(clearOnboardingInfo())\n      navigate('/')\n    }\n  }, [profile])\n\n  useEffect(() => {\n    register('contact_type')\n  }, [register])\n\n  useEffect(() => {\n    setValue('files', files, { shouldValidate: true, shouldDirty: true })\n  }, [files])\n\n  useEffect(() => {\n    setValue('contact_info', resumeInfo?.contact_info ?? '', { shouldValidate: true, shouldDirty: true })\n    if (methodValue) {\n      const scheme = onboardingResumeSchema.omit(['contact_info'])\n      const option = methodValue === 1 ? telegramOption : emailOption('Неверный формат почты')\n      setValidationSchema(scheme.shape({ contact_info: option }))\n    }\n  }, [methodValue])\n\n  const onSubmit: SubmitHandler<ResumeInfo> = (formData) => {\n    if (!personalInfo || !experienceInfo) return\n\n    dispatch(setResumeInfo(formData))\n    const { course_id, ...restExperienceInfo } = experienceInfo\n    const { files: f, ...restFormData } = formData\n\n    const allOnboardingData: AllOnboardingInfo = {\n      ...personalInfo,\n      ...restExperienceInfo,\n      ...restFormData,\n      birth_date: formatApiDate(new Date(personalInfo.birth_date)),\n      course: course_id?.id,\n      image: avatar || undefined,\n      city: personalInfo?.city?.id,\n    }\n\n    const allOnboardingDataFD = getFormData(allOnboardingData)\n\n    files.forEach((file, index) => {\n      allOnboardingDataFD.append(`resume[${index}]resume`, file, file.name)\n    })\n\n    dispatch(postOnboarding(allOnboardingDataFD))\n  }\n\n  return (\n    <>\n      {isError && <Typography color=\"error\">Что-то пошло не так, обновите страницу и попробуйте снова</Typography>}\n      <form onSubmit={handleSubmit(onSubmit)} className={classes.form}>\n        <fieldset className={classes.fieldset}>\n          <div className={classes.fieldContainer}>\n            <Typography variant=\"body2\">Контакты для связи с рекрутером</Typography>\n            <div className={classes.twoFieldInRowContainer}>\n              <FormControl hiddenLabel className={classes.input} variant=\"outlined\">\n                <Select\n                  MenuProps={selectMenuProps}\n                  labelId=\"method-select-label\"\n                  id=\"method-select\"\n                  defaultValue={1}\n                  IconComponent={iconComponent}\n                  onChange={(e) => {\n                    setValue('contact_type', e.target.value as number, { shouldValidate: true, shouldDirty: true })\n                    setValue('contact_info', '', { shouldValidate: true, shouldDirty: true })\n                  }}\n                  value={methodValue}\n                >\n                  {comMethods.map((method) => (\n                    <MenuItem key={method.id} value={method.id}>\n                      <div className={classes.selectContainer}>\n                        <img src={method.icon} alt={method.name} className=\"\" />\n                        <span className={classes.selectName}>{method.name}</span>\n                      </div>\n                    </MenuItem>\n                  ))}\n                </Select>\n                <FormHelperText>{errors?.contact_type?.message || ' '}</FormHelperText>\n              </FormControl>\n              <Controller\n                name=\"contact_info\"\n                control={control}\n                render={({ field }) => (\n                  <TextField\n                    error={!!errors.contact_info?.message}\n                    helperText={errors.contact_info?.message}\n                    defaultValue={resumeInfo?.contact_info}\n                    {...field}\n                    className={contactClassName}\n                    variant=\"outlined\"\n                    placeholder={contactPlaceholder}\n                    InputProps={contactAdornment}\n                  />\n                )}\n              />\n            </div>\n          </div>\n          <div className={classes.fieldContainer}>\n            <Dropzone filesState={[files, setFiles]} />\n            <FormControl className={classes.input}>\n              <FormHelperText>\n                {errors?.files?.map((error, index) => `${error.message}` || '').join('\\n') || ''}\n              </FormHelperText>\n            </FormControl>\n          </div>\n          <div className={classes.fieldContainer}>\n            <Typography variant=\"body2\">Ссылка на портфолио (необязательно)</Typography>\n            <Controller\n              name=\"portfolio_url\"\n              control={control}\n              render={({ field }) => (\n                <TextField\n                  error={!!errors.portfolio_url?.message}\n                  helperText={errors.portfolio_url?.message || ' '}\n                  defaultValue={resumeInfo?.portfolio_url}\n                  {...field}\n                  className={classes.input}\n                  variant=\"outlined\"\n                  placeholder=\"Введи адрес\"\n                />\n              )}\n            />\n          </div>\n\n          <div className={classes.buttonContainer}>\n            <Button\n              type=\"button\"\n              className={`${classes.formButton} ${classes.previousButton}`}\n              onClick={() => {\n                const values = getValues()\n                dispatch(setResumeInfo(values))\n                navigate('/onboarding/experience', { state: { avatar } })\n              }}\n            >\n              Назад\n            </Button>\n            {status === 'pending' ? (\n              <MoonLoader color=\"#1d6bf3\" loading size={39} />\n            ) : (\n              <Button className={classes.formButton} type=\"submit\">\n                Сохранить\n              </Button>\n            )}\n          </div>\n        </fieldset>\n      </form>\n    </>\n  )\n}\n\nexport default OnboardingFormResume\n","/* eslint-disable no-unused-vars */\nimport * as yup from 'yup'\nimport { format, differenceInYears, differenceInCalendarDays } from 'date-fns'\nimport {\n  INTEGER_REGEX,\n  PASSWORD_REG_EXP,\n  URL_REG_EXP,\n  REG_FORM_EMPTY_EMAIL_ERROR,\n  REG_FORM_BAD_EMAIL_ERROR,\n  REG_FORM_CONFIRM_PASS_ERROR,\n  REG_FORM_BAD_PASS_ERROR,\n  FILE_SIZE,\n  SUPPORTED_FORMATS,\n  MAX_COMMENT_SYMBOLS_FOUND_JOB_AND_WEEK_REPORT,\n  MIN_COMMENT_SYMBOLS_FOUND_JOB_AND_WEEK_REPORT,\n  MIN_TEXT_FIELD_SYMBOLS,\n  MAX_TEXT_FIELD_SYMBOLS,\n  MAX_BIRTHDAY_DATE_ERROR,\n  NAME_FIELDS_REG_EXP,\n  NAME_FIELDS_TIP,\n  OTHER_TEXT_FIELDS_REG_EXP,\n  OTHER_TEXT_FIELDS_TIP,\n  REG_FORM_MIN_SYMBOLS,\n  REG_FORM_MINMAX_SYMBOLS_ERROR,\n  REG_FORM_MAX_SYMBOLS,\n  CREATE_COHORT_NUMBER_ERROR,\n  CREATE_COHORT_NUMBER_REQUIRED_ERROR,\n  CREATE_COHORT_COURSE_REQUIRED_ERROR,\n  RESPONSE_WORK_REGEXP,\n  RESPONSE_TEXT_FIELDS_MIN_SYMBOLS,\n  RESPONSE_TEXT_FIELD_MINMAX_TIP,\n  RESPONSE_TEXT_FIELD_MAX_SYMBOLS,\n  RESPONSE_WORK_TIP,\n  RESPONSE_COMMENT_MAX_SYMBOLS,\n  RESPONSE_COMMENT_MAX_SYMBOLS_TIP,\n  TEXT_REGEX,\n  TEXT_REGEX_TIP,\n  VACATION_THIRD_PAD_TEXTFIELD_MIN_SYMBOLS,\n  VACATION_THIRD_PAD_ABOUT_COMPANY_MAX_SYMBOLS,\n  VACATION_THIRD_PAD_TEXTFIELD_MAX_SYMBOLS,\n  VACATION_THIRD_PAD_ABOUT_COMPANY_MINMAX_TIPS,\n  VACATION_THIRD_PAD_TEXTFIELD_MINMAX_TIPS,\n  VACATION_WITHOUT_MIN_MINMAX_TIPS,\n  PHONE_REG_EXP,\n  VACATION_THIRD_PAD_SELECTION_STAGE_MINMAX_TIPS,\n  VACATION_THIRD_PAD_SELECTION_STAGE_FIELD_MIN_SYMBOLS,\n  INSTITUTION_TEXT_FIELDS_REG_EXP,\n  INSTITUTION_TEXT_FIELDS_TIP,\n  LOGO_SUPPORTED_FORMATS_VALIDATION,\n} from './constants'\nimport { formatRusStyle } from './dates'\n\nconst maxDateTest = (value, context) => {\n  const today = new Date()\n  today.setHours(0, 0, 0, 0)\n  return today >= value\n}\n\nconst maxTodayTest = (value, context) => {\n  const today = new Date()\n  today.setHours(23, 59, 59, 0)\n  return today >= value\n}\nconst maxBirthdayDay = (value) => differenceInYears(new Date(), new Date(value)) >= 18\n\nexport const emailOption = (error) => yup.string().required(REG_FORM_EMPTY_EMAIL_ERROR).email(error)\n\nexport const telegramOption = yup.string().required('Укажите свой ник в Телеграме').trim()\n\nconst urlOption = yup.string().nullable(true).matches(URL_REG_EXP, 'Введи корректный адрес сайта')\n\nexport const urlOptionRequired = yup\n  .string()\n  .required('Это поле обязательно для заполнения')\n  .matches(URL_REG_EXP, 'Введи корректный адрес сайта')\n\nexport const urlOptionVacancyTab = yup.string().matches(URL_REG_EXP, 'Неверный формат ссылки')\n\nexport const telegramChatID = yup\n  .string()\n  // .required('Это поле обязательно для заполнения')\n  .nullable(true)\n  .matches(INTEGER_REGEX, 'Неверный формат ID чата')\n\nconst firstNameOptions = yup\n  .string()\n  .min(MIN_TEXT_FIELD_SYMBOLS, `Возможная длина поля ${MIN_TEXT_FIELD_SYMBOLS}-${MAX_TEXT_FIELD_SYMBOLS} символов`)\n  .max(MAX_TEXT_FIELD_SYMBOLS, `Возможная длина поля ${MIN_TEXT_FIELD_SYMBOLS}-${MAX_TEXT_FIELD_SYMBOLS} символов`)\n  .matches(NAME_FIELDS_REG_EXP, NAME_FIELDS_TIP)\n  .trim(NAME_FIELDS_TIP)\n  .required('Введи имя')\n\nconst firstNameNotRequiredOptions = yup\n  .string()\n  .min(MIN_TEXT_FIELD_SYMBOLS, `Возможная длина поля ${MIN_TEXT_FIELD_SYMBOLS}-${MAX_TEXT_FIELD_SYMBOLS} символов`)\n  .max(MAX_TEXT_FIELD_SYMBOLS, `Возможная длина поля ${MIN_TEXT_FIELD_SYMBOLS}-${MAX_TEXT_FIELD_SYMBOLS} символов`)\n  .matches(NAME_FIELDS_REG_EXP, NAME_FIELDS_TIP)\n  .trim(NAME_FIELDS_TIP)\n\nconst genderOptions = yup.string().required('Выбери пол') // https://employmentdiary.atlassian.net/browse/SD-599\n\nconst lastNameOptions = yup\n  .string()\n  .min(MIN_TEXT_FIELD_SYMBOLS, `Возможная длина поля ${MIN_TEXT_FIELD_SYMBOLS}-${MAX_TEXT_FIELD_SYMBOLS} символов`)\n  .max(MAX_TEXT_FIELD_SYMBOLS, `Возможная длина поля ${MIN_TEXT_FIELD_SYMBOLS}-${MAX_TEXT_FIELD_SYMBOLS} символов`)\n  .matches(NAME_FIELDS_REG_EXP, NAME_FIELDS_TIP)\n  .trim(NAME_FIELDS_TIP)\n  .required('Введи фамилию')\nconst lastNameNotRequiredOptions = yup\n  .string()\n  .max(MAX_TEXT_FIELD_SYMBOLS, `Возможная длина поля ${MIN_TEXT_FIELD_SYMBOLS}-${MAX_TEXT_FIELD_SYMBOLS} символов`)\n  .matches(NAME_FIELDS_REG_EXP, NAME_FIELDS_TIP)\n  .trim(NAME_FIELDS_TIP)\n  .nullable(true)\nconst birthDateOptions = yup\n  .string()\n  .nullable(true)\n  .required('Введи дату рождения')\n  .test('max-birthday-date', MAX_BIRTHDAY_DATE_ERROR, maxBirthdayDay)\nconst courseOptions = yup\n  .object()\n  .shape({\n    id: yup.string(),\n    name: yup.string(),\n  })\n  .nullable()\n  .required('Выбери курс')\n\nconst multipleValuesOptions = yup\n  .array()\n  .min(1, 'Это поле обязательно для заполнения')\n  .required('Это поле обязательно для заполнения')\n\nconst experienceTypeOptions = yup.string().required('Введи опыт работы')\nconst educationLevelOptions = yup.string().required('Выбери тип образования')\nconst cohortNumberOptions = yup.number('Выбери номер потока').required('Выбери номер потока')\nconst previousJobPositionOptions = yup\n  .string()\n  .min(MIN_TEXT_FIELD_SYMBOLS, `Возможная длина поля ${MIN_TEXT_FIELD_SYMBOLS}-${MAX_TEXT_FIELD_SYMBOLS} символов`)\n  .max(MAX_TEXT_FIELD_SYMBOLS, `Возможная длина поля ${MIN_TEXT_FIELD_SYMBOLS}-${MAX_TEXT_FIELD_SYMBOLS} символов`)\n  .matches(OTHER_TEXT_FIELDS_REG_EXP, OTHER_TEXT_FIELDS_TIP)\n  .trim(OTHER_TEXT_FIELDS_TIP)\n  .required('Введи должность с предыдущего места работы')\nconst institutionOptions = yup\n  .string()\n  .min(MIN_TEXT_FIELD_SYMBOLS, `Возможная длина поля ${MIN_TEXT_FIELD_SYMBOLS}-${MAX_TEXT_FIELD_SYMBOLS} символов`)\n  .max(MAX_TEXT_FIELD_SYMBOLS, `Возможная длина поля ${MIN_TEXT_FIELD_SYMBOLS}-${MAX_TEXT_FIELD_SYMBOLS} символов`)\n  .matches(INSTITUTION_TEXT_FIELDS_REG_EXP, INSTITUTION_TEXT_FIELDS_TIP)\n  .trim(OTHER_TEXT_FIELDS_TIP)\n  .required('Введи учебное заведение')\nconst imageOptions = yup\n  .mixed()\n  .test(\n    'fileFormat',\n    `Можно загрузить изображение форматов jpeg, jpg и png`,\n    (value) => value === null || typeof value === 'string' || (value && SUPPORTED_FORMATS.includes(value.type)),\n  )\nconst logoOptions = yup\n  .mixed()\n  .test(\n    'fileFormat',\n    `Можно загрузить изображение форматов jpg, png и svg`,\n    (value) =>\n      value === null || typeof value === 'string' || (value && LOGO_SUPPORTED_FORMATS_VALIDATION.includes(value.type)),\n  )\n\nconst filesOption = yup.array().required().min(1, 'Необходимо загрузить как минимум один файл')\n\nconst vacationThirdPadAboutCompanyOptions = yup\n  .string()\n  // .required('Это поле обязательно для заполнения')\n  .min(VACATION_THIRD_PAD_TEXTFIELD_MIN_SYMBOLS, VACATION_THIRD_PAD_ABOUT_COMPANY_MINMAX_TIPS)\n  .max(VACATION_THIRD_PAD_TEXTFIELD_MAX_SYMBOLS, VACATION_THIRD_PAD_ABOUT_COMPANY_MINMAX_TIPS)\n\nconst vacationThirdSelectionStagesOptions = yup\n  .string()\n  // .required('Это поле обязательно для заполнения')\n  .min(VACATION_THIRD_PAD_SELECTION_STAGE_FIELD_MIN_SYMBOLS, VACATION_THIRD_PAD_SELECTION_STAGE_MINMAX_TIPS)\n  .max(VACATION_THIRD_PAD_ABOUT_COMPANY_MAX_SYMBOLS, VACATION_THIRD_PAD_SELECTION_STAGE_MINMAX_TIPS)\n\nconst vacationThirdPadTextOptions = yup\n  .string()\n  // .required('Это поле обязательно для заполнения')\n  .min(VACATION_THIRD_PAD_TEXTFIELD_MIN_SYMBOLS, VACATION_THIRD_PAD_TEXTFIELD_MINMAX_TIPS)\n  .max(VACATION_THIRD_PAD_TEXTFIELD_MAX_SYMBOLS, VACATION_THIRD_PAD_TEXTFIELD_MINMAX_TIPS)\n\nconst vacationNonRequiredRequirementsOptions = yup\n  .string()\n  .max(VACATION_THIRD_PAD_TEXTFIELD_MAX_SYMBOLS, VACATION_WITHOUT_MIN_MINMAX_TIPS)\n\nexport const currencyOptions = yup.string().required('Это поле обязательно для заполнения')\n\nconst minResponseDate = (value) => {\n  if (!value) return true\n  const twoWeeksAgo = new Date()\n  twoWeeksAgo.setDate(twoWeeksAgo.getDate() - 13)\n  twoWeeksAgo.setHours(0, 0, 0, 0)\n  return twoWeeksAgo <= value\n}\n\nconst passwordOption = yup\n  .string()\n  .required(REG_FORM_BAD_PASS_ERROR)\n  .min(REG_FORM_MIN_SYMBOLS, REG_FORM_MINMAX_SYMBOLS_ERROR)\n  .max(REG_FORM_MAX_SYMBOLS, REG_FORM_MINMAX_SYMBOLS_ERROR)\n  .matches(PASSWORD_REG_EXP, REG_FORM_BAD_PASS_ERROR)\n\nconst passwordRepeatOption = yup\n  .string()\n  .min(REG_FORM_MIN_SYMBOLS, REG_FORM_MINMAX_SYMBOLS_ERROR)\n  .max(REG_FORM_MAX_SYMBOLS, REG_FORM_MINMAX_SYMBOLS_ERROR)\n  .oneOf([yup.ref('password'), null], REG_FORM_CONFIRM_PASS_ERROR)\n\nexport const regFormSchema = yup.object().shape({\n  email: emailOption(REG_FORM_BAD_EMAIL_ERROR),\n  password: passwordOption,\n  password2: passwordRepeatOption,\n})\n\nexport const regFormNewPasswordSchema = yup.object().shape({\n  password: passwordOption,\n  password2: passwordRepeatOption,\n})\n\nexport const salaryOptionRequired = yup\n  .number()\n  .max(1000000000, 'Вряд ли это число может быть больше 1000000000')\n  .required('Это поле обязательно для заполнения')\n  .moreThan(-1, 'Зарплата не может быть меньше нуля')\n  .typeError('Можно использовать только цифры 0-9')\n  .transform((value, original) => (original == null || original === '' ? null : value))\n\nexport const salaryMaxOptionRequired = yup\n  .number()\n  .max(1000000000, 'Вряд ли это число может быть больше 1000000000')\n  .required('Это поле обязательно для заполнения')\n  .moreThan(-1, 'Зарплата не может быть меньше нуля')\n  .min(yup.ref('salary'), 'Должно быть больше значение \"от\"')\n  .typeError('Можно использовать только цифры 0-9')\n  .transform((value, original) => (original == null || original === '' ? null : value))\n\nconst workVacancyOption = yup\n  .string()\n  .required('Это поле обязательно для заполнения')\n  .min(RESPONSE_TEXT_FIELDS_MIN_SYMBOLS, RESPONSE_TEXT_FIELD_MINMAX_TIP)\n  .max(RESPONSE_TEXT_FIELD_MAX_SYMBOLS, RESPONSE_TEXT_FIELD_MINMAX_TIP)\n  .matches(RESPONSE_WORK_REGEXP, RESPONSE_WORK_TIP)\n\nconst positionOption = yup\n  .string()\n  .required('Введи должность')\n  .matches(TEXT_REGEX, {\n    excludeEmptyString: true,\n    message: TEXT_REGEX_TIP,\n  })\n  .min(2, 'Минимум 2 символа')\n  .max(150, 'Максимум 150 символов')\n\nconst positionNotRequiredOption = yup\n  .string()\n  .nullable(true)\n  .matches(TEXT_REGEX, {\n    excludeEmptyString: true,\n    message: TEXT_REGEX_TIP,\n  })\n  .min(2, 'Минимум 2 символа')\n  .max(150, 'Максимум 150 символов')\n\nexport const contactResponseOption = yup.object().required('Это поле обязательно для заполнения').nullable(true)\n\nconst minSevenDaysVacation = (endDate, context) => {\n  const { start_date: startDate } = context?.parent\n  return differenceInCalendarDays(new Date(endDate), new Date(startDate)) > 5\n}\n\nconst endDateNotLessStartDate = (endDate, context) => {\n  const { start_date: startDate } = context?.parent\n  return endDate >= startDate\n}\n\nexport const newVacationSchema = yup.object().shape({\n  start_date: yup\n    .date()\n    .required('Обязательное поле')\n    .min(format(Date.now(), 'yyyy-MM-dd'), 'Эта дата уже в прошлом. Выбери актуальную дату'),\n  end_date: yup\n    .date()\n    .required('Обязательное поле')\n    .test('not less', 'Дата окончания не может быть раньше начала', endDateNotLessStartDate)\n    .test('seven', 'Увеличь срок. Минимальный — семь дней', minSevenDaysVacation),\n})\n\nexport const foundJobSchema = yup.object().shape({\n  company_name: yup\n    .string()\n    .required('Введи название компании')\n    .matches(TEXT_REGEX, {\n      excludeEmptyString: true,\n      message: TEXT_REGEX_TIP,\n    })\n    .min(1)\n    .max(150, 'Максимум 150 символов'),\n  job_name: positionOption,\n  offer_date: yup.date().required('Введи дату получения оффера').nullable(true),\n  employment_history: yup\n    .string()\n    .min(\n      MIN_COMMENT_SYMBOLS_FOUND_JOB_AND_WEEK_REPORT,\n      `Не меньше ${MIN_COMMENT_SYMBOLS_FOUND_JOB_AND_WEEK_REPORT} символов`,\n    )\n    .max(\n      MAX_COMMENT_SYMBOLS_FOUND_JOB_AND_WEEK_REPORT,\n      `Не более ${MAX_COMMENT_SYMBOLS_FOUND_JOB_AND_WEEK_REPORT} символов`,\n    ),\n})\n\nexport const newReportSchema = yup.object().shape({\n  comment: yup\n    .string()\n    .required('Обязательное поле')\n    .min(\n      MIN_COMMENT_SYMBOLS_FOUND_JOB_AND_WEEK_REPORT,\n      `Не меньше ${MIN_COMMENT_SYMBOLS_FOUND_JOB_AND_WEEK_REPORT} символов`,\n    )\n    .max(\n      MAX_COMMENT_SYMBOLS_FOUND_JOB_AND_WEEK_REPORT,\n      `Не более ${MAX_COMMENT_SYMBOLS_FOUND_JOB_AND_WEEK_REPORT} символов`,\n    ),\n})\n\nexport const newInterviewSchema = yup.object().shape({\n  interview_date: yup\n    .date()\n    .required('Обязательное поле')\n    .min(format(Date.now(), 'yyyy-MM-dd'), 'Дата собеседования не может быть раньше текущей даты'),\n})\n\nexport const newConsultSchema = yup.object().shape({\n  consultation_theme: yup.string().required('Выбери консультанта'),\n  problem_description: yup.string().required('Введи описание проблемы'),\n})\n\nconst cityOptions = yup\n  .object()\n  .shape({\n    id: yup.string(),\n    location: yup.string(),\n  })\n  .nullable()\n  .required('Введи город')\n\nexport const editFormSchema = yup.object().shape({\n  first_name: firstNameOptions,\n  gender: genderOptions,\n  city: cityOptions,\n  last_name: lastNameOptions,\n  birth_date: birthDateOptions,\n  course: courseOptions,\n  experience_type: experienceTypeOptions,\n  education_type: educationLevelOptions,\n  cohort_number: cohortNumberOptions,\n  previous_job_position: previousJobPositionOptions,\n  institution: institutionOptions,\n  contact_type: yup.string().required('Выбери тип контакта'),\n  contact_info: telegramOption,\n  portfolio_url: urlOption,\n  image: imageOptions.test(\n    'fileSize',\n    `Максимальный размер файла ${FILE_SIZE / 1048576} MB`,\n    (value) => value === null || typeof value === 'string' || (value && value.size <= FILE_SIZE),\n  ),\n})\n\nexport const newResponseSchema = yup.object().shape({\n  company_name: yup\n    .string()\n    .required('Введи название компании')\n    .min(RESPONSE_TEXT_FIELDS_MIN_SYMBOLS, RESPONSE_TEXT_FIELD_MINMAX_TIP)\n    .max(RESPONSE_TEXT_FIELD_MAX_SYMBOLS, RESPONSE_TEXT_FIELD_MINMAX_TIP)\n    .matches(RESPONSE_WORK_REGEXP, RESPONSE_WORK_TIP),\n  position: yup\n    .string()\n    .required('Введи должность')\n    .min(RESPONSE_TEXT_FIELDS_MIN_SYMBOLS, RESPONSE_TEXT_FIELD_MINMAX_TIP)\n    .max(RESPONSE_TEXT_FIELD_MAX_SYMBOLS, RESPONSE_TEXT_FIELD_MINMAX_TIP)\n    .matches(RESPONSE_WORK_REGEXP, RESPONSE_WORK_TIP),\n  is_remote_work: yup.boolean(),\n  cities: yup.array().nullable(true),\n  comment: yup\n    .string('Комментарий должен быть текстом')\n    .max(RESPONSE_COMMENT_MAX_SYMBOLS, RESPONSE_COMMENT_MAX_SYMBOLS_TIP)\n    .nullable(true),\n  url: urlOption,\n  salary: yup\n    .number()\n    .max(1000000000, 'Вряд ли это число может быть больше 1000000000')\n    .nullable(true)\n    .moreThan(-1, 'Зарплата не может быть меньше нуля')\n    .typeError('Введи число')\n    .transform((value, original) => (original == null || original === '' ? null : value)),\n  salary_max: yup\n    .number()\n    .max(1000000000, 'Вряд ли это число может быть больше 1000000000')\n    .nullable(true)\n    .moreThan(-1, 'Зарплата не может быть меньше нуля')\n    .typeError('Введи число')\n    .transform((value, original) => (original == null || original === '' ? null : value))\n    .when('salary', {\n      is: (val) => val,\n      then: (theme) => theme.min(yup.ref('salary'), 'Должно быть больше значения \"до\"'),\n    }),\n  color_id: yup.string().required('Выберите цвет'),\n  response_date: yup\n    .date()\n    .required('Обязательное поле')\n    .test('max-current-date', 'Дата отклика не может быть больше текущей даты', maxDateTest)\n    .test('min-two-weeks', 'Нельзя вносить отклики, которые были отправлены более 14 дней назад', minResponseDate)\n    .typeError('Введи дату'),\n  hr_interview_date: yup\n    .date()\n    .nullable(true)\n    .when(\n      'response_date',\n      (responseDate, schema) => responseDate && schema.min(responseDate, 'Не может быть ранее даты отклика'),\n    )\n    .typeError('Введи дату'),\n  test_task_date: yup\n    .date()\n    .nullable(true)\n    .when(\n      'response_date',\n      (responseDate, schema) => responseDate && schema.min(responseDate, 'Не может быть ранее даты отклика'),\n    )\n    .typeError('Введи дату'),\n  tech_interview_date: yup\n    .date()\n    .nullable(true)\n    .when(\n      'response_date',\n      (responseDate, schema) => responseDate && schema.min(responseDate, 'Не может быть ранее даты отклика'),\n    )\n    .typeError('Введи дату'),\n  boss_interview_date: yup\n    .date()\n    .nullable(true)\n    .when(\n      'response_date',\n      (responseDate, schema) => responseDate && schema.min(responseDate, 'Не может быть ранее даты отклика'),\n    )\n    .typeError('Введи дату'),\n  offer_date: yup\n    .date()\n    .nullable(true)\n    .when(\n      'response_date',\n      (responseDate, schema) => responseDate && schema.min(responseDate, 'Не может быть ранее даты отклика'),\n    )\n    .typeError('Введи дату'),\n  rejection_date: yup\n    .date()\n    .nullable(true)\n    .when(\n      'response_date',\n      (responseDate, schema) => responseDate && schema.min(responseDate, 'Не может быть ранее даты отклика'),\n    )\n    .typeError('Введи дату'),\n})\n\nexport const onboardingPersonalSchema = yup.object().shape({\n  image: imageOptions.test(\n    'fileSize',\n    `Максимальный размер файла ${FILE_SIZE / 1048576} MB`,\n    (value) => !value || (value && value.size <= FILE_SIZE),\n  ),\n  first_name: firstNameOptions,\n  last_name: lastNameOptions,\n  city: cityOptions,\n  birth_date: birthDateOptions,\n  gender: genderOptions,\n})\n\nexport const onboardingExperienceSchema = yup.object().shape({\n  course_id: courseOptions,\n  cohort_number: cohortNumberOptions,\n  experience_type: experienceTypeOptions,\n  previous_job_position: previousJobPositionOptions,\n  education_type: educationLevelOptions,\n  institution: institutionOptions,\n})\n\nexport const onboardingResumeSchema = yup.object().shape({\n  contact_type: yup.string().required('Выбери тип контакта'),\n  contact_info: telegramOption,\n  portfolio_url: urlOption,\n})\n\nexport const filtersSchema = yup.object().shape({\n  search: yup.string().required('Поле поиска не может быть пустым'),\n  start_date: yup\n    .date()\n    .required('Введите дату начала интервала')\n    .nullable(true)\n    // .test('max-current-date', 'Дата начала интервала не может быть больше текущей даты', maxDateTest)\n    .typeError('Неправильный формат даты')\n    .max(yup.ref('end_date'), 'Дата начала интервала не может быть больше даты окончания'),\n  end_date: yup\n    .date()\n    .required('Введите дату начала интервала')\n    .nullable(true)\n    // .test('max-current-date', 'Дата начала интервала не может быть больше текущей даты', maxDateTest)\n    .typeError('Неправильный формат даты')\n    .min(yup.ref('start_date'), 'Дата конца интервала не может быть меньше даты начала'),\n})\n\nexport const newCohortSchema = yup.object().shape({\n  course_id: yup.string(CREATE_COHORT_COURSE_REQUIRED_ERROR).required(CREATE_COHORT_COURSE_REQUIRED_ERROR),\n  cohort_number: yup\n    .number()\n    .required(CREATE_COHORT_NUMBER_REQUIRED_ERROR)\n    .typeError(CREATE_COHORT_NUMBER_ERROR)\n    .min(1, 'Номер должен быть положительным числом'),\n})\n\nexport const vacancyFirstTabSchema = yup.object().shape({\n  isSalaryNotRequired: yup.boolean(),\n  isConfidentialLinkNotRequired: yup.boolean(),\n  company_name: workVacancyOption,\n  // courses: multipleValuesOptions,\n  salary: yup\n    .number()\n    .max(1000000000, 'Вряд ли это число может быть больше 1000000000')\n    .moreThan(-1, 'Зарплата не может быть меньше нуля')\n    .transform((value, original) => (original == null || original === '' ? null : value))\n    .nullable(true)\n    .typeError('Можно использовать только цифры 0-9')\n    .when('salary_max', {\n      is: (val) => !val,\n      then: (theme) => theme.required('Заполни хотя бы одно поле зарплаты'),\n      otherwise: (theme) => theme.max(yup.ref('salary_max'), 'Должно быть меньше значения \"до\"'),\n    })\n    .when('isSalaryNotRequired', {\n      is: true,\n      then: (theme) => theme.notRequired(),\n    }),\n  salary_max: yup\n    .number()\n    .max(1000000000, 'Вряд ли это число может быть больше 1000000000')\n    .moreThan(-1, 'Зарплата не может быть меньше нуля')\n    .transform((value, original) => (original == null || original === '' ? null : value))\n    .nullable(true)\n    .typeError('Можно использовать только цифры 0-9'),\n  website: urlOption,\n  position: workVacancyOption,\n  company_confidential_url: yup\n    .string()\n    .matches(URL_REG_EXP, 'Введи корректный адрес сайта')\n    .when('isConfidentialLinkNotRequired', {\n      is: false,\n      then: yup.string().required('Это поле обязательно для заполнения'),\n    }),\n  currency: yup.string().when('isSalaryNotRequired', {\n    is: false,\n    then: yup.string().required('Это поле обязательно для заполнения'),\n  }),\n})\n\nexport const vacancySecondTabSchema = yup.object().shape({\n  // cities: multipleValuesOptions,\n  isTestTaskLinkNotRequired: yup.boolean(),\n  // employment: multipleValuesOptions,\n  // design_formats: multipleValuesOptions,\n  // work_format: multipleValuesOptions,\n  // experience_type: multipleValuesOptions,\n  // education_type: multipleValuesOptions,\n  test_task_url: yup\n    .string()\n    .matches(URL_REG_EXP, 'Введи корректный адрес сайта')\n    .when('isTestTaskLinkNotRequired', {\n      is: false,\n      then: yup.string().required('Это поле обязательно для заполнения'),\n    }),\n})\n\nexport const vacancyThirdTabSchema = yup.object().shape({\n  vacancy_info: vacationThirdPadAboutCompanyOptions,\n  responsibilities: vacationThirdPadTextOptions,\n  circs: vacationThirdPadTextOptions,\n})\n\nexport const vacancyFourthTabSchema = yup.object().shape({\n  mandatory_requirements: vacationThirdPadTextOptions,\n  optional_requirements: vacationNonRequiredRequirementsOptions,\n  selection_stages: vacationThirdSelectionStagesOptions,\n  chat_id: telegramChatID,\n  vacancy_url: urlOptionVacancyTab.nullable(true),\n})\n\nexport const vacancyFifthTabSchema = yup.object().shape({\n  company_logo: logoOptions.test(\n    'fileSize',\n    `Максимальный размер файла ${FILE_SIZE / 1048576} MB`,\n    (value) => value === null || typeof value === 'string' || (value && value.size <= FILE_SIZE),\n  ),\n})\n\nexport const applyJobSchema = yup.object().shape({\n  isTestLinkRequired: yup.boolean(),\n  contact_type: yup.string().required('Выбери тип контакта'),\n  contact_info: telegramOption,\n  resume: yup.number().required('Это поле обязательно для заполнения'),\n  new_resume: yup.array().when('resume', {\n    is: -1,\n    then: multipleValuesOptions,\n  }),\n})\n\nexport const termsOfUseSchema = yup.object().shape({\n  isAccept: yup\n    .boolean()\n    .required('Необходимо принять соглашение пользователя')\n    .oneOf([true], 'Необходимо принять соглашение пользователя'),\n})\n\nexport const accelerationScheme = yup.object().shape({\n  modified_at: yup.string().nullable(true).required('Введи дату'),\n})\n\nexport const newContactSchema = yup.object().shape({\n  first_name: firstNameNotRequiredOptions.when(['last_name', 'position', 'phone', 'contact_info', 'email'], {\n    is: (a, b, c, d, e) => !a && !b && !c && !d && !e,\n    then: firstNameNotRequiredOptions.required('Должно быть заполнено хотя бы одно поле'),\n    otherwise: firstNameNotRequiredOptions,\n  }),\n  last_name: lastNameNotRequiredOptions,\n  position: positionNotRequiredOption,\n  phone: yup.string().nullable(true).matches(PHONE_REG_EXP, 'Введи корректный номер телефона'),\n  contact_type: yup.string(),\n  contact_info: yup.string().trim(),\n  email: yup.string().email('Введи корректный адрес электронной почты').nullable(true),\n  responses_field: contactResponseOption,\n})\n\nexport const changeStatusSchema = yup.object().shape({\n  response_date: yup.date(),\n  date: yup\n    .date()\n    .when(\n      'response_date',\n      (responseDate, schema) =>\n        responseDate && schema.min(responseDate, `Не может быть ранее даты отклика (${formatRusStyle(responseDate)})`),\n    )\n    .typeError('Введи дату'),\n})\n","import { format, formatDuration, intervalToDuration } from 'date-fns'\nimport { ru } from 'date-fns/locale'\n\nexport function formatDayMonth(value) {\n  return value ? format(new Date(value), 'dd MMM', { locale: ru }).slice(0, -1) : ''\n}\n\nexport function formatDayMonthYear(value) {\n  return format(new Date(value), 'dd MMM yyyy', { locale: ru }).split('.').join('')\n}\n\nexport function formatDayFullMonthYear(value) {\n  return format(new Date(value), 'dd MMMM yyyy', { locale: ru }).split('.').join('')\n}\n\nexport function formatDayMonthYearWithComma(value) {\n  return format(new Date(value), 'dd MMM yyyy', { locale: ru }).split('.').join(',')\n}\n\nexport function formatDayFullMonth(value) {\n  return value ? format(new Date(value), 'dd MMMM', { locale: ru }) : ''\n}\n\nexport function formatRusStyle(value) {\n  return value ? format(new Date(value), 'dd.MM.yyyy') : ''\n}\n\nexport function formatApiDate(value) {\n  return format(value, \"yyyy-MM-dd'T'HH:mm:ss.SSSxxx\")\n}\n\nexport function formatDbDate(value) {\n  return format(value, 'yyyy-MM-dd')\n}\n\nexport function getDurationInYearWeekDay(value) {\n  if (value) {\n    // value * 86400000 - переводим дни в миллисекунды\n    const duration = intervalToDuration({ start: Date.now() - value * 86400000, end: Date.now() })\n    return `${formatDuration(duration, { format: ['years', 'months', 'days'], locale: ru })}`\n  }\n  return ''\n}\n\nexport default formatDayMonth\n","import React from 'react'\n\nconst IconDeleteButton = () => (\n  <svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path\n      d=\"M17.5003 3.33333H14.917C14.7236 2.39284 14.2118 1.54779 13.468 0.940598C12.7242 0.333408 11.7938 0.0012121 10.8337 0L9.16699 0C8.20682 0.0012121 7.27642 0.333408 6.53262 0.940598C5.78881 1.54779 5.27707 2.39284 5.08366 3.33333H2.50033C2.27931 3.33333 2.06735 3.42113 1.91107 3.57741C1.75479 3.73369 1.66699 3.94565 1.66699 4.16667C1.66699 4.38768 1.75479 4.59964 1.91107 4.75592C2.06735 4.9122 2.27931 5 2.50033 5H3.33366V15.8333C3.33498 16.938 3.77439 17.997 4.55551 18.7782C5.33662 19.5593 6.39566 19.9987 7.50033 20H12.5003C13.605 19.9987 14.664 19.5593 15.4451 18.7782C16.2263 17.997 16.6657 16.938 16.667 15.8333V5H17.5003C17.7213 5 17.9333 4.9122 18.0896 4.75592C18.2459 4.59964 18.3337 4.38768 18.3337 4.16667C18.3337 3.94565 18.2459 3.73369 18.0896 3.57741C17.9333 3.42113 17.7213 3.33333 17.5003 3.33333ZM9.16699 1.66667H10.8337C11.3506 1.6673 11.8546 1.82781 12.2767 2.1262C12.6987 2.42459 13.0182 2.84624 13.1912 3.33333H6.80949C6.98248 2.84624 7.30191 2.42459 7.72398 2.1262C8.14605 1.82781 8.6501 1.6673 9.16699 1.66667ZM15.0003 15.8333C15.0003 16.4964 14.7369 17.1323 14.2681 17.6011C13.7993 18.0699 13.1634 18.3333 12.5003 18.3333H7.50033C6.83728 18.3333 6.2014 18.0699 5.73256 17.6011C5.26372 17.1323 5.00033 16.4964 5.00033 15.8333V5H15.0003V15.8333Z\"\n      fill=\"#797981\"\n    />\n    <path\n      d=\"M8.33333 14.9999C8.55435 14.9999 8.76631 14.9121 8.92259 14.7558C9.07887 14.5996 9.16667 14.3876 9.16667 14.1666V9.16659C9.16667 8.94557 9.07887 8.73361 8.92259 8.57733C8.76631 8.42105 8.55435 8.33325 8.33333 8.33325C8.11232 8.33325 7.90036 8.42105 7.74408 8.57733C7.5878 8.73361 7.5 8.94557 7.5 9.16659V14.1666C7.5 14.3876 7.5878 14.5996 7.74408 14.7558C7.90036 14.9121 8.11232 14.9999 8.33333 14.9999Z\"\n      fill=\"#797981\"\n    />\n    <path\n      d=\"M11.6663 14.9999C11.8874 14.9999 12.0993 14.9121 12.2556 14.7558C12.4119 14.5996 12.4997 14.3876 12.4997 14.1666V9.16659C12.4997 8.94557 12.4119 8.73361 12.2556 8.57733C12.0993 8.42105 11.8874 8.33325 11.6663 8.33325C11.4453 8.33325 11.2334 8.42105 11.0771 8.57733C10.9208 8.73361 10.833 8.94557 10.833 9.16659V14.1666C10.833 14.3876 10.9208 14.5996 11.0771 14.7558C11.2334 14.9121 11.4453 14.9999 11.6663 14.9999Z\"\n      fill=\"#797981\"\n    />\n  </svg>\n)\n\nexport default IconDeleteButton\n","import React from 'react'\n\nconst IconExpandMore = (props) => (\n  <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" {...props}>\n    <path\n      d=\"M18.7074 8.20685C18.5199 8.01938 18.2656 7.91406 18.0004 7.91406C17.7352 7.91406 17.4809 8.01938 17.2934 8.20685L12.7074 12.7928C12.5173 12.9753 12.2639 13.0772 12.0004 13.0772C11.7369 13.0772 11.4835 12.9753 11.2934 12.7928L6.70741 8.20685C6.5188 8.02469 6.2662 7.9239 6.00401 7.92617C5.74181 7.92845 5.491 8.03362 5.30559 8.21903C5.12018 8.40444 5.01501 8.65525 5.01273 8.91745C5.01045 9.17964 5.11125 9.43225 5.29341 9.62085L9.87841 14.2068C10.157 14.4855 10.4877 14.7065 10.8517 14.8573C11.2157 15.0081 11.6059 15.0857 11.9999 15.0857C12.3939 15.0857 12.7841 15.0081 13.1481 14.8573C13.5121 14.7065 13.8428 14.4855 14.1214 14.2068L18.7074 9.62085C18.8949 9.43332 19.0002 9.17901 19.0002 8.91385C19.0002 8.64868 18.8949 8.39438 18.7074 8.20685V8.20685Z\"\n      fill=\"#797981\"\n    />\n  </svg>\n)\n\nexport default IconExpandMore\n","export default __webpack_public_path__ + \"static/media/telegram-icon.5ac8cb02.svg\";","import { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles(() => ({\n  container: {\n    width: 386,\n    display: 'flex',\n    flexDirection: 'column',\n    gap: 5,\n    alignItems: 'center',\n  },\n  dropzoneTitle: {\n    fontSize: '14px',\n    lineHeight: '20px',\n    width: '100%',\n  },\n  dropzone: {\n    width: '100%',\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    gap: 33,\n    border: '1px dashed #DDE0E4',\n    boxSizing: 'border-box',\n    borderRadius: '4px',\n    padding: '20px 20px',\n  },\n  dropzoneCover: {\n    height: 152,\n  },\n  dropzoneLittleCover: {\n    gap: '16px',\n  },\n  dropzoneTextContainer: {\n    display: 'flex',\n    flexDirection: 'column',\n    gap: 6,\n    alignItems: 'center',\n  },\n  dropzoneText: {\n    width: '100%',\n    color: 'hsla(240, 3%, 49%, 1)',\n  },\n  dropzoneButtonAndValidationContainer: {\n    width: '100%',\n    display: 'flex',\n    gap: '20px',\n    alignItems: 'center',\n  },\n  dropzoneButton: {\n    width: 135,\n    textTransform: 'none',\n    backgroundColor: 'hsla(216, 100%, 68%, 1)',\n    borderRadius: '6px',\n    height: '40px',\n    minHeight: '40px',\n    padding: 0,\n    boxSizing: 'border-box',\n  },\n  errorText: {\n    fontFamily: ['YS Text', '-apple-system', 'BlinkMacSystemFont', 'Arial', 'Helvetica', 'sans-serif'].join(','),\n    fontSize: '11px',\n    lineHeight: '12px',\n    fontWeight: 400,\n    color: 'hsla(0, 100%, 50%, 1)',\n    width: '180px',\n  },\n  fileList: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    padding: 0,\n    margin: 0,\n    boxSizing: 'border-box',\n  },\n  resume: {\n    display: 'block',\n  },\n  resume__link: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    padding: '16px 20px',\n    boxSizing: 'border-box',\n    width: '386px',\n    boxShadow: ' 0px 4px 6px rgba(176, 190, 197, 0.3)',\n    borderRadius: '4px',\n    maxHeight: '56px',\n    marginBottom: '5px',\n    transition: '.5s',\n    textDecoration: 'none',\n    '&:hover': {\n      backgroundColor: '#f1f6ff',\n      boxShadow: '0px 4px 6px rgba(176, 190, 197, 0.3)',\n      cursor: 'pointer',\n    },\n  },\n  fileInfo: {\n    fontSize: '14px',\n    lineHeight: '20px',\n    color: '#1a1b22',\n    maxWidth: '80%',\n    overflow: 'hidden',\n    textOverflow: 'ellipsis',\n  },\n  deleteButton: {\n    '&.MuiIconButton-root': {\n      position: 'absolute !important',\n      top: '8px !important',\n      right: '10px !important',\n    },\n  },\n}))\n\nexport default useStyles\n","import React, { useEffect, useMemo, useState } from 'react'\nimport { useDropzone } from 'react-dropzone'\nimport Button from '@material-ui/core/Button'\nimport { IconButton, Typography } from '@material-ui/core'\nimport { v4 as generateUniqueId } from 'uuid'\nimport { Box } from '@mui/system'\nimport useStyles from './Dropzone.style'\nimport IconDeleteButton from '../../../assets/Icons/IconDeleteButton/IconDeleteButton'\nimport {\n  MAX_PORTFOLIO_SIZE,\n  MAX_PORTFOLIO_SIZE_TIP,\n  PORTFOLIO_COUNT_EXTRA_TIP,\n  PORTFOLIO_COUNT_TIP,\n  PORTFOLIO_SUPPORTED_FORMATS,\n  PORTFOLIO_SUPPORTED_FORMATS_TIP,\n} from '../../../utils/constants'\n\nfunction Dropzone({\n  filesState,\n  deletedFiles = undefined,\n  isEditPopup = undefined,\n  label = undefined,\n  setIsFilesChanged = undefined,\n  maxFilesNumber = 2,\n  nameTip = 'Назови файл в формате: Фамилия_Имя_Резюме',\n  fileTip = 'Перетащи файлы: .pdf, .jpg, .jpeg, .png, не более 10 Мб.',\n  error = undefined,\n  acceptedFormats = undefined,\n  isBigCover = false,\n  isCover = false,\n  isVacancyPopup = undefined,\n}) {\n  const classes = useStyles()\n  const [fileError, setFileError] = React.useState(null)\n  const [addedFiles, setAddedFiles] = filesState\n  const [deletedId, setDeletedId] = deletedFiles || [0, 0]\n  const countTip = PORTFOLIO_COUNT_TIP(maxFilesNumber)\n\n  const maxSizeValidations = (file) => {\n    if (file.size - MAX_PORTFOLIO_SIZE > 0) {\n      return {\n        code: 'file-too-large',\n        message: MAX_PORTFOLIO_SIZE_TIP,\n      }\n    }\n    return null\n  }\n\n  useEffect(() => {\n    if (error) setFileError(error)\n  }, [error])\n\n  const { getRootProps, getInputProps, open } = useDropzone({\n    maxFiles: maxFilesNumber,\n    accept: acceptedFormats || PORTFOLIO_SUPPORTED_FORMATS,\n    // Без этого пропса добавление файла будет открываться по пробелу и enter\n    noKeyboard: true,\n    // Отключение открытия окна добавления файлом кликом по дропзоне\n    noClick: true,\n    onDropAccepted: (files) => {\n      if (isEditPopup) setIsFilesChanged(true)\n      const fileListArr = Array.from(files)\n      // Если уже имеется один загруженный файл, то заходим в условие\n      if (addedFiles.length === 1) {\n        // Если подгружаем один файл, то надо добавить его в стейт\n        if (fileListArr.length === 1) {\n          setAddedFiles([...addedFiles, ...fileListArr])\n        } else {\n          // Иначе возвращаем ошибку, говорим, что можно добавить только 1 файл\n          setFileError(PORTFOLIO_COUNT_EXTRA_TIP)\n        }\n      } else {\n        // а если файлов 0, то просто записываем в стейт\n        setAddedFiles([...fileListArr])\n      }\n    },\n    onDropRejected: (files) => {\n      const errCode = files[0].errors[0].code\n      switch (errCode) {\n        case 'file-invalid-type': {\n          setFileError(PORTFOLIO_SUPPORTED_FORMATS_TIP)\n          break\n        }\n        case 'too-many-files': {\n          setFileError(countTip)\n          break\n        }\n        case 'file-too-large': {\n          setFileError(files[0].errors[0].message)\n          break\n        }\n        default: {\n          break\n        }\n      }\n    },\n    onDrop: () => setFileError(null),\n    validator: maxSizeValidations,\n  })\n  const handleRemoveFile = (e, index) => {\n    e.preventDefault()\n    if (index === -999) {\n      setAddedFiles([])\n      return\n    }\n    if (isEditPopup) {\n      setIsFilesChanged(true)\n      const newFilesState = [...addedFiles]\n      // Достаём файл, который удаляем\n      const deletedFile = newFilesState[index]\n      // Если в нём есть поле id, то сохраняем его\n      if (deletedFile.id) {\n        setDeletedId([...deletedId, deletedFile])\n      }\n      newFilesState.splice(index, 1)\n      setAddedFiles([...newFilesState])\n    } else {\n      const newFilesState = [...addedFiles]\n      newFilesState.splice(index, 1)\n      setAddedFiles([...newFilesState])\n    }\n  }\n  const fileCounter = React.useMemo(() => {\n    if (typeof addedFiles === 'string') return 1\n    if (typeof addedFiles !== 'string' && !Array.isArray(addedFiles)) return 1\n    return addedFiles?.length\n  }, [addedFiles])\n\n  const acceptedFileItems =\n    typeof addedFiles === 'string' || !Array.isArray(addedFiles)\n      ? useMemo(\n          () => (\n            <Box\n              sx={{\n                width: isCover ? 280 : 328,\n                height: 152,\n                objectFit: 'contain',\n                position: 'relative',\n              }}\n            >\n              <Box\n                sx={{\n                  width: '100%',\n                  height: 152,\n                  objectFit: 'contain',\n                }}\n                component=\"img\"\n                alt=\"пример обложки\"\n                src={typeof addedFiles === 'string' ? addedFiles : URL.createObjectURL(addedFiles)}\n              />\n              <IconButton className={classes.deleteButton} onClick={(e) => handleRemoveFile(e, -999)}>\n                <IconDeleteButton />\n              </IconButton>\n            </Box>\n          ),\n          [addedFiles],\n        )\n      : useMemo(\n          () =>\n            addedFiles?.map((file, index) => {\n              const objectUrl = isEditPopup ? undefined : URL.createObjectURL(file)\n              const [fileName] = file.name.split('.')\n              if (isCover || isBigCover) {\n                return (\n                  <Box\n                    sx={{\n                      width: isCover ? 280 : 328,\n                      height: 152,\n                      objectFit: 'contain',\n                      position: 'relative',\n                    }}\n                  >\n                    <Box\n                      sx={{\n                        width: '100%',\n                        height: 152,\n                        objectFit: 'contain',\n                      }}\n                      component=\"img\"\n                      alt=\"пример обложки\"\n                      src={objectUrl}\n                    />\n                    <IconButton className={classes.deleteButton} onClick={(e) => handleRemoveFile(e, index)}>\n                      <IconDeleteButton />\n                    </IconButton>\n                  </Box>\n                )\n              }\n              return (\n                <li className={classes.resume} key={generateUniqueId()}>\n                  <a href={file?.url} download className={classes.resume__link} target=\"_blank\" rel=\"noreferrer\">\n                    <Typography className={classes.fileInfo} variant=\"body2\">\n                      <span style={{ color: 'hsla(218, 90%, 53%, 1)' }}>{index + 1}.&nbsp;</span>\n                      {fileName}\n                    </Typography>\n                    <IconButton onClick={(e) => handleRemoveFile(e, index)}>\n                      <IconDeleteButton />\n                    </IconButton>\n                  </a>\n                </li>\n              )\n            }),\n          [addedFiles],\n        )\n\n  const title = label || (\n    <>\n      Резюме (загружено <span style={{ color: 'hsla(218, 90%, 53%, 1)' }}>{fileCounter}</span> из 2 возможных файлов)\n    </>\n  )\n\n  return (\n    <Box\n      sx={{\n        // eslint-disable-next-line no-nested-ternary\n        width: isBigCover ? '328px' : isCover ? '280px' : undefined,\n        height: isBigCover || isCover ? '152px' : undefined,\n      }}\n      className={classes.container}\n    >\n      <Typography variant=\"body2\" component=\"h2\" className={classes.dropzoneTitle}>\n        {title}\n      </Typography>\n      {fileCounter !== 0 && <ul className={classes.fileList}>{acceptedFileItems}</ul>}\n      {fileCounter !== maxFilesNumber && (\n        <div\n          {...getRootProps({\n            // eslint-disable-next-line no-nested-ternary\n            className: isCover\n              ? `${classes.dropzone} ${classes.dropzoneLittleCover}`\n              : isBigCover\n              ? `${classes.dropzone} ${classes.dropzoneCover}`\n              : classes.dropzone,\n          })}\n          style={error && { border: '1px dashed #FF0200' }}\n        >\n          <input {...getInputProps({ className: classes.dropzoneInput })} />\n          <div className={classes.dropzoneTextContainer}>\n            {fileCounter !== 1 && !label && (\n              <Typography variant=\"body2\" className={classes.dropzoneText}>\n                Несколько резюме можно загрузить для откликов на смежные позиции (например, Интернет-маркетолог и SMM\n                менеджер).\n              </Typography>\n            )}\n            {fileCounter !== 1 && (\n              <Typography variant=\"body2\" className={classes.dropzoneText}>\n                {nameTip}\n              </Typography>\n            )}\n            <Typography variant=\"body2\" className={classes.dropzoneText}>\n              {fileTip}\n            </Typography>\n          </div>\n          <div className={classes.dropzoneButtonAndValidationContainer}>\n            <Button className={classes.dropzoneButton} onClick={open}>\n              Выбрать файл\n            </Button>\n            {fileError && <Typography className={classes.errorText}>{fileError}</Typography>}\n          </div>\n        </div>\n      )}\n    </Box>\n  )\n}\n\nexport default Dropzone\n","export default __webpack_public_path__ + \"static/media/email-icon.34523dc1.svg\";","function getFormData(object: { [key: string]: string | Blob | null | Date | number }) {\n  const fd = new FormData()\n  Object.keys(object).forEach((key) => {\n    if (object[key] == null) return\n    fd.append(key, object[key] as string | Blob)\n  })\n  return fd\n}\n\nexport default getFormData\n"],"sourceRoot":""}