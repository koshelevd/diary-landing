{"version":3,"sources":["utils/schemas.js","utils/dates.js","assets/Icons/IconSuccessRegistration/IconSuccessRegistration.tsx"],"names":["emailOption","error","yup","required","REG_FORM_EMPTY_EMAIL_ERROR","email","telegramOption","trim","urlOption","nullable","matches","URL_REG_EXP","urlOptionVacancyTab","telegramChatID","INTEGER_REGEX","firstNameOptions","min","MIN_TEXT_FIELD_SYMBOLS","MAX_TEXT_FIELD_SYMBOLS","max","NAME_FIELDS_REG_EXP","NAME_FIELDS_TIP","firstNameNotRequiredOptions","genderOptions","lastNameOptions","lastNameNotRequiredOptions","birthDateOptions","test","MAX_BIRTHDAY_DATE_ERROR","value","differenceInYears","Date","courseOptions","shape","id","name","multipleValuesOptions","experienceTypeOptions","educationLevelOptions","cohortNumberOptions","previousJobPositionOptions","OTHER_TEXT_FIELDS_REG_EXP","OTHER_TEXT_FIELDS_TIP","institutionOptions","INSTITUTION_TEXT_FIELDS_REG_EXP","INSTITUTION_TEXT_FIELDS_TIP","imageOptions","SUPPORTED_FORMATS","includes","type","logoOptions","LOGO_SUPPORTED_FORMATS_VALIDATION","vacationThirdPadAboutCompanyOptions","VACATION_THIRD_PAD_TEXTFIELD_MIN_SYMBOLS","VACATION_THIRD_PAD_ABOUT_COMPANY_MINMAX_TIPS","VACATION_THIRD_PAD_TEXTFIELD_MAX_SYMBOLS","vacationThirdSelectionStagesOptions","VACATION_THIRD_PAD_SELECTION_STAGE_FIELD_MIN_SYMBOLS","VACATION_THIRD_PAD_SELECTION_STAGE_MINMAX_TIPS","VACATION_THIRD_PAD_ABOUT_COMPANY_MAX_SYMBOLS","vacationThirdPadTextOptions","VACATION_THIRD_PAD_TEXTFIELD_MINMAX_TIPS","vacationNonRequiredRequirementsOptions","VACATION_WITHOUT_MIN_MINMAX_TIPS","passwordOption","REG_FORM_BAD_PASS_ERROR","REG_FORM_MIN_SYMBOLS","REG_FORM_MINMAX_SYMBOLS_ERROR","REG_FORM_MAX_SYMBOLS","PASSWORD_REG_EXP","passwordRepeatOption","oneOf","REG_FORM_CONFIRM_PASS_ERROR","regFormSchema","REG_FORM_BAD_EMAIL_ERROR","password","password2","regFormNewPasswordSchema","workVacancyOption","moreThan","typeError","transform","original","RESPONSE_TEXT_FIELDS_MIN_SYMBOLS","RESPONSE_TEXT_FIELD_MINMAX_TIP","RESPONSE_TEXT_FIELD_MAX_SYMBOLS","RESPONSE_WORK_REGEXP","RESPONSE_WORK_TIP","positionOption","TEXT_REGEX","excludeEmptyString","message","TEXT_REGEX_TIP","positionNotRequiredOption","contactResponseOption","newVacationSchema","start_date","format","now","end_date","endDate","context","parent","startDate","differenceInCalendarDays","foundJobSchema","company_name","job_name","offer_date","employment_history","MIN_COMMENT_SYMBOLS_FOUND_JOB_AND_WEEK_REPORT","MAX_COMMENT_SYMBOLS_FOUND_JOB_AND_WEEK_REPORT","newReportSchema","comment","newInterviewSchema","interview_date","newConsultSchema","consultation_theme","problem_description","cityOptions","location","editFormSchema","first_name","gender","city","last_name","birth_date","course","experience_type","education_type","cohort_number","previous_job_position","institution","contact_type","contact_info","portfolio_url","image","FILE_SIZE","size","newResponseSchema","position","is_remote_work","cities","RESPONSE_COMMENT_MAX_SYMBOLS","RESPONSE_COMMENT_MAX_SYMBOLS_TIP","url","salary","salary_max","when","is","val","then","theme","color_id","response_date","today","setHours","twoWeeksAgo","setDate","getDate","hr_interview_date","responseDate","schema","test_task_date","tech_interview_date","boss_interview_date","rejection_date","onboardingPersonalSchema","onboardingExperienceSchema","course_id","onboardingResumeSchema","filtersSchema","search","newCohortSchema","CREATE_COHORT_COURSE_REQUIRED_ERROR","CREATE_COHORT_NUMBER_REQUIRED_ERROR","CREATE_COHORT_NUMBER_ERROR","vacancyFirstTabSchema","isSalaryNotRequired","isConfidentialLinkNotRequired","otherwise","notRequired","website","company_confidential_url","currency","vacancySecondTabSchema","isTestTaskLinkNotRequired","test_task_url","vacancyThirdTabSchema","vacancy_info","responsibilities","circs","vacancyFourthTabSchema","mandatory_requirements","optional_requirements","selection_stages","chat_id","vacancy_url","vacancyFifthTabSchema","company_logo","applyJobSchema","isTestLinkRequired","resume","new_resume","termsOfUseSchema","isAccept","accelerationScheme","modified_at","newContactSchema","a","b","c","d","e","phone","PHONE_REG_EXP","responses_field","changeStatusSchema","date","formatRusStyle","formatDayMonthYear","locale","ru","split","join","formatDayFullMonthYear","formatDayMonthYearWithComma","formatDayFullMonth","formatApiDate","formatDbDate","getDurationInYearWeekDay","duration","intervalToDuration","start","end","formatDuration","IconSuccessRegistration","width","height","viewBox","fill","xmlns","fillRule","clipRule","React","memo"],"mappings":"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","file":"static/js/6.4ca357bb.chunk.js","sourcesContent":["/* eslint-disable no-unused-vars */\nimport * as yup from 'yup'\nimport { format, differenceInYears, differenceInCalendarDays } from 'date-fns'\nimport {\n  INTEGER_REGEX,\n  PASSWORD_REG_EXP,\n  URL_REG_EXP,\n  REG_FORM_EMPTY_EMAIL_ERROR,\n  REG_FORM_BAD_EMAIL_ERROR,\n  REG_FORM_CONFIRM_PASS_ERROR,\n  REG_FORM_BAD_PASS_ERROR,\n  FILE_SIZE,\n  SUPPORTED_FORMATS,\n  MAX_COMMENT_SYMBOLS_FOUND_JOB_AND_WEEK_REPORT,\n  MIN_COMMENT_SYMBOLS_FOUND_JOB_AND_WEEK_REPORT,\n  MIN_TEXT_FIELD_SYMBOLS,\n  MAX_TEXT_FIELD_SYMBOLS,\n  MAX_BIRTHDAY_DATE_ERROR,\n  NAME_FIELDS_REG_EXP,\n  NAME_FIELDS_TIP,\n  OTHER_TEXT_FIELDS_REG_EXP,\n  OTHER_TEXT_FIELDS_TIP,\n  REG_FORM_MIN_SYMBOLS,\n  REG_FORM_MINMAX_SYMBOLS_ERROR,\n  REG_FORM_MAX_SYMBOLS,\n  CREATE_COHORT_NUMBER_ERROR,\n  CREATE_COHORT_NUMBER_REQUIRED_ERROR,\n  CREATE_COHORT_COURSE_REQUIRED_ERROR,\n  RESPONSE_WORK_REGEXP,\n  RESPONSE_TEXT_FIELDS_MIN_SYMBOLS,\n  RESPONSE_TEXT_FIELD_MINMAX_TIP,\n  RESPONSE_TEXT_FIELD_MAX_SYMBOLS,\n  RESPONSE_WORK_TIP,\n  RESPONSE_COMMENT_MAX_SYMBOLS,\n  RESPONSE_COMMENT_MAX_SYMBOLS_TIP,\n  TEXT_REGEX,\n  TEXT_REGEX_TIP,\n  VACATION_THIRD_PAD_TEXTFIELD_MIN_SYMBOLS,\n  VACATION_THIRD_PAD_ABOUT_COMPANY_MAX_SYMBOLS,\n  VACATION_THIRD_PAD_TEXTFIELD_MAX_SYMBOLS,\n  VACATION_THIRD_PAD_ABOUT_COMPANY_MINMAX_TIPS,\n  VACATION_THIRD_PAD_TEXTFIELD_MINMAX_TIPS,\n  VACATION_WITHOUT_MIN_MINMAX_TIPS,\n  PHONE_REG_EXP,\n  VACATION_THIRD_PAD_SELECTION_STAGE_MINMAX_TIPS,\n  VACATION_THIRD_PAD_SELECTION_STAGE_FIELD_MIN_SYMBOLS,\n  INSTITUTION_TEXT_FIELDS_REG_EXP,\n  INSTITUTION_TEXT_FIELDS_TIP,\n  LOGO_SUPPORTED_FORMATS_VALIDATION,\n} from './constants'\nimport { formatRusStyle } from './dates'\n\nconst maxDateTest = (value, context) => {\n  const today = new Date()\n  today.setHours(0, 0, 0, 0)\n  return today >= value\n}\n\nconst maxTodayTest = (value, context) => {\n  const today = new Date()\n  today.setHours(23, 59, 59, 0)\n  return today >= value\n}\nconst maxBirthdayDay = (value) => differenceInYears(new Date(), new Date(value)) >= 18\n\nexport const emailOption = (error) => yup.string().required(REG_FORM_EMPTY_EMAIL_ERROR).email(error)\n\nexport const telegramOption = yup.string().required('Укажите свой ник в Телеграме').trim()\n\nconst urlOption = yup.string().nullable(true).matches(URL_REG_EXP, 'Введи корректный адрес сайта')\n\nexport const urlOptionRequired = yup\n  .string()\n  .required('Это поле обязательно для заполнения')\n  .matches(URL_REG_EXP, 'Введи корректный адрес сайта')\n\nexport const urlOptionVacancyTab = yup.string().matches(URL_REG_EXP, 'Неверный формат ссылки')\n\nexport const telegramChatID = yup\n  .string()\n  // .required('Это поле обязательно для заполнения')\n  .nullable(true)\n  .matches(INTEGER_REGEX, 'Неверный формат ID чата')\n\nconst firstNameOptions = yup\n  .string()\n  .min(MIN_TEXT_FIELD_SYMBOLS, `Возможная длина поля ${MIN_TEXT_FIELD_SYMBOLS}-${MAX_TEXT_FIELD_SYMBOLS} символов`)\n  .max(MAX_TEXT_FIELD_SYMBOLS, `Возможная длина поля ${MIN_TEXT_FIELD_SYMBOLS}-${MAX_TEXT_FIELD_SYMBOLS} символов`)\n  .matches(NAME_FIELDS_REG_EXP, NAME_FIELDS_TIP)\n  .trim(NAME_FIELDS_TIP)\n  .required('Введи имя')\n\nconst firstNameNotRequiredOptions = yup\n  .string()\n  .min(MIN_TEXT_FIELD_SYMBOLS, `Возможная длина поля ${MIN_TEXT_FIELD_SYMBOLS}-${MAX_TEXT_FIELD_SYMBOLS} символов`)\n  .max(MAX_TEXT_FIELD_SYMBOLS, `Возможная длина поля ${MIN_TEXT_FIELD_SYMBOLS}-${MAX_TEXT_FIELD_SYMBOLS} символов`)\n  .matches(NAME_FIELDS_REG_EXP, NAME_FIELDS_TIP)\n  .trim(NAME_FIELDS_TIP)\n\nconst genderOptions = yup.string().required('Выбери пол') // https://employmentdiary.atlassian.net/browse/SD-599\n\nconst lastNameOptions = yup\n  .string()\n  .min(MIN_TEXT_FIELD_SYMBOLS, `Возможная длина поля ${MIN_TEXT_FIELD_SYMBOLS}-${MAX_TEXT_FIELD_SYMBOLS} символов`)\n  .max(MAX_TEXT_FIELD_SYMBOLS, `Возможная длина поля ${MIN_TEXT_FIELD_SYMBOLS}-${MAX_TEXT_FIELD_SYMBOLS} символов`)\n  .matches(NAME_FIELDS_REG_EXP, NAME_FIELDS_TIP)\n  .trim(NAME_FIELDS_TIP)\n  .required('Введи фамилию')\nconst lastNameNotRequiredOptions = yup\n  .string()\n  .max(MAX_TEXT_FIELD_SYMBOLS, `Возможная длина поля ${MIN_TEXT_FIELD_SYMBOLS}-${MAX_TEXT_FIELD_SYMBOLS} символов`)\n  .matches(NAME_FIELDS_REG_EXP, NAME_FIELDS_TIP)\n  .trim(NAME_FIELDS_TIP)\n  .nullable(true)\nconst birthDateOptions = yup\n  .string()\n  .nullable(true)\n  .required('Введи дату рождения')\n  .test('max-birthday-date', MAX_BIRTHDAY_DATE_ERROR, maxBirthdayDay)\nconst courseOptions = yup\n  .object()\n  .shape({\n    id: yup.string(),\n    name: yup.string(),\n  })\n  .nullable()\n  .required('Выбери курс')\n\nconst multipleValuesOptions = yup\n  .array()\n  .min(1, 'Это поле обязательно для заполнения')\n  .required('Это поле обязательно для заполнения')\n\nconst experienceTypeOptions = yup.string().required('Введи опыт работы')\nconst educationLevelOptions = yup.string().required('Выбери тип образования')\nconst cohortNumberOptions = yup.number('Выбери номер потока').required('Выбери номер потока')\nconst previousJobPositionOptions = yup\n  .string()\n  .min(MIN_TEXT_FIELD_SYMBOLS, `Возможная длина поля ${MIN_TEXT_FIELD_SYMBOLS}-${MAX_TEXT_FIELD_SYMBOLS} символов`)\n  .max(MAX_TEXT_FIELD_SYMBOLS, `Возможная длина поля ${MIN_TEXT_FIELD_SYMBOLS}-${MAX_TEXT_FIELD_SYMBOLS} символов`)\n  .matches(OTHER_TEXT_FIELDS_REG_EXP, OTHER_TEXT_FIELDS_TIP)\n  .trim(OTHER_TEXT_FIELDS_TIP)\n  .required('Введи должность с предыдущего места работы')\nconst institutionOptions = yup\n  .string()\n  .min(MIN_TEXT_FIELD_SYMBOLS, `Возможная длина поля ${MIN_TEXT_FIELD_SYMBOLS}-${MAX_TEXT_FIELD_SYMBOLS} символов`)\n  .max(MAX_TEXT_FIELD_SYMBOLS, `Возможная длина поля ${MIN_TEXT_FIELD_SYMBOLS}-${MAX_TEXT_FIELD_SYMBOLS} символов`)\n  .matches(INSTITUTION_TEXT_FIELDS_REG_EXP, INSTITUTION_TEXT_FIELDS_TIP)\n  .trim(OTHER_TEXT_FIELDS_TIP)\n  .required('Введи учебное заведение')\nconst imageOptions = yup\n  .mixed()\n  .test(\n    'fileFormat',\n    `Можно загрузить изображение форматов jpeg, jpg и png`,\n    (value) => value === null || typeof value === 'string' || (value && SUPPORTED_FORMATS.includes(value.type)),\n  )\nconst logoOptions = yup\n  .mixed()\n  .test(\n    'fileFormat',\n    `Можно загрузить изображение форматов jpg, png и svg`,\n    (value) =>\n      value === null || typeof value === 'string' || (value && LOGO_SUPPORTED_FORMATS_VALIDATION.includes(value.type)),\n  )\n\nconst filesOption = yup.array().required().min(1, 'Необходимо загрузить как минимум один файл')\n\nconst vacationThirdPadAboutCompanyOptions = yup\n  .string()\n  // .required('Это поле обязательно для заполнения')\n  .min(VACATION_THIRD_PAD_TEXTFIELD_MIN_SYMBOLS, VACATION_THIRD_PAD_ABOUT_COMPANY_MINMAX_TIPS)\n  .max(VACATION_THIRD_PAD_TEXTFIELD_MAX_SYMBOLS, VACATION_THIRD_PAD_ABOUT_COMPANY_MINMAX_TIPS)\n\nconst vacationThirdSelectionStagesOptions = yup\n  .string()\n  // .required('Это поле обязательно для заполнения')\n  .min(VACATION_THIRD_PAD_SELECTION_STAGE_FIELD_MIN_SYMBOLS, VACATION_THIRD_PAD_SELECTION_STAGE_MINMAX_TIPS)\n  .max(VACATION_THIRD_PAD_ABOUT_COMPANY_MAX_SYMBOLS, VACATION_THIRD_PAD_SELECTION_STAGE_MINMAX_TIPS)\n\nconst vacationThirdPadTextOptions = yup\n  .string()\n  // .required('Это поле обязательно для заполнения')\n  .min(VACATION_THIRD_PAD_TEXTFIELD_MIN_SYMBOLS, VACATION_THIRD_PAD_TEXTFIELD_MINMAX_TIPS)\n  .max(VACATION_THIRD_PAD_TEXTFIELD_MAX_SYMBOLS, VACATION_THIRD_PAD_TEXTFIELD_MINMAX_TIPS)\n\nconst vacationNonRequiredRequirementsOptions = yup\n  .string()\n  .max(VACATION_THIRD_PAD_TEXTFIELD_MAX_SYMBOLS, VACATION_WITHOUT_MIN_MINMAX_TIPS)\n\nexport const currencyOptions = yup.string().required('Это поле обязательно для заполнения')\n\nconst minResponseDate = (value) => {\n  if (!value) return true\n  const twoWeeksAgo = new Date()\n  twoWeeksAgo.setDate(twoWeeksAgo.getDate() - 13)\n  twoWeeksAgo.setHours(0, 0, 0, 0)\n  return twoWeeksAgo <= value\n}\n\nconst passwordOption = yup\n  .string()\n  .required(REG_FORM_BAD_PASS_ERROR)\n  .min(REG_FORM_MIN_SYMBOLS, REG_FORM_MINMAX_SYMBOLS_ERROR)\n  .max(REG_FORM_MAX_SYMBOLS, REG_FORM_MINMAX_SYMBOLS_ERROR)\n  .matches(PASSWORD_REG_EXP, REG_FORM_BAD_PASS_ERROR)\n\nconst passwordRepeatOption = yup\n  .string()\n  .min(REG_FORM_MIN_SYMBOLS, REG_FORM_MINMAX_SYMBOLS_ERROR)\n  .max(REG_FORM_MAX_SYMBOLS, REG_FORM_MINMAX_SYMBOLS_ERROR)\n  .oneOf([yup.ref('password'), null], REG_FORM_CONFIRM_PASS_ERROR)\n\nexport const regFormSchema = yup.object().shape({\n  email: emailOption(REG_FORM_BAD_EMAIL_ERROR),\n  password: passwordOption,\n  password2: passwordRepeatOption,\n})\n\nexport const regFormNewPasswordSchema = yup.object().shape({\n  password: passwordOption,\n  password2: passwordRepeatOption,\n})\n\nexport const salaryOptionRequired = yup\n  .number()\n  .max(1000000000, 'Вряд ли это число может быть больше 1000000000')\n  .required('Это поле обязательно для заполнения')\n  .moreThan(-1, 'Зарплата не может быть меньше нуля')\n  .typeError('Можно использовать только цифры 0-9')\n  .transform((value, original) => (original == null || original === '' ? null : value))\n\nexport const salaryMaxOptionRequired = yup\n  .number()\n  .max(1000000000, 'Вряд ли это число может быть больше 1000000000')\n  .required('Это поле обязательно для заполнения')\n  .moreThan(-1, 'Зарплата не может быть меньше нуля')\n  .min(yup.ref('salary'), 'Должно быть больше значение \"от\"')\n  .typeError('Можно использовать только цифры 0-9')\n  .transform((value, original) => (original == null || original === '' ? null : value))\n\nconst workVacancyOption = yup\n  .string()\n  .required('Это поле обязательно для заполнения')\n  .min(RESPONSE_TEXT_FIELDS_MIN_SYMBOLS, RESPONSE_TEXT_FIELD_MINMAX_TIP)\n  .max(RESPONSE_TEXT_FIELD_MAX_SYMBOLS, RESPONSE_TEXT_FIELD_MINMAX_TIP)\n  .matches(RESPONSE_WORK_REGEXP, RESPONSE_WORK_TIP)\n\nconst positionOption = yup\n  .string()\n  .required('Введи должность')\n  .matches(TEXT_REGEX, {\n    excludeEmptyString: true,\n    message: TEXT_REGEX_TIP,\n  })\n  .min(2, 'Минимум 2 символа')\n  .max(150, 'Максимум 150 символов')\n\nconst positionNotRequiredOption = yup\n  .string()\n  .nullable(true)\n  .matches(TEXT_REGEX, {\n    excludeEmptyString: true,\n    message: TEXT_REGEX_TIP,\n  })\n  .min(2, 'Минимум 2 символа')\n  .max(150, 'Максимум 150 символов')\n\nexport const contactResponseOption = yup.object().required('Это поле обязательно для заполнения').nullable(true)\n\nconst minSevenDaysVacation = (endDate, context) => {\n  const { start_date: startDate } = context?.parent\n  return differenceInCalendarDays(new Date(endDate), new Date(startDate)) > 5\n}\n\nconst endDateNotLessStartDate = (endDate, context) => {\n  const { start_date: startDate } = context?.parent\n  return endDate >= startDate\n}\n\nexport const newVacationSchema = yup.object().shape({\n  start_date: yup\n    .date()\n    .required('Обязательное поле')\n    .min(format(Date.now(), 'yyyy-MM-dd'), 'Эта дата уже в прошлом. Выбери актуальную дату'),\n  end_date: yup\n    .date()\n    .required('Обязательное поле')\n    .test('not less', 'Дата окончания не может быть раньше начала', endDateNotLessStartDate)\n    .test('seven', 'Увеличь срок. Минимальный — семь дней', minSevenDaysVacation),\n})\n\nexport const foundJobSchema = yup.object().shape({\n  company_name: yup\n    .string()\n    .required('Введи название компании')\n    .matches(TEXT_REGEX, {\n      excludeEmptyString: true,\n      message: TEXT_REGEX_TIP,\n    })\n    .min(1)\n    .max(150, 'Максимум 150 символов'),\n  job_name: positionOption,\n  offer_date: yup.date().required('Введи дату получения оффера').nullable(true),\n  employment_history: yup\n    .string()\n    .min(\n      MIN_COMMENT_SYMBOLS_FOUND_JOB_AND_WEEK_REPORT,\n      `Не меньше ${MIN_COMMENT_SYMBOLS_FOUND_JOB_AND_WEEK_REPORT} символов`,\n    )\n    .max(\n      MAX_COMMENT_SYMBOLS_FOUND_JOB_AND_WEEK_REPORT,\n      `Не более ${MAX_COMMENT_SYMBOLS_FOUND_JOB_AND_WEEK_REPORT} символов`,\n    ),\n})\n\nexport const newReportSchema = yup.object().shape({\n  comment: yup\n    .string()\n    .required('Обязательное поле')\n    .min(\n      MIN_COMMENT_SYMBOLS_FOUND_JOB_AND_WEEK_REPORT,\n      `Не меньше ${MIN_COMMENT_SYMBOLS_FOUND_JOB_AND_WEEK_REPORT} символов`,\n    )\n    .max(\n      MAX_COMMENT_SYMBOLS_FOUND_JOB_AND_WEEK_REPORT,\n      `Не более ${MAX_COMMENT_SYMBOLS_FOUND_JOB_AND_WEEK_REPORT} символов`,\n    ),\n})\n\nexport const newInterviewSchema = yup.object().shape({\n  interview_date: yup\n    .date()\n    .required('Обязательное поле')\n    .min(format(Date.now(), 'yyyy-MM-dd'), 'Дата собеседования не может быть раньше текущей даты'),\n})\n\nexport const newConsultSchema = yup.object().shape({\n  consultation_theme: yup.string().required('Выбери консультанта'),\n  problem_description: yup.string().required('Введи описание проблемы'),\n})\n\nconst cityOptions = yup\n  .object()\n  .shape({\n    id: yup.string(),\n    location: yup.string(),\n  })\n  .nullable()\n  .required('Введи город')\n\nexport const editFormSchema = yup.object().shape({\n  first_name: firstNameOptions,\n  gender: genderOptions,\n  city: cityOptions,\n  last_name: lastNameOptions,\n  birth_date: birthDateOptions,\n  course: courseOptions,\n  experience_type: experienceTypeOptions,\n  education_type: educationLevelOptions,\n  cohort_number: cohortNumberOptions,\n  previous_job_position: previousJobPositionOptions,\n  institution: institutionOptions,\n  contact_type: yup.string().required('Выбери тип контакта'),\n  contact_info: telegramOption,\n  portfolio_url: urlOption,\n  image: imageOptions.test(\n    'fileSize',\n    `Максимальный размер файла ${FILE_SIZE / 1048576} MB`,\n    (value) => value === null || typeof value === 'string' || (value && value.size <= FILE_SIZE),\n  ),\n})\n\nexport const newResponseSchema = yup.object().shape({\n  company_name: yup\n    .string()\n    .required('Введи название компании')\n    .min(RESPONSE_TEXT_FIELDS_MIN_SYMBOLS, RESPONSE_TEXT_FIELD_MINMAX_TIP)\n    .max(RESPONSE_TEXT_FIELD_MAX_SYMBOLS, RESPONSE_TEXT_FIELD_MINMAX_TIP)\n    .matches(RESPONSE_WORK_REGEXP, RESPONSE_WORK_TIP),\n  position: yup\n    .string()\n    .required('Введи должность')\n    .min(RESPONSE_TEXT_FIELDS_MIN_SYMBOLS, RESPONSE_TEXT_FIELD_MINMAX_TIP)\n    .max(RESPONSE_TEXT_FIELD_MAX_SYMBOLS, RESPONSE_TEXT_FIELD_MINMAX_TIP)\n    .matches(RESPONSE_WORK_REGEXP, RESPONSE_WORK_TIP),\n  is_remote_work: yup.boolean(),\n  cities: yup.array().nullable(true),\n  comment: yup\n    .string('Комментарий должен быть текстом')\n    .max(RESPONSE_COMMENT_MAX_SYMBOLS, RESPONSE_COMMENT_MAX_SYMBOLS_TIP)\n    .nullable(true),\n  url: urlOption,\n  salary: yup\n    .number()\n    .max(1000000000, 'Вряд ли это число может быть больше 1000000000')\n    .nullable(true)\n    .moreThan(-1, 'Зарплата не может быть меньше нуля')\n    .typeError('Введи число')\n    .transform((value, original) => (original == null || original === '' ? null : value)),\n  salary_max: yup\n    .number()\n    .max(1000000000, 'Вряд ли это число может быть больше 1000000000')\n    .nullable(true)\n    .moreThan(-1, 'Зарплата не может быть меньше нуля')\n    .typeError('Введи число')\n    .transform((value, original) => (original == null || original === '' ? null : value))\n    .when('salary', {\n      is: (val) => val,\n      then: (theme) => theme.min(yup.ref('salary'), 'Должно быть больше значения \"до\"'),\n    }),\n  color_id: yup.string().required('Выберите цвет'),\n  response_date: yup\n    .date()\n    .required('Обязательное поле')\n    .test('max-current-date', 'Дата отклика не может быть больше текущей даты', maxDateTest)\n    .test('min-two-weeks', 'Нельзя вносить отклики, которые были отправлены более 14 дней назад', minResponseDate)\n    .typeError('Введи дату'),\n  hr_interview_date: yup\n    .date()\n    .nullable(true)\n    .when(\n      'response_date',\n      (responseDate, schema) => responseDate && schema.min(responseDate, 'Не может быть ранее даты отклика'),\n    )\n    .typeError('Введи дату'),\n  test_task_date: yup\n    .date()\n    .nullable(true)\n    .when(\n      'response_date',\n      (responseDate, schema) => responseDate && schema.min(responseDate, 'Не может быть ранее даты отклика'),\n    )\n    .typeError('Введи дату'),\n  tech_interview_date: yup\n    .date()\n    .nullable(true)\n    .when(\n      'response_date',\n      (responseDate, schema) => responseDate && schema.min(responseDate, 'Не может быть ранее даты отклика'),\n    )\n    .typeError('Введи дату'),\n  boss_interview_date: yup\n    .date()\n    .nullable(true)\n    .when(\n      'response_date',\n      (responseDate, schema) => responseDate && schema.min(responseDate, 'Не может быть ранее даты отклика'),\n    )\n    .typeError('Введи дату'),\n  offer_date: yup\n    .date()\n    .nullable(true)\n    .when(\n      'response_date',\n      (responseDate, schema) => responseDate && schema.min(responseDate, 'Не может быть ранее даты отклика'),\n    )\n    .typeError('Введи дату'),\n  rejection_date: yup\n    .date()\n    .nullable(true)\n    .when(\n      'response_date',\n      (responseDate, schema) => responseDate && schema.min(responseDate, 'Не может быть ранее даты отклика'),\n    )\n    .typeError('Введи дату'),\n})\n\nexport const onboardingPersonalSchema = yup.object().shape({\n  image: imageOptions.test(\n    'fileSize',\n    `Максимальный размер файла ${FILE_SIZE / 1048576} MB`,\n    (value) => !value || (value && value.size <= FILE_SIZE),\n  ),\n  first_name: firstNameOptions,\n  last_name: lastNameOptions,\n  city: cityOptions,\n  birth_date: birthDateOptions,\n  gender: genderOptions,\n})\n\nexport const onboardingExperienceSchema = yup.object().shape({\n  course_id: courseOptions,\n  cohort_number: cohortNumberOptions,\n  experience_type: experienceTypeOptions,\n  previous_job_position: previousJobPositionOptions,\n  education_type: educationLevelOptions,\n  institution: institutionOptions,\n})\n\nexport const onboardingResumeSchema = yup.object().shape({\n  contact_type: yup.string().required('Выбери тип контакта'),\n  contact_info: telegramOption,\n  portfolio_url: urlOption,\n})\n\nexport const filtersSchema = yup.object().shape({\n  search: yup.string().required('Поле поиска не может быть пустым'),\n  start_date: yup\n    .date()\n    .required('Введите дату начала интервала')\n    .nullable(true)\n    // .test('max-current-date', 'Дата начала интервала не может быть больше текущей даты', maxDateTest)\n    .typeError('Неправильный формат даты')\n    .max(yup.ref('end_date'), 'Дата начала интервала не может быть больше даты окончания'),\n  end_date: yup\n    .date()\n    .required('Введите дату начала интервала')\n    .nullable(true)\n    // .test('max-current-date', 'Дата начала интервала не может быть больше текущей даты', maxDateTest)\n    .typeError('Неправильный формат даты')\n    .min(yup.ref('start_date'), 'Дата конца интервала не может быть меньше даты начала'),\n})\n\nexport const newCohortSchema = yup.object().shape({\n  course_id: yup.string(CREATE_COHORT_COURSE_REQUIRED_ERROR).required(CREATE_COHORT_COURSE_REQUIRED_ERROR),\n  cohort_number: yup\n    .number()\n    .required(CREATE_COHORT_NUMBER_REQUIRED_ERROR)\n    .typeError(CREATE_COHORT_NUMBER_ERROR)\n    .min(1, 'Номер должен быть положительным числом'),\n})\n\nexport const vacancyFirstTabSchema = yup.object().shape({\n  isSalaryNotRequired: yup.boolean(),\n  isConfidentialLinkNotRequired: yup.boolean(),\n  company_name: workVacancyOption,\n  // courses: multipleValuesOptions,\n  salary: yup\n    .number()\n    .max(1000000000, 'Вряд ли это число может быть больше 1000000000')\n    .moreThan(-1, 'Зарплата не может быть меньше нуля')\n    .transform((value, original) => (original == null || original === '' ? null : value))\n    .nullable(true)\n    .typeError('Можно использовать только цифры 0-9')\n    .when('salary_max', {\n      is: (val) => !val,\n      then: (theme) => theme.required('Заполни хотя бы одно поле зарплаты'),\n      otherwise: (theme) => theme.max(yup.ref('salary_max'), 'Должно быть меньше значения \"до\"'),\n    })\n    .when('isSalaryNotRequired', {\n      is: true,\n      then: (theme) => theme.notRequired(),\n    }),\n  salary_max: yup\n    .number()\n    .max(1000000000, 'Вряд ли это число может быть больше 1000000000')\n    .moreThan(-1, 'Зарплата не может быть меньше нуля')\n    .transform((value, original) => (original == null || original === '' ? null : value))\n    .nullable(true)\n    .typeError('Можно использовать только цифры 0-9'),\n  website: urlOption,\n  position: workVacancyOption,\n  company_confidential_url: yup\n    .string()\n    .matches(URL_REG_EXP, 'Введи корректный адрес сайта')\n    .when('isConfidentialLinkNotRequired', {\n      is: false,\n      then: yup.string().required('Это поле обязательно для заполнения'),\n    }),\n  currency: yup.string().when('isSalaryNotRequired', {\n    is: false,\n    then: yup.string().required('Это поле обязательно для заполнения'),\n  }),\n})\n\nexport const vacancySecondTabSchema = yup.object().shape({\n  // cities: multipleValuesOptions,\n  isTestTaskLinkNotRequired: yup.boolean(),\n  // employment: multipleValuesOptions,\n  // design_formats: multipleValuesOptions,\n  // work_format: multipleValuesOptions,\n  // experience_type: multipleValuesOptions,\n  // education_type: multipleValuesOptions,\n  test_task_url: yup\n    .string()\n    .matches(URL_REG_EXP, 'Введи корректный адрес сайта')\n    .when('isTestTaskLinkNotRequired', {\n      is: false,\n      then: yup.string().required('Это поле обязательно для заполнения'),\n    }),\n})\n\nexport const vacancyThirdTabSchema = yup.object().shape({\n  vacancy_info: vacationThirdPadAboutCompanyOptions,\n  responsibilities: vacationThirdPadTextOptions,\n  circs: vacationThirdPadTextOptions,\n})\n\nexport const vacancyFourthTabSchema = yup.object().shape({\n  mandatory_requirements: vacationThirdPadTextOptions,\n  optional_requirements: vacationNonRequiredRequirementsOptions,\n  selection_stages: vacationThirdSelectionStagesOptions,\n  chat_id: telegramChatID,\n  vacancy_url: urlOptionVacancyTab.nullable(true),\n})\n\nexport const vacancyFifthTabSchema = yup.object().shape({\n  company_logo: logoOptions.test(\n    'fileSize',\n    `Максимальный размер файла ${FILE_SIZE / 1048576} MB`,\n    (value) => value === null || typeof value === 'string' || (value && value.size <= FILE_SIZE),\n  ),\n})\n\nexport const applyJobSchema = yup.object().shape({\n  isTestLinkRequired: yup.boolean(),\n  contact_type: yup.string().required('Выбери тип контакта'),\n  contact_info: telegramOption,\n  resume: yup.number().required('Это поле обязательно для заполнения'),\n  new_resume: yup.array().when('resume', {\n    is: -1,\n    then: multipleValuesOptions,\n  }),\n})\n\nexport const termsOfUseSchema = yup.object().shape({\n  isAccept: yup\n    .boolean()\n    .required('Необходимо принять соглашение пользователя')\n    .oneOf([true], 'Необходимо принять соглашение пользователя'),\n})\n\nexport const accelerationScheme = yup.object().shape({\n  modified_at: yup.string().nullable(true).required('Введи дату'),\n})\n\nexport const newContactSchema = yup.object().shape({\n  first_name: firstNameNotRequiredOptions.when(['last_name', 'position', 'phone', 'contact_info', 'email'], {\n    is: (a, b, c, d, e) => !a && !b && !c && !d && !e,\n    then: firstNameNotRequiredOptions.required('Должно быть заполнено хотя бы одно поле'),\n    otherwise: firstNameNotRequiredOptions,\n  }),\n  last_name: lastNameNotRequiredOptions,\n  position: positionNotRequiredOption,\n  phone: yup.string().nullable(true).matches(PHONE_REG_EXP, 'Введи корректный номер телефона'),\n  contact_type: yup.string(),\n  contact_info: yup.string().trim(),\n  email: yup.string().email('Введи корректный адрес электронной почты').nullable(true),\n  responses_field: contactResponseOption,\n})\n\nexport const changeStatusSchema = yup.object().shape({\n  response_date: yup.date(),\n  date: yup\n    .date()\n    .when(\n      'response_date',\n      (responseDate, schema) =>\n        responseDate && schema.min(responseDate, `Не может быть ранее даты отклика (${formatRusStyle(responseDate)})`),\n    )\n    .typeError('Введи дату'),\n})\n","import { format, formatDuration, intervalToDuration } from 'date-fns'\nimport { ru } from 'date-fns/locale'\n\nexport function formatDayMonth(value) {\n  return value ? format(new Date(value), 'dd MMM', { locale: ru }).slice(0, -1) : ''\n}\n\nexport function formatDayMonthYear(value) {\n  return format(new Date(value), 'dd MMM yyyy', { locale: ru }).split('.').join('')\n}\n\nexport function formatDayFullMonthYear(value) {\n  return format(new Date(value), 'dd MMMM yyyy', { locale: ru }).split('.').join('')\n}\n\nexport function formatDayMonthYearWithComma(value) {\n  return format(new Date(value), 'dd MMM yyyy', { locale: ru }).split('.').join(',')\n}\n\nexport function formatDayFullMonth(value) {\n  return value ? format(new Date(value), 'dd MMMM', { locale: ru }) : ''\n}\n\nexport function formatRusStyle(value) {\n  return value ? format(new Date(value), 'dd.MM.yyyy') : ''\n}\n\nexport function formatApiDate(value) {\n  return format(value, \"yyyy-MM-dd'T'HH:mm:ss.SSSxxx\")\n}\n\nexport function formatDbDate(value) {\n  return format(value, 'yyyy-MM-dd')\n}\n\nexport function getDurationInYearWeekDay(value) {\n  if (value) {\n    // value * 86400000 - переводим дни в миллисекунды\n    const duration = intervalToDuration({ start: Date.now() - value * 86400000, end: Date.now() })\n    return `${formatDuration(duration, { format: ['years', 'months', 'days'], locale: ru })}`\n  }\n  return ''\n}\n\nexport default formatDayMonth\n","import React, { FC } from 'react'\n\nconst IconSuccessRegistration: FC = () => (\n  <svg width=\"48\" height=\"48\" viewBox=\"0 0 54 55\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path\n      fillRule=\"evenodd\"\n      clipRule=\"evenodd\"\n      d=\"M26.9999 0.806152C12.2958 0.806152 0.333252 12.7684 0.333252 27.4728C0.333252 42.1773 12.2958 54.1395 26.9999 54.1395C41.704 54.1395 53.6666 42.1773 53.6666 27.4728C53.6666 12.7684 41.704 0.806152 26.9999 0.806152ZM47.5255 15.0282C49.7304 18.6547 50.9999 22.9169 50.9999 27.4728C50.9999 32.0287 49.7304 36.2882 47.5255 39.9175C47.1246 40.5771 46.6917 41.218 46.232 41.8322C45.7696 42.4491 45.2805 43.042 44.7647 43.6108C43.7331 44.7458 42.5919 45.7846 41.3598 46.7033C41.0525 46.9356 40.7371 47.1572 40.4191 47.3736C39.1416 48.2388 37.7785 48.9812 36.3407 49.5848C35.9826 49.7396 35.6191 49.8839 35.2529 50.0174C34.5153 50.2844 33.7643 50.5194 32.9972 50.7171C31.081 51.2111 29.0712 51.4728 26.9999 51.4728C13.7465 51.4728 2.99992 40.7266 2.99992 27.4728C2.99992 14.219 13.7465 3.47282 26.9999 3.47282C29.0712 3.47282 31.081 3.73453 32.9972 4.22858C33.7643 4.4262 34.5153 4.65853 35.2529 4.93092C35.6191 5.06445 35.9826 5.20599 36.3407 5.35821C37.7785 5.96442 39.1416 6.70949 40.4191 7.57207C40.7371 7.78839 41.0525 8.01004 41.3598 8.24237C42.5919 9.1637 43.7331 10.1972 44.7647 11.3348C45.2805 11.9037 45.7696 12.4992 46.232 13.1134C46.6917 13.7303 47.1246 14.3686 47.5255 15.0282ZM17.7101 27.0064L24.0444 33.341L39.4929 17.8913L41.3807 19.7778L24.0444 37.1163L15.8223 28.8952L17.7101 27.0064Z\"\n      fill=\"#87CC9E\"\n    />\n  </svg>\n)\n\nexport default React.memo(IconSuccessRegistration)\n"],"sourceRoot":""}