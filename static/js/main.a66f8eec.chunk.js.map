{"version":3,"sources":["services/axios/settings.ts","services/axios/onboarding.ts","services/slices/student-vacancies-slice.ts","services/slices/hr-notifications-slice.ts","services/slices/websocket-slice.ts","services/axios/achievements.ts","services/axios/project-creation.ts","components/Sub/DataTable/LoadingOverlay/LoadingOverlay.style.js","components/Sub/DataTable/LoadingOverlay/LoadingOverlay.jsx","services/axios/companies-page.ts","services/slices/vacancies-page-slice.ts","services/slices/companies-page-slice.ts","services/slices/workshop-projects-list-page-slice.ts","services/slices/statistics-metrics-slice.ts","services/slices/project-creation-slice.ts","assets/medal-big-gray.svg","services/slices/achievements-slice.ts","services/slices/diary-slice.ts","services/slices/partners-form-slice.ts","services/slices/metrics-slice.ts","services/slices/student-workshop-slice.ts","services/slices/onboarding-slice.ts","services/store/middleware.ts","services/store/socketMiddleware.ts","services/store/store.ts","components/App/App.styles.js","utils/useUpdateStudentStatus.ts","utils/withClearCache.js","components/App/App.jsx","reportWebVitals.js","components/WithYandexMetrics/WithYandexMetrics.jsx","index.jsx","services/axios/vacancies-page.ts","services/axios/workshop-projects-list-page.ts","services/axios/auth.ts","services/axios/student-vacancies.ts","services/axios/diary.ts","services/axios/hr-notifications.ts","services/store/hooks.ts","services/slices/auth-slice.ts","utils/showAchievementsNotifications.tsx","components/App/App.theme.js","services/axios/metrics.ts","services/axios/student-projects.ts","utils/constants/partners-form-constants.ts","services/axios/partners-form.ts","services/slices/app-slice.ts","utils/constants.js"],"names":["instance","axios","create","baseURL","process","headers","Accept","withCredentials","interceptors","response","use","res","err","a","originalConfig","config","url","API_TOKEN_REFRESH_ENDPOINT","status","Promise","reject","API_SIGN_IN_ENDPOINT","API_SIGN_UP_ENDPOINT","API_PASSWORD_RECOVERY_ENDPOINT","retry","post","data","window","location","href","getOnboardingBaseData","createAsyncThunk","_","rejectWithValue","api","get","API_ONBOARDING_DIRECTORY_ENDPOINT","typedError","initialState","isError","errorInfo","directories","courses","currencies","jobApplicationItems","employmentItems","workFormatItems","vacancies","vacancyPage","undefined","externalVacancies","externalPage","selectedVacancy","isJobApplicationModalOpen","achievements","isOpenVacancyPopup","isOpenPartnersVacancyPopup","selectedFullVacancy","isNoDetails","filteredVacancies","isExternalLoading","isVacancyLoading","isLockUpdate","filters","studentVacanciesSlice","createSlice","name","reducers","saveFilters","state","action","payload","setIsLockUpdate","setViewedExternal","index","findIndex","vacancy","id","is_viewed","setViewedPartners","openJobApplicationModal","closeJobApplicationModal","openVacancyPopup","closeVacancyPopup","openPartnersVacancyPopup","closePartnersVacancyPopup","selectVacancy","resetPartnersAchievements","resetPage","extraReducers","builder","addCase","getPartnersDirectories","pending","fulfilled","rawData","map","currency","icon","label","employment","e","value","work_format","w","design_formats","d","rejected","getPartnersVacancies","page","URLSearchParams","next","push","results","length","firstVacancy","getExternalVacancies","getPartnersVacancy","getExternalVacancy","postPartnersVacancyResponse","newVacancies","v","is_accepted","createVacancyResponse","actions","showedNotifications","notShowedNotifications","notificationsCount","isNetworkError","networkError","isLoading","hrNotificationsSlice","changeNotificationsCountState","resetPages","getShowedNotificationsList","getNotShowedNotificationsList","patchNotification","newNotShowedNotifications","splice","item","pk","patchAllNotifications","deleteAllShowedNotifications","websocketSlice","wsConnected","wsError","wsConnectionStart","wsConnectionStop","wsConnectionSuccess","wsConnectionError","wsConnectionClosed","openSocket","dispatch","useAppDispatch","closeSocket","getAchievements","API_ACHIEVEMENTS_ENDPOINT","getDirectories","project_types","type","comment","team_items","title","isActive","isMustHave","teamImage","count","project_spheres","project_directions","customer_types","db_name","useStyles","makeStyles","root","width","height","backgroundColor","position","justifyContent","alignItems","disabled","display","transition","zIndex","LoadingOverlay","loading","style","classes","className","color","size","React","getCompaniesList","paramsSerializer","API_COMPANIES_LIST","params","hook","getCompanyInfo","API_COMPANY_ID","deleteCompany","delete","getCompanyVacanciesList","API_COMPANY_VACANCIES","start_date","end_date","getCompanyEmployedStudentList","API_COMPANY_EMPLOYED_STUDENT","API_HR_PART_DIRECTORY_ENDPOINT","statuses","vacancies_status","s","studentStatuses","student_status","experienceItems","experience_types","educationItems","education_types","vacanciesStatus","API_HR_PART_COMPANY_SIZE_ENDPOINT","sizes_response","API_HR_PART_COMPANY_TYPE_ENDPOINT","types_response","API_HR_PART_COMPANY_SCOPE_ENDPOINT","scopes_response","directoriesData","sizes","types","t","scopes","getCohorts","API_GET_FILTERS_STUDENTS","patchCompanyStatus","patch","companyId","updatedRow","patchVacancyStatus","API_HR_PART_VACANCY_BY_ID_ENDPOINT","vacancyId","vacancy_status","patchCompanyInfo","patchData","patchStudentStatus","API_STUDENT_BY_ID_ENDPOINT","studentId","modified_at","getCompaniesStatuses","API_COMPANIES_STATUSES","postDraftCompany","API_COMPANY_DRAFT_ENDPOINT","getRows","result","offeredStudents","filter","job_found","otherStudents","isOfferedStudents","isOtherStudents","vacanciesPageSlice","filtersJSON","vacancyToArchive","vacancyToDelete","isInfoPopupOpen","vacancyToEdit","statistic","isOpenFoundJobPopup","studentToEdit","patchNetworkError","infoData","rows","updateStatus","updateStudentStatus","rowsCount","header","isDraftPopupOpen","draftFormData","studentProfile","isOpenVacancyAcceleratePopup","isSuccessDeleteVacancy","setIsSuccessDeleteVacancy","setIsOpenVacancyAcceleratePopup","setUpdatedStudentStatus","newInfoRows","el","setFiltersJSON","setDirectoriesData","setIsOpenVacancyPopup","setVacancyToArchive","setVacancyToDelete","setIsInfoPopupOpen","setVacancyToEdit","setVacancies","setIsLoading","setIsOpenFoundJobPopup","setStudentToEdit","resetUpdateStatus","resetUpdateStudentStatus","setDraftPopupState","setDraftFormData","clearPatchError","setHeader","getVacanciesList","getVacanciesStatistic","stats","vacancy_count","dynamicValue","uuidv4","referral","dynamic_referral","subtitle","repeated","dynamic_repeated","sourcing","dynamic_sourcing","employed","vacancies_closed","dynamic_vacancies_closed","deleteVacancy","getInfo","tableData","headerData","getStudentProfile","patchVacancyInfo","postDraftVacancy","companiesPageSlice","companies","selectedCompanyVacancies","selectedCompany","updateCompanyStatus","companiesStatuses","selectedCompanyFullInfo","employedStudentList","coursesWithCohorts","isOpenNewEditCompanyModal","companiesRowsCount","infoPopupTitle","infoPopupSubtitle","infoPopupButtonTitle","infoPopupType","deleteNetworkError","isOpenAcceleratePopup","setIsOpenAcceleratePopup","newStudentList","clearDeleteError","openInfoPopup","buttonTitle","closeInfoPopup","openNewEditCompanyModal","closeNewEditCompanyModal","setSaveFilters","setLockUpdate","setSelectedCompany","updateCompanyInList","newCompanies","companyIndex","company","setSelectedCompanyFullInfo","resetSelectedCompanyFullInfo","resetDataGridInfo","list","workshopProjectsListPageSlice","projectToEdit","projects","projectToClose","projectToDraft","deleteStatus","projectStudents","projectTeam","projectStudentsRowsCount","projectTeamRowsCount","createProject","unshift","setProjectToEdit","resetDeleteStatus","setProjectToClose","setProjectToDraft","getProjectsList","patchProjectStatus","projectId","newProjectsState","editedIndex","p","find","patchProjectInfo","fieldName","fieldValue","editedProject","deleteProject","editedProjectIndex","getProjectStudents","getProjectTeam","patchTeamStatus","statisticsMetricsSlice","isHidden","changeStatisticsMetricsState","currentTab","isLockNextButton","selectedProjectType","teamItems","tabPC2Values","tabPC3Values","tabPC4Values","selectedCustomerType","selectedFaculties","customer_comment","createStatus","projectCreationSlice","resetState","resetCreateStatus","setCustomerType","setProjectsValues","values","setIsLockNextButton","setProjectType","setNextTab","setPrevTab","changeActiveStatus","newTeamItems","itemIndex","increaseTeamItemCounter","decreaseTeamItemCounter","foundedItem","selectedAchievement","image","message","open","isSuccess","allAchievements","commonAchievements","preaccelerationAchievements","accelerationAchievements","testPeriodAchievements","communityAchievements","successAchievements","failedAchievements","filteredAllAchievements","filteredCommonAchievements","filteredPreaccelerationAchievements","filteredAccelerationAchievements","filteredTestPeriodAchievements","filteredCommunityAchievements","achievementsSlice","openActiveAchievement","closeActiveAchievement","filterAchievements","resetAchievements","achievementGroups","forEach","group","required_statuses","stages","stage","uuid","v4","achievement","is_hidden","medal","is_success","success_image","todo_image","condition_text","currentProgress","current_progress","maxProgress","success_condition","includes","responses","sources","cardsToRefreshPositions","draggingStatus","responseId","oldStatus","newStatus","responseDate","searchQuery","diarySlice","setSearchQuery","addToQueue","statusData","removeFromQueue","card","setResponses","updateResponseStatus","status_id","response_date","cancelDragging","finishDragging","getResponses","getCurrencies","getSources","createResponse","patchResponse","moveCards","deleteResponse","managers","workFormats","employments","formData","partnersFormSlice","setFormData","setCurrentTab","resetPartnersForm","createPartnerForm","notification","funnelStats","eventsStats","metricsSlice","setNotificated","is_notificated","resetMetrics","getNotifications","getStats","all_stats","week_stats","studentProjectsSlice","studentsProjects","charityProjects","projectToView","isSuccessResponse","resetSuccessResponseStatus","setProjectToView","setCharityProjectToViewed","newProjects","setStudentProjectToViewed","getProjects","onboardingSlice","baseData","authMiddleware","getState","startsWith","authState","auth","stateToSave","isLoggedIn","role","profile","localStorage","setItem","JSON","stringify","hideMetrics","getItem","removeItem","studentVacanciesState","studentVacancies","showAchievementsNotifications","persistConfig","key","storage","blacklist","persistCompanyPageConfig","persistStudentVacanciesPageConfig","persistProjectManagerPageConfig","persistStudentsProjectsPageConfig","rootReducer","combineReducers","app","appSlice","reducer","authSlice","onboarding","vacanciesPage","companiesPage","persistReducer","metrics","diary","ws","statisticsMetrics","hrNotifications","partnersForm","projectCreationPage","workshopProjectsListPage","studentsWorkshop","persistedReducer","loadedAuthState","serialisedState","parse","loadFromLocalStorage","padding","placeItems","backgroundSize","backgroundRepeat","backgroundImage","rootSigned","background","rootBlack","useUpdateStudentStatus","request","getStatus","enqueueSnackbar","info","options","Date","getTime","Math","random","autoHideDuration","setTimeoutId","setTimeout","STATUS_CHECK_PERIOD","withClearCache","Component","props","useState","isLatestBuildDate","setIsLatestBuildDate","useEffect","fetch","then","json","meta","latestDate","currentDate","momLatestDateTime","moment","momCurrentDateTime","isAfter","buildDateGreaterThan","buildDate","packageJson","refreshCacheAndReload","caches","keys","names","reload","Fragment","OnboardingPage","loadable","fallback","OnboardingFormPersonal","OnboardingFormExperience","OnboardingFormProjects","OnboardingFormResume","OnboardingFormContacts","LoginPage","RegisterPage","ResetPassword","DiaryPage","FeedPage","MetricsPage","VacanciesPage","WorkshopPage","VacancyViewPage","ApplicationsPage","StudentsListPage","StudentsListPageNew","StudentsDiaryPage","ConsultantFeedPage","ConsultantMetricsPage","CohortPage","LandingPage","VacanciesListPage","TestPage","ContactsPage","StatisticsPage","CompaniesListPage","AboutCompanyPage","AboutVacancyPage","ConsultantExportPage","HRExportPage","PartnersFormPage","PartnersFormSuccessPage","ProjectCreationPage","AboutProjectPage","WorkshopProjectsListPage","WorkshopViewPage","ServerError404Page","ServerError500Page","AuthLayout","PageLayout","MainLayout","DiaryLayout","ProjectCreationLayout","PartnersLayout","RequireUserAuth","RequireConsultantAuth","RequireVacancyAuth","SwiperCore","Pagination","ClearCacheComponent","useAppSelector","store","timeoutId","themeOptions","useMemo","createTheme","palette","theme","typography","overrides","MuiButton","minHeight","button","primary","primaryTextColor","primaryHover","textPrimary","snack","setSnack","first_name","clearTimeout","clearTimeoutId","ThemeProvider","path","element","to","NoCacheApp","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","WithYandexMetrics","children","counterId","REACT_APP_YANDEX_METRICS_COUNTER","useLocation","ym","defer","clickmap","trackLinks","accurateTrackBounce","webvisor","triggerEvent","pathname","Helmet","configureStore","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","concat","thunk","socket","wsUrl","token","WebSocket","close","onopen","onerror","onmessage","event","parsedData","success","notifications_count","send","success_id","onclose","preloadedState","persistor","persistStore","REACT_APP_SENTRY_PROJECT","REACT_APP_SENTRY_RELEASE","Sentry","dsn","integrations","BrowserTracing","release","environment","debug","beforeSend","hint","exception","eventId","event_id","tracesSampleRate","ignoreErrors","ReactDOM","render","StrictMode","document","getElementById","API_HR_PART_VACANCY_ENDPOINT","API_HR_PART_STATISTIC_ENDPOINT","API_HR_PART_HR_SOURCES_ENDPOINT","response_sources","API_HR_PART_HR_PROFILES_ENDPOINT","response_profiles","sourcesData","profilesData","profilesItems","last_name","sourcesItems","profiles","API_HR_PART_DRAFT_VACANCY_ENDPOINT","search","API_HR_PART_VACANCY_INFO_ENDPOINT","header_response","projectsJSONArray","project_manager","scope","customer","logo_url","project_contacts","link","published_at","closed_at","members_count","open_positions_count","faculty","projects_statuses","projects_types","project_student_statuses","project_team_statuses","projects_student_statuses","projects_team_statuses","contacts","created_at","timezone_delta","pet_project_experience_type","pet_project_spend_time","min","max","console","log","signIn","signUp","signOut","API_SIGN_OUT_ENDPOINT","resetPassword","createPassword","API_CREATE_NEW_PASSWORD_ENDPOINT","getProfile","API_USER_PROFILE_ENDPOINT","postOnboarding","API_PROFILE_ENDPOINT","API_USER_STATUS_ENDPOINT","API_PARTNER_DIRECTORY_ENDPOINT","qs","arrayFormat","getParams","modifiedParams","city","append","dogovor","samo","ip","contract","gph","office","remote","hybrid","dollar","euro","pound","ruble","shekel","tenge","new","is_showed","toString","requestParams","API_HR_PART_VACANCY_STUDENT_ENDPOINT","API_STUDENT_EXTERNAL_VACANCY","API_HR_PART_ABOUT_VACANCY_STUDENT_ENDPOINT","API_PARTNER_VACANCY_RESPONSE_ENDPOINT","API_VACANCY_RESPONSE_ENDPOINT","external_vacancy","API_VACANCIES_ENDPOINT","API_CURRENCY_DIRECTORY_ENDPOINT","API_SOURCE_DIRECTORY_ENDPOINT","API_VACANCY_BY_ID_ENDPOINT","requestData","card_position","API_HR_SHOWED_NOTIFICATIONS","API_HR_NOT_SHOWED_NOTIFICATIONS","API_HR_ID_NOTIFICATION","API_HR_ALL_NOTIFICATIONS","API_HR_DELETE_SHOWED_NOTIFICATIONS","useDispatch","useSelector","initialRequestInfoState","signInRequest","signUpRequest","signOutRequest","resetPassRequest","createPassRequest","getProfileRequest","postOnboardingRequest","getStatusRequest","setRole","setUnlogged","setProfile","clearRequestProfile","setVacation","detail","toLowerCase","fontFamily","join","h1","fontSize","lineHeight","h2","h3","subtitle1","body1","body2","fontWeight","caption1","caption2","text","secondary","default","API_STATS_ENDPOINT","website","project_info","responsibilities","circs","mandatory_requirements","optional_requirements","selection_stages","project_url","customer_logo","small_cover","big_cover","advice","PartnersFormConstants","API_MANAGERS","API_SCOPE","API_TYPE","API_SIZE","API_WORKFORMAT","API_EMPLOYMENT","API_CREATE","responseManager","responseScope","responseType","responseSize","responseWorkFormat","responseEmployment","managersData","m","typesData","scopeData","sizeData","workFormatData","employmentData","achievementNotifications","closeSnackbar","removeSnackbar","dismissAll","dismissed","PROJECT_NAME","PROJECT_START_DATE","startDayValue","setDate","getDate","PICKERS_START_DATE","PASSWORD_REG_EXP","NAME_FIELDS_REG_EXP","OTHER_TEXT_FIELDS_REG_EXP","TELEGRAM_REG_EXP","INSTITUTION_TEXT_FIELDS_REG_EXP","NAME_FIELDS_TIP","OTHER_TEXT_FIELDS_TIP","INSTITUTION_TEXT_FIELDS_TIP","URL_REG_EXP","CONSULTANT_ROLES","VACANCY_MANAGER_ROLES","USER_ROLES","WORKSHOP_MANAGER_ROLES","API_CONSULTANT_DESCRIPTION_ENDPOINT","API_CONSULTATION_ENDPOINT","API_ADVICE_ENDPOINT","API_INTERVIEWS_ENDPOINT","API_FOUND_JOB_ENDPOINT","API_STAFF_FOUND_JOB_ENDPOINT","API_HOLIDAYS_ENDPOINT","API_SET_HOLIDAYS_ENDPOINT","API_HOLIDAYS_COUNTER_ENDPOINT","API_REPORTS_ENDPOINT","API_REPORT_BY_ID_ENDPOINT","API_REPORTS_FEED_ENDPOINT","API_USER_REPORTS_ENDPOINT","API_RESPONSE_CONTACTS_ENDPOINT","API_VACANCIES_CONTACTS_ENDPOINT","API_APPLICATIONS_ENDPOINT","API_APPLICATION_BY_ID_ENDPOINT","API_STUDENTS_LIST_ENDPOINT","API_APPLICATION_GET_FILTERS","API_GET_WEEK_STATS","API_APPLICATIONS_CSV","API_STUDENTS_CSV","API_FEED_CSV","API_FEED_SUMMARY_CSV","API_COHORT_GET_FILTERS_ENDPOINT","API_COHORT_ENDPOINT","API_COHORT_BY_ID_ENDPOINT","API_LOCATION_DIRECTORY_ENDPOINT","API_COMPANY_DIRECTORY_ENDPOINT","API_COMPANY_DIRECTORY_NOT_STUDENT_ENDPOINT","API_COMPANY_SEARCH_ENDPOINT","API_HR_PART_EXPORT_INFO_ENDPOINT","API_GET_TERM_OF_USE","API_POST_TERM_OF_USE","REG_PAGE_DESCRIPTION","REG_FORM_EMAIL_PLACEHOLDER","REG_FORM_PASS_PLACEHOLDER","REG_FORM_PASS_CONFIRM_PLACEHOLDER","REG_FORM_EMPTY_EMAIL_ERROR","REG_FORM_MIN_SYMBOLS","REG_FORM_MAX_SYMBOLS","REG_FORM_MINMAX_SYMBOLS_ERROR","REG_FORM_BAD_EMAIL_ERROR","REG_FORM_BAD_PASS_ERROR","REG_FORM_CONFIRM_PASS_ERROR","REG_FORM_POPUP_BUTTON","REG_FORM_POPUP_CONFIRM_REGISTRATION","LOG_PAGE_DESCRIPTION","LOG_FORM_EMPTY_PASSWORD_ERROR","LOG_FORM_EMPTY_EMAIL_ERROR","LOG_FORM_BAD_EMAIL_ERROR","LOG_FORM_EMAIL_PLACEHOLDER","LOG_FORM_PASS_PLACEHOLDER","EXIT_POPUP_TITLE","EXIT_POPUP_SUBTITLE","EXIT_POPUP_CLOSE_BUTTON","EXIT_POPUP_EXIT_BUTTON","CREATE_COHORT_NUMBER_ERROR","CREATE_COHORT_NUMBER_REQUIRED_ERROR","CREATE_COHORT_COURSE_REQUIRED_ERROR","CREATE_COHORT_INFORMATION_POPUP_TITLE","CREATE_COHORT_INFORMATION_POPUP_SUBTITLE","CREATE_COHORT_INFORMATION_POPUP_BUTTON_TEXT","TEMP_STATUSES","priority","COLORS","ELLIPSE_GREEN_COLORS","ELLIPSE_ORANGE_COLORS","ELLIPSE_ORCHID_COLORS","ELLIPSE_BLUE_COLORS","FILE_SIZE","SUPPORTED_FORMATS","LOGO_SUPPORTED_FORMATS_VALIDATION","LOGO_SUPPORTED_FORMATS","MAX_COMMENT_SYMBOLS_FOUND_JOB_AND_WEEK_REPORT","MIN_COMMENT_SYMBOLS_FOUND_JOB_AND_WEEK_REPORT","MIN_TEXT_FIELD_SYMBOLS","MAX_TEXT_FIELD_SYMBOLS","EXIT_TIMER","RESPONSE_WORK_REGEXP","RESPONSE_WORK_TIP","RESPONSE_TEXT_FIELDS_MIN_SYMBOLS","RESPONSE_TEXT_FIELD_MAX_SYMBOLS","RESPONSE_TEXT_FIELD_MINMAX_TIP","RESPONSE_COMMENT_MAX_SYMBOLS","RESPONSE_COMMENT_MAX_SYMBOLS_TIP","MAX_BIRTHDAY_DATE_ERROR","MAX_PORTFOLIO_SIZE","MAX_PORTFOLIO_SIZE_TIP","PORTFOLIO_SUPPORTED_FORMATS","PORTFOLIO_LETTER_SUPPORTED_FORMATS","PORTFOLIO_SUPPORTED_FORMATS_TIP","PORTFOLIO_COUNT_TIP","number","PORTFOLIO_COUNT_EXTRA_TIP","TEXT_REGEX","TEXT_REGEX_TIP","INTEGER_REGEX","REGISTER_WEAK_NUMBER_PASSWORD_ERROR","REGISTER_WEAK_PASSWORD_ERROR","REGISTER_SHORT_PASSWORD_ERROR","REGISTER_PRIVATE_INFO_ERROR","REGISTER_UNIQUE_MAIL","REGISTER_UNIQUE_MAIL_FORM_TEXT","REGISTER_INVALID_MAIL","AUTH_ACCOUNT_NOT_FOUND_ERROR","NOT_EQUAL_PASSWORD_ERROR","LOGIN_ENTER_ERROR","FORGOT_PASSWORD_ERROR","FORGOT_PASSWORD_ERROR_FORM_TEXT","PASSWORD_LIKE_EMAIL_ERROR","PASSWORD_LIKE_EMAIL_ERROR_FORM_TEXT","VACATION_THIRD_PAD_TEXTFIELD_MIN_SYMBOLS","VACATION_THIRD_PAD_SELECTION_STAGE_FIELD_MIN_SYMBOLS","VACATION_THIRD_PAD_ABOUT_COMPANY_MAX_SYMBOLS","VACATION_THIRD_PAD_TEXTFIELD_MAX_SYMBOLS","VACATION_THIRD_PAD_SELECTION_STAGE_MINMAX_TIPS","VACATION_THIRD_PAD_ABOUT_COMPANY_MINMAX_TIPS","VACATION_THIRD_PAD_TEXTFIELD_MINMAX_TIPS","VACATION_WITHOUT_MIN_MINMAX_TIPS","ACCELERATION_IN_POPUP_DATA","datePickerText","ACCELERATION_OUT_POPUP_DATA","PHONE_REG_EXP","API_SEARCH_RESPONSES","API_CONTACTS_SEVERAL_ENDPOINT","API_CONTACTS_ENDPOINT","API_CONTACTS_BY_ID_ENDPOINT","ONLY_SPACES_REGEXP","COVERS_EXAMPLE_LINK","API_SEARCH_COURSES","API_CONSULTANTS_STUDENT_STATISTICS","API_COMPANY","RUSSIAN_URL_REGEX","API_VACANCY_SOURCE","API_VACANCIES_EXPORT","API_COMPANIES_EXPORT"],"mappings":"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","file":"static/js/main.a66f8eec.chunk.js","sourcesContent":["import axios from 'axios'\nimport {\n  API_TOKEN_REFRESH_ENDPOINT,\n  API_SIGN_IN_ENDPOINT,\n  API_SIGN_UP_ENDPOINT,\n  API_PASSWORD_RECOVERY_ENDPOINT,\n} from '../../utils/constants'\n\nconst instance = axios.create({\n  baseURL: process.env.REACT_APP_API,\n  headers: {\n    'Content-Type': 'application/json',\n    Accept: 'application/json',\n  },\n  withCredentials: true,\n})\n\ninstance.interceptors.response.use(\n  (res) => res,\n  async (err) => {\n    const originalConfig = err.config\n    if (originalConfig.url === API_TOKEN_REFRESH_ENDPOINT && err.response.status === 401) return Promise.reject(err)\n\n    if (\n      originalConfig.url !== API_SIGN_IN_ENDPOINT &&\n      originalConfig.url !== API_SIGN_UP_ENDPOINT &&\n      originalConfig.url !== API_PASSWORD_RECOVERY_ENDPOINT &&\n      err.response\n    ) {\n      // eslint-disable-next-line no-underscore-dangle\n      if (err.response.status === 401 && !originalConfig.retry) {\n        originalConfig.retry = true\n\n        try {\n          await instance.post(API_TOKEN_REFRESH_ENDPOINT)\n          if (originalConfig.data) {\n            const config = { ...originalConfig, data: originalConfig.data }\n            return instance(config)\n          }\n          return instance(originalConfig)\n        } catch (error) {\n          return Promise.reject(error)\n        }\n      }\n    }\n    // Закомменчено из-за 404 в в вакансиях (когда с задержкой обновляются страницы пагинации)\n    // if (err?.response?.status === 404) {\n    //   window.location.href = '/404'\n    // }\n    if (err?.response?.status === 500 && process.env.NODE_ENV !== 'development') {\n      window.location.href = '/500'\n    }\n\n    return Promise.reject(err)\n  },\n)\n\ninstance.interceptors.response.use(\n  (res) => res,\n  async (err) => {\n    const originalConfig = err.config\n    if (originalConfig.url === API_TOKEN_REFRESH_ENDPOINT && err.response.status === 401) return Promise.reject(err)\n\n    if (\n      originalConfig.url !== API_SIGN_IN_ENDPOINT &&\n      originalConfig.url !== API_SIGN_UP_ENDPOINT &&\n      originalConfig.url !== API_PASSWORD_RECOVERY_ENDPOINT &&\n      err.response\n    ) {\n      // eslint-disable-next-line no-underscore-dangle\n      if (err.response.status === 401 && !originalConfig.retry) {\n        originalConfig.retry = true\n\n        try {\n          await instance.post(API_TOKEN_REFRESH_ENDPOINT)\n          if (originalConfig.data) {\n            const config = { ...originalConfig, data: originalConfig.data }\n            return instance(config)\n          }\n          return instance(originalConfig)\n        } catch (error) {\n          return Promise.reject(error)\n        }\n      }\n    }\n\n    // Закомменчено из-за 404 в в вакансиях (когда с задержкой обновляются страницы пагинации)\n    // if (err?.response?.status === 404) {\n    //   window.location.href = '/404'\n    // }\n    if (err?.response?.status === 500 && process.env.NODE_ENV !== 'development') {\n      window.location.href = '/500'\n    }\n\n    return Promise.reject(err)\n  },\n)\n\nexport default instance\n","import { createAsyncThunk } from '@reduxjs/toolkit'\nimport { AxiosError } from 'axios'\nimport { API_ONBOARDING_DIRECTORY_ENDPOINT } from '../../utils/constants'\nimport api from './settings'\n\nexport const getOnboardingBaseData = createAsyncThunk(\n  'onboarding/getOnboardingBaseData',\n  async (_: void, { rejectWithValue }) => {\n    try {\n      const response = await api.get(API_ONBOARDING_DIRECTORY_ENDPOINT)\n      return response.data\n    } catch (error) {\n      const typedError = error as AxiosError\n      return rejectWithValue(typedError?.response?.data)\n    }\n  },\n)\n","import { createSlice } from '@reduxjs/toolkit'\nimport { IAPIError, IRequestInfo, TApiReference } from '../types/global-types'\nimport {\n  createVacancyResponse,\n  getExternalVacancies,\n  getExternalVacancy,\n  getPartnersDirectories,\n  getPartnersVacancies,\n  getPartnersVacancy,\n  postPartnersVacancyResponse,\n} from '../axios/student-vacancies'\nimport {\n  IStudentVacanciesDirectory,\n  IStudentVacancy,\n  TStudentVacancyRequestParams,\n} from '../types/student-vacancies/student-vacancies-types'\n\ninterface IPartnersState extends IRequestInfo {\n  directories: IStudentVacanciesDirectory\n  vacancies: IStudentVacancy[]\n  vacancyPage: string | null | undefined\n  externalVacancies: IStudentVacancy[]\n  externalPage: string | null | undefined\n  selectedVacancy: IStudentVacancy | null\n  isJobApplicationModalOpen: boolean\n  achievements: TApiReference[]\n  isOpenVacancyPopup: boolean\n  isOpenPartnersVacancyPopup: boolean\n  selectedFullVacancy: IStudentVacancy | null\n  isNoDetails: boolean\n  filteredVacancies: IStudentVacancy[]\n  isExternalLoading: boolean\n  isVacancyLoading: boolean\n  isLockUpdate: boolean\n  // filters: TStudentVacancyRequestParams\n  filters: any\n}\n\nexport const initialState: IPartnersState = {\n  status: 'idle',\n  isError: false,\n  errorInfo: null,\n  directories: {\n    courses: [],\n    currencies: [],\n    jobApplicationItems: [],\n    employmentItems: [],\n    workFormatItems: [],\n  },\n  vacancies: [],\n  vacancyPage: undefined,\n  externalVacancies: [],\n  externalPage: undefined,\n  selectedVacancy: null,\n  isJobApplicationModalOpen: false,\n  achievements: [],\n  isOpenVacancyPopup: false,\n  isOpenPartnersVacancyPopup: false,\n  selectedFullVacancy: null,\n  // Два стейта под рендер вакансий после фильтра\n  isNoDetails: false,\n  filteredVacancies: [],\n  isExternalLoading: false,\n  isVacancyLoading: false,\n  isLockUpdate: true,\n  filters: null,\n}\n\nconst studentVacanciesSlice = createSlice({\n  name: 'partners',\n  initialState,\n  reducers: {\n    saveFilters(state, action) {\n      state.filters = action.payload\n    },\n    setIsLockUpdate(state, action) {\n      state.isLockUpdate = action.payload\n    },\n    setViewedExternal(state, action) {\n      // Обновить состояние просмотра, если оно есть\n      // надо обновить стейт is_viewed в просмотренной вакансии\n      const index = state.externalVacancies.findIndex((vacancy) => vacancy?.id === action.payload)\n      if (!state.externalVacancies[index].is_viewed) state.externalVacancies[index].is_viewed = true\n    },\n    setViewedPartners(state, action) {\n      const index = state.vacancies.findIndex((vacancy) => vacancy?.id === action.payload)\n      if (!state.vacancies[index].is_viewed) state.vacancies[index].is_viewed = true\n    },\n    openJobApplicationModal(state) {\n      state.isJobApplicationModalOpen = true\n    },\n    closeJobApplicationModal(state) {\n      state.isJobApplicationModalOpen = false\n    },\n    openVacancyPopup(state) {\n      state.isOpenVacancyPopup = true\n    },\n    closeVacancyPopup(state) {\n      state.isOpenVacancyPopup = false\n      // надо обновить стейт is_viewed в просмотренной вакансии\n      const index = state.externalVacancies.findIndex((vacancy) => vacancy?.id === state.selectedFullVacancy?.id)\n      if (!state.externalVacancies[index].is_viewed) state.externalVacancies[index].is_viewed = true\n      state.selectedFullVacancy = null\n      state.selectedVacancy = null\n    },\n    openPartnersVacancyPopup(state) {\n      state.isOpenPartnersVacancyPopup = true\n    },\n    closePartnersVacancyPopup(state) {\n      state.isOpenPartnersVacancyPopup = false\n      // надо обновить стейт is_viewed в просмотренной вакансии\n      const index = state.vacancies.findIndex((vacancy) => vacancy?.id === state.selectedFullVacancy?.id)\n      if (!state.vacancies[index].is_viewed) state.vacancies[index].is_viewed = true\n      // Закомментил, потому что иначе не работает создание отклика и возвращение в вакансию\n      // state.selectedFullVacancy = null\n      // state.selectedVacancy = null\n    },\n    selectVacancy(state, action) {\n      state.selectedVacancy = action.payload\n    },\n    resetPartnersAchievements(state) {\n      state.achievements = []\n    },\n    resetPage(state) {\n      state.externalPage = undefined\n      state.vacancyPage = undefined\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      // Get partners directories\n      .addCase(getPartnersDirectories.pending, (state) => {\n        state.status = 'pending'\n        state.isError = false\n        state.errorInfo = null\n      })\n      .addCase(getPartnersDirectories.fulfilled, (state, action) => {\n        const rawData = action.payload\n        state.status = 'succeeded'\n        state.directories.courses = rawData.courses\n        state.directories.currencies = rawData?.currencies?.map((currency: TApiReference) => ({\n          id: currency.id,\n          name: currency.name,\n          icon: currency.label,\n        }))\n        state.directories.employmentItems = rawData?.employment?.map((e: TApiReference) => ({ ...e, name: e?.value }))\n        state.directories.workFormatItems = rawData?.work_format?.map((w: TApiReference) => ({ ...w, name: w?.value }))\n        state.directories.jobApplicationItems = rawData?.design_formats?.map((d: TApiReference) => ({\n          ...d,\n          name: d?.value,\n        }))\n      })\n      .addCase(getPartnersDirectories.rejected, (state, action) => {\n        state.isError = true\n        state.errorInfo = action.payload as IAPIError\n        state.status = 'failed'\n      })\n\n      // Get partners vacancies\n      .addCase(getPartnersVacancies.pending, (state) => {\n        state.status = 'pending'\n        state.isError = false\n        state.errorInfo = null\n        state.isVacancyLoading = true\n      })\n      .addCase(getPartnersVacancies.fulfilled, (state, action) => {\n        state.status = 'succeeded'\n        const searchParams = new URLSearchParams(action.payload?.next)\n        const page = searchParams.get('page')\n        if (state.vacancyPage) {\n          state.vacancies.push(...action.payload?.results)\n        } else {\n          state.vacancies = action.payload?.results\n        }\n        state.vacancyPage = page\n        if (action.payload?.results?.length > 0 && !page) {\n          const [firstVacancy] = action.payload?.results\n          state.selectedVacancy = firstVacancy\n        }\n        state.isVacancyLoading = false\n      })\n      .addCase(getPartnersVacancies.rejected, (state, action) => {\n        state.isError = true\n        state.errorInfo = action.payload as IAPIError\n        state.status = 'failed'\n      })\n\n      // Get external vacancies\n      .addCase(getExternalVacancies.pending, (state) => {\n        state.status = 'pending'\n        state.isError = false\n        state.errorInfo = null\n        state.isExternalLoading = true\n      })\n      .addCase(getExternalVacancies.fulfilled, (state, action) => {\n        state.status = 'succeeded'\n        const searchParams = new URLSearchParams(action.payload?.next)\n        const page = searchParams.get('page')\n        if (state.externalPage) {\n          state.externalVacancies.push(...action.payload?.results)\n        } else {\n          state.externalVacancies = action.payload?.results\n        }\n        state.externalPage = page\n        state.isExternalLoading = false\n      })\n      .addCase(getExternalVacancies.rejected, (state, action) => {\n        state.isError = true\n        state.errorInfo = action.payload as IAPIError\n        state.status = 'failed'\n        state.isExternalLoading = false\n      })\n\n      // Get partners vacancy\n      .addCase(getPartnersVacancy.pending, (state) => {\n        state.status = 'pending'\n        state.isError = false\n        state.errorInfo = null\n      })\n      .addCase(getPartnersVacancy.fulfilled, (state, action) => {\n        state.status = 'succeeded'\n        state.selectedFullVacancy = action.payload\n        state.selectedVacancy = action.payload\n        // if (action.payload.length > 0) {\n        //   const [firstVacancy] = action.payload\n        //   state.selectedVacancy = firstVacancy\n        // }\n      })\n      .addCase(getPartnersVacancy.rejected, (state, action) => {\n        state.isError = true\n        state.errorInfo = action.payload as IAPIError\n        state.status = 'failed'\n      })\n\n      // Get partners vacancy\n      .addCase(getExternalVacancy.pending, (state) => {\n        state.status = 'pending'\n        state.isError = false\n        state.errorInfo = null\n      })\n      .addCase(getExternalVacancy.fulfilled, (state, action) => {\n        state.status = 'succeeded'\n        state.selectedFullVacancy = action.payload\n        state.selectedVacancy = action.payload\n        // if (action.payload.length > 0) {\n        //   const [firstVacancy] = action.payload\n        //   state.selectedVacancy = firstVacancy\n        // }\n      })\n      .addCase(getExternalVacancy.rejected, (state, action) => {\n        state.isError = true\n        state.errorInfo = action.payload as IAPIError\n        state.status = 'failed'\n      })\n\n      // Post partners vacancy response\n      .addCase(postPartnersVacancyResponse.pending, (state) => {\n        state.status = 'pending'\n        state.isError = false\n        state.errorInfo = null\n      })\n      .addCase(postPartnersVacancyResponse.fulfilled, (state, action) => {\n        state.status = 'succeeded'\n        const newVacancies = state.vacancies.map((v) => {\n          if (v.id === state.selectedVacancy?.id) return { ...v, is_accepted: true }\n          return v\n        })\n        state.achievements = action.payload.achievements\n        state.vacancies = newVacancies\n      })\n      .addCase(postPartnersVacancyResponse.rejected, (state, action) => {\n        state.isError = true\n        state.errorInfo = action.payload as IAPIError\n        state.status = 'failed'\n      })\n\n      // Post external vacancy response\n      .addCase(createVacancyResponse.pending, (state) => {\n        state.status = 'pending'\n        state.isError = false\n        state.errorInfo = null\n      })\n      .addCase(createVacancyResponse.fulfilled, (state, action) => {\n        state.status = 'succeeded'\n        // state.achievements = action.payload.achievements\n        state.externalVacancies = state.externalVacancies?.map((v) => {\n          if (v.id === state.selectedFullVacancy?.id) {\n            return { ...v, is_accepted: true }\n          }\n          return v\n        })\n      })\n      .addCase(createVacancyResponse.rejected, (state, action) => {\n        state.isError = true\n        state.errorInfo = action.payload as IAPIError\n        state.status = 'failed'\n      })\n  },\n})\n\nexport const {\n  openJobApplicationModal,\n  closeJobApplicationModal,\n  selectVacancy,\n  resetPartnersAchievements,\n  openVacancyPopup,\n  closeVacancyPopup,\n  openPartnersVacancyPopup,\n  closePartnersVacancyPopup,\n  resetPage,\n  setViewedExternal,\n  setViewedPartners,\n  setIsLockUpdate,\n  saveFilters,\n} = studentVacanciesSlice.actions\n\nexport default studentVacanciesSlice\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { IAPIError } from '../types/global-types'\nimport {\n  deleteAllShowedNotifications,\n  getNotShowedNotificationsList,\n  getShowedNotificationsList,\n  patchAllNotifications,\n  patchNotification,\n} from '../axios/hr-notifications'\nimport { TInitialState } from '../types/hr-notifications/hr-notifications'\n\nconst initialState: TInitialState = {\n  showedNotifications: [],\n  notShowedNotifications: [],\n  notificationsCount: 0,\n  isNetworkError: false,\n  networkError: null,\n  isLoading: false,\n  externalPage: undefined,\n}\n\nexport const hrNotificationsSlice = createSlice({\n  name: 'hr-notifications',\n  initialState,\n  reducers: {\n    changeNotificationsCountState: (state, action: PayloadAction<number>) => {\n      state.notificationsCount = action.payload\n    },\n    resetPages: (state) => {\n      state.externalPage = undefined\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      // get showed notifications\n      .addCase(getShowedNotificationsList.pending, (state) => {\n        state.isLoading = true\n        state.isNetworkError = false\n        state.networkError = null\n      })\n      .addCase(getShowedNotificationsList.fulfilled, (state, action) => {\n        state.isLoading = false\n        const searchParams = new URLSearchParams(action.payload?.next)\n        const page = searchParams.get('page')\n        if (state.externalPage) {\n          state.showedNotifications.push(...action.payload?.results)\n        } else {\n          state.showedNotifications = action.payload?.results\n        }\n        state.externalPage = page\n        // state.isExternalLoading = false\n      })\n      .addCase(getShowedNotificationsList.rejected, (state, action) => {\n        state.isLoading = false\n        state.networkError = action.payload as IAPIError\n        state.isNetworkError = true\n      })\n      // // get not showed notifications\n      .addCase(getNotShowedNotificationsList.pending, (state) => {\n        state.isLoading = true\n        state.isNetworkError = false\n        state.networkError = null\n      })\n      .addCase(getNotShowedNotificationsList.fulfilled, (state, action) => {\n        state.isLoading = false\n        // state.notShowedNotifications = action.payload.results\n        const searchParams = new URLSearchParams(action.payload?.next)\n        const page = searchParams.get('page')\n        if (state.externalPage) {\n          state.notShowedNotifications.push(...action.payload?.results)\n        } else {\n          state.notShowedNotifications = action.payload?.results\n        }\n        state.externalPage = page\n        // state.isExternalLoading = false\n      })\n      .addCase(getNotShowedNotificationsList.rejected, (state, action) => {\n        state.isLoading = false\n        state.networkError = action.payload as IAPIError\n        state.isNetworkError = true\n      })\n      // patch not showed notifications\n      .addCase(patchNotification.pending, (state) => {\n        state.isLoading = true\n        state.isNetworkError = false\n        state.networkError = null\n      })\n      .addCase(patchNotification.fulfilled, (state, action) => {\n        state.isLoading = false\n        state.showedNotifications.push(action.payload)\n        const newNotShowedNotifications = [...state.notShowedNotifications]\n        newNotShowedNotifications.splice(\n          newNotShowedNotifications.findIndex((item) => item.pk === action.payload.pk),\n          1,\n        )\n        state.notShowedNotifications = [...newNotShowedNotifications]\n      })\n      .addCase(patchNotification.rejected, (state, action) => {\n        state.isLoading = false\n        state.networkError = action.payload as IAPIError\n        state.isNetworkError = true\n      })\n      // patch all not showed notifications\n      .addCase(patchAllNotifications.pending, (state) => {\n        state.isLoading = true\n        state.isNetworkError = false\n        state.networkError = null\n      })\n      .addCase(patchAllNotifications.fulfilled, (state, action) => {\n        state.isLoading = false\n        state.showedNotifications.push(...state.notShowedNotifications)\n        state.notShowedNotifications = []\n      })\n      .addCase(patchAllNotifications.rejected, (state, action) => {\n        state.isLoading = false\n        state.networkError = action.payload as IAPIError\n        state.isNetworkError = true\n      })\n      // delete all showed notifications\n      .addCase(deleteAllShowedNotifications.pending, (state) => {\n        state.isLoading = true\n        state.isNetworkError = false\n        state.networkError = null\n      })\n      .addCase(deleteAllShowedNotifications.fulfilled, (state, action) => {\n        state.isLoading = false\n        state.showedNotifications = []\n      })\n      .addCase(deleteAllShowedNotifications.rejected, (state, action) => {\n        state.isLoading = false\n        state.networkError = action.payload as IAPIError\n        state.isNetworkError = true\n      })\n  },\n})\n\nexport const { changeNotificationsCountState, resetPages } = hrNotificationsSlice.actions\nexport default hrNotificationsSlice\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { useAppDispatch } from '../store/hooks'\n\ninterface IWebsocketState {\n  wsConnected: boolean\n  wsError: boolean\n}\n\nconst initialState = {\n  wsConnected: false,\n  wsError: false,\n} as IWebsocketState\n\nconst websocketSlice = createSlice({\n  name: 'ws',\n  initialState,\n  reducers: {\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    wsConnectionStart(state, action: PayloadAction<{ url: string; token?: string }>) {},\n\n    wsConnectionStop(state) {\n      state.wsConnected = false\n      state.wsError = false\n    },\n\n    wsConnectionSuccess(state) {\n      state.wsConnected = true\n      state.wsError = false\n    },\n\n    wsConnectionError(state) {\n      state.wsConnected = false\n      state.wsError = true\n    },\n\n    wsConnectionClosed(state) {\n      state.wsConnected = false\n      state.wsError = false\n    },\n  },\n})\n\nexport default websocketSlice\n\nexport const openSocket =\n  (url: string) =>\n  (dispatch = useAppDispatch()) =>\n    // TODO придумать\n    // dispatch(websocketSlice.actions.wsConnectionStart({ url: `${process.env.REACT_APP_WS}/ws/achievements` }))\n    dispatch(\n      // websocketSlice.actions.wsConnectionStart({ url: `${process.env.REACT_APP_WS}/ws/hr_vacancy/notifications` }),\n      websocketSlice.actions.wsConnectionStart({ url }),\n    )\n\nexport const closeSocket =\n  () =>\n  (dispatch = useAppDispatch()) => {\n    dispatch(websocketSlice.actions.wsConnectionStop())\n  }\n","import { createAsyncThunk } from '@reduxjs/toolkit'\nimport { AxiosError } from 'axios'\nimport { API_ACHIEVEMENTS_ENDPOINT } from '../../utils/constants'\nimport api from './settings'\n\nexport const getAchievements = createAsyncThunk(\n  'achievement/getAchievements',\n  async (id: string | undefined, { rejectWithValue }) => {\n    try {\n      let url = API_ACHIEVEMENTS_ENDPOINT\n      if (id) url += `?profile_id=${id}`\n      const response = await api.get(url)\n      return response.data\n    } catch (error) {\n      const typedError = error as AxiosError\n      return rejectWithValue(typedError?.response?.data)\n    }\n  },\n)\n","import { createAsyncThunk } from '@reduxjs/toolkit'\nimport { AxiosError } from 'axios'\nimport {\n  API_HR_PART_VACANCY_ENDPOINT,\n  API_HR_PART_DIRECTORY_ENDPOINT,\n  API_HR_PART_VACANCY_BY_ID_ENDPOINT,\n  API_STUDENT_BY_ID_ENDPOINT,\n  API_HR_PART_VACANCY_INFO_ENDPOINT,\n  API_HR_PART_STATISTIC_ENDPOINT,\n  API_HR_PART_HR_SOURCES_ENDPOINT,\n  API_HR_PART_HR_PROFILES_ENDPOINT,\n  API_HR_PART_DRAFT_VACANCY_ENDPOINT,\n} from '../../utils/constants'\nimport api from './settings'\nimport {\n  IDirectoriesResponse,\n  IHRVacancyHeader,\n  IParams,\n  IProfilesDirectoryResponse,\n  ISources,\n  ISourcesDirectoryResponse,\n  TGetVacanciesData,\n  TGetVacancyInfo,\n  TPatchData,\n  TPatchStudentData,\n} from '../types/vacacies-page-types/vacancies-page-types'\n\nexport const getDirectories = createAsyncThunk(\n  'projectCreationPage/getDirectories',\n  async (_: void, { rejectWithValue }) => {\n    try {\n      const project_types = [\n        {\n          id: 1,\n          type: 'Pet-проект',\n          comment:\n            'Проект, где заказчиком является студент. Помогаем со сбором команды, ревью проекта и доведением его до MVP',\n        },\n        {\n          id: 2,\n          type: 'Благотворительный проект',\n          comment:\n            'Проект, где заказчик является НКО или любая другая благотворительная организация, собираем команду под ТЗ',\n        },\n      ]\n      const team_items = [\n        {\n          id: 1,\n          title: 'IT-рекрутер',\n          isActive: false,\n          isMustHave: true,\n          teamImage: undefined,\n          count: 0,\n        },\n        {\n          id: 2,\n          title: 'Проектный менеджер',\n          isActive: false,\n          isMustHave: true,\n          teamImage: undefined,\n          count: 0,\n        },\n        {\n          id: 3,\n          title: 'Менеджер продукта',\n          isActive: false,\n          isMustHave: false,\n          teamImage: undefined,\n          count: 0,\n        },\n        {\n          id: 4,\n          title: 'Python разработчик',\n          isActive: false,\n          isMustHave: false,\n          teamImage: undefined,\n          count: 0,\n        },\n        {\n          id: 5,\n          title: 'C++ разработчик',\n          isActive: false,\n          isMustHave: false,\n          teamImage: undefined,\n          count: 0,\n        },\n        {\n          id: 6,\n          title: 'Go-разработчик',\n          isActive: false,\n          isMustHave: false,\n          teamImage: undefined,\n          count: 0,\n        },\n        {\n          id: 7,\n          title: 'Java разработчик',\n          isActive: false,\n          isMustHave: false,\n          teamImage: undefined,\n          count: 0,\n        },\n        {\n          id: 8,\n          title: 'DevOps',\n          isActive: false,\n          isMustHave: false,\n          teamImage: undefined,\n          count: 0,\n        },\n        {\n          id: 9,\n          title: 'Веб-разработчик',\n          isActive: false,\n          isMustHave: false,\n          teamImage: undefined,\n          count: 0,\n        },\n        {\n          id: 10,\n          title: 'React разработчик',\n          isActive: false,\n          isMustHave: false,\n          teamImage: undefined,\n          count: 0,\n        },\n        {\n          id: 11,\n          title: 'Дизайнер интерфейсов',\n          isActive: false,\n          isMustHave: false,\n          teamImage: undefined,\n          count: 0,\n        },\n        {\n          id: 12,\n          title: 'Графический дизайнер',\n          isActive: false,\n          isMustHave: false,\n          teamImage: undefined,\n          count: 0,\n        },\n        {\n          id: 13,\n          title: 'Дизайнер лендингов',\n          isActive: false,\n          isMustHave: false,\n          teamImage: undefined,\n          count: 0,\n        },\n        {\n          id: 14,\n          title: 'Продуктовый дизайнер',\n          isActive: false,\n          isMustHave: false,\n          teamImage: undefined,\n          count: 0,\n        },\n      ]\n      const project_spheres = [\n        {\n          id: 1,\n          name: 'Финтех',\n        },\n        {\n          id: 2,\n          name: 'Промышленность',\n        },\n        {\n          id: 3,\n          name: 'Игры',\n        },\n        {\n          id: 4,\n          name: 'Биотех',\n        },\n        {\n          id: 5,\n          name: 'Безопасность',\n        },\n        {\n          id: 6,\n          name: 'Ритейл',\n        },\n        {\n          id: 7,\n          name: 'Маркетинг',\n        },\n        {\n          id: 8,\n          name: 'Другое',\n        },\n      ]\n      const project_directions = [\n        {\n          id: 1,\n          name: 'Мобильное приложение',\n        },\n        {\n          id: 2,\n          name: 'Сайт/веб-приложение',\n        },\n        {\n          id: 3,\n          name: 'Программное обеспечение',\n        },\n        {\n          id: 4,\n          name: 'Чат-бот',\n        },\n        {\n          id: 5,\n          name: 'Другое',\n        },\n      ]\n      const customer_types = [\n        {\n          type: 36,\n          db_name: 'StudentProfile',\n        },\n        {\n          type: 17,\n          db_name: 'Company',\n        },\n      ]\n\n      return { project_types, team_items, project_spheres, project_directions, customer_types }\n    } catch (e) {\n      const typedError = e as AxiosError\n      return rejectWithValue(typedError?.response)\n    }\n  },\n)\n","import { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    width: '100%',\n    height: '100%',\n    backgroundColor: 'rgba(9, 9, 9, 0.01)',\n    position: 'absolute',\n    justifyContent: 'center',\n    alignItems: 'center',\n    disabled: true,\n    display: 'flex',\n    transition: 'visibility 0.4s ease-in-out, opacity 0.4s linear',\n    zIndex: 100,\n  },\n}))\n\nexport default useStyles\n","import * as React from 'react'\nimport { MoonLoader } from 'react-spinners'\nimport useStyles from './LoadingOverlay.style'\n\nfunction LoadingOverlay({ loading = true, style = {} }) {\n  const classes = useStyles()\n  return (\n    <section className={classes.root} style={style}>\n      <MoonLoader color=\"#1d6bf3\" loading={loading} size={80} />\n    </section>\n  )\n}\n\nexport default React.memo(LoadingOverlay)\n","import { createAsyncThunk } from '@reduxjs/toolkit'\nimport { AxiosError } from 'axios'\nimport {\n  API_HR_PART_DIRECTORY_ENDPOINT,\n  API_COMPANIES_LIST,\n  API_COMPANIES_STATUSES,\n  API_COMPANY_EMPLOYED_STUDENT,\n  API_COMPANY_VACANCIES,\n  API_COMPANY_ID,\n  API_GET_FILTERS_STUDENTS,\n  API_STUDENT_BY_ID_ENDPOINT,\n  API_HR_PART_VACANCY_BY_ID_ENDPOINT,\n  API_HR_PART_COMPANY_SIZE_ENDPOINT,\n  API_HR_PART_COMPANY_SCOPE_ENDPOINT,\n  API_HR_PART_COMPANY_TYPE_ENDPOINT,\n  API_COMPANY_DRAFT_ENDPOINT,\n} from '../../utils/constants'\nimport api from './settings'\nimport {\n  ICompanyStatus,\n  IDirectoriesResponse,\n  TGetCompaniesData,\n  TGetCompanyVacancies,\n  TPatchData,\n  TPatchInfoData,\n  TPatchStudentData,\n  TPatchVacancyData,\n} from '../types/companies-page-types/companies-page-types'\n\nexport const getCompaniesList = createAsyncThunk(\n  'companies-page/getCompaniesList',\n  async (data: TGetCompaniesData, { rejectWithValue }) => {\n    try {\n      const { paramsSerializer } = data\n      const response = await api.get(API_COMPANIES_LIST, {\n        params: { ...data.hook.filters },\n        paramsSerializer,\n      })\n      // return Promise.resolve(response.data)\n      return response?.data\n    } catch (e) {\n      const err = e as AxiosError\n      return rejectWithValue(err?.response)\n    }\n  },\n)\n\nexport const getCompanyInfo = createAsyncThunk(\n  'companies-page/getCompanyInfo',\n  async (pk: number, { rejectWithValue }) => {\n    try {\n      const response = await api.get(API_COMPANY_ID(pk))\n      return response?.data\n    } catch (e) {\n      const err = e as AxiosError\n      return rejectWithValue(err?.response)\n    }\n  },\n)\n\nexport const deleteCompany = createAsyncThunk(\n  'companies-page/deleteCompany',\n  async (pk: number, { rejectWithValue }) => {\n    try {\n      const response = await api.delete(API_COMPANY_ID(pk))\n      return response?.data\n    } catch (e) {\n      const err = e as AxiosError\n      return rejectWithValue(err?.response)\n    }\n  },\n)\n\nexport const getCompanyVacanciesList = createAsyncThunk(\n  'companies-page/getCompanyVacanciesList',\n  async (data: TGetCompanyVacancies, { rejectWithValue }) => {\n    try {\n      const { paramsSerializer, id } = data\n      const response = await api.get(API_COMPANY_VACANCIES(id), {\n        params: { ...data.hook.filters, start_date: undefined, end_date: undefined },\n        paramsSerializer,\n      })\n      // return Promise.resolve(response.data)\n      return response?.data\n    } catch (e) {\n      const err = e as AxiosError\n      return rejectWithValue(err?.response)\n    }\n  },\n)\n\nexport const getCompanyEmployedStudentList = createAsyncThunk(\n  'companies-page/getCompanyEmployedStudentList',\n  async (data: TGetCompanyVacancies, { rejectWithValue }) => {\n    try {\n      const { paramsSerializer, id } = data\n      const response = await api.get(API_COMPANY_EMPLOYED_STUDENT(id), {\n        params: { ...data.hook.filters },\n        paramsSerializer,\n      })\n      // return Promise.resolve(response.data)\n      return response?.data\n    } catch (e) {\n      const err = e as AxiosError\n      return rejectWithValue(err?.response)\n    }\n  },\n)\n\nexport const getDirectories = createAsyncThunk(\n  'companies-page/getDirectories',\n  async (_: void, { rejectWithValue }) => {\n    try {\n      const response = await api.get(API_HR_PART_DIRECTORY_ENDPOINT)\n      const rawData: IDirectoriesResponse = response?.data\n      const courses = rawData?.courses\n      const statuses = rawData?.vacancies_status?.map((s) => ({ ...s, label: s?.value }))\n      const studentStatuses = rawData?.student_status?.map((s) => ({ ...s, label: s?.value }))\n      const currencies = rawData?.currencies?.map((currency) => ({\n        id: currency.id,\n        name: currency.name,\n        icon: currency.label,\n      }))\n      const employmentItems = rawData?.employment?.map((e) => ({ ...e, name: e?.value }))\n      const workFormatItems = rawData?.work_format?.map((w) => ({ ...w, name: w?.value }))\n      const jobApplicationItems = rawData?.design_formats?.map((d) => ({ ...d, name: d?.value }))\n      const experienceItems = rawData?.experience_types\n      const educationItems = rawData?.education_types\n      const vacanciesStatus = rawData?.vacancies_status?.map((s) => ({ ...s, label: s?.value }))\n      const sizes_response = await api.get(API_HR_PART_COMPANY_SIZE_ENDPOINT)\n      const types_response = await api.get(API_HR_PART_COMPANY_TYPE_ENDPOINT)\n      const scopes_response = await api.get(API_HR_PART_COMPANY_SCOPE_ENDPOINT)\n\n      return {\n        filters: {\n          courses,\n          // statuses,\n        },\n        directoriesData: {\n          courses,\n          statuses,\n          studentStatuses,\n          currencies,\n          employmentItems,\n          workFormatItems,\n          jobApplicationItems,\n          experienceItems,\n          educationItems,\n          vacanciesStatus,\n          sizes: sizes_response?.data?.map((s: { id: number; value: string }) => ({ ...s, name: s?.value })),\n          types: types_response?.data?.map((t: { id: number; value: string }) => ({ ...t, name: t?.value })),\n          scopes: scopes_response?.data?.map((s: { id: number; value: string }) => ({ ...s, name: s?.value })),\n        },\n      }\n    } catch (e) {\n      const typedError = e as AxiosError\n      return rejectWithValue(typedError?.response)\n    }\n  },\n)\n\nexport const getCohorts = createAsyncThunk('companies-page/getCohorts', async (_: void, { rejectWithValue }) => {\n  try {\n    const response = await api.get(API_GET_FILTERS_STUDENTS)\n    return response.data\n  } catch (e) {\n    const typedError = e as AxiosError\n    return rejectWithValue(typedError?.response)\n  }\n})\n\nexport const patchCompanyStatus = createAsyncThunk(\n  'companies-page/patchCompanyStatus',\n  async (data: TPatchData, { rejectWithValue }) => {\n    try {\n      const response = await api.patch(API_COMPANY_ID(data.companyId), {\n        status: data.status.status,\n      })\n      return {\n        updatedRow: response.data,\n      }\n    } catch (e) {\n      const typedError = e as AxiosError\n      return rejectWithValue(typedError?.response)\n    }\n  },\n)\n\nexport const patchVacancyStatus = createAsyncThunk(\n  'companies-page/patchVacancyStatus',\n  async (data: TPatchVacancyData, { rejectWithValue }) => {\n    try {\n      const response = await api.patch(API_HR_PART_VACANCY_BY_ID_ENDPOINT(data.vacancyId), {\n        vacancy_status: data.status.status,\n      })\n      return {\n        updatedRow: response.data,\n      }\n    } catch (e) {\n      const typedError = e as AxiosError\n      return rejectWithValue(typedError?.response)\n    }\n  },\n)\n\nexport const patchCompanyInfo = createAsyncThunk(\n  'companies-page/patchCompanyInfo',\n  async (data: TPatchInfoData, { rejectWithValue }) => {\n    try {\n      const { companyId } = data\n      const patchData = { ...data }\n      delete patchData.companyId\n      const response = await api.patch(API_COMPANY_ID(companyId), {\n        ...patchData,\n      })\n      return response.data\n    } catch (e) {\n      const typedError = e as AxiosError\n      return rejectWithValue(typedError?.response)\n    }\n  },\n)\n\nexport const patchStudentStatus = createAsyncThunk(\n  'companies-page/patchStudentStatus',\n  async (data: TPatchStudentData, { rejectWithValue }) => {\n    try {\n      const response = await api.patch(API_STUDENT_BY_ID_ENDPOINT(data.studentId), {\n        status: data.status.status,\n        modified_at: data?.modified_at,\n      })\n      return {\n        updatedRow: response.data,\n      }\n    } catch (e) {\n      const typedError = e as AxiosError\n      return rejectWithValue(typedError?.response)\n    }\n  },\n)\n\nexport const getCompaniesStatuses = createAsyncThunk(\n  'companies-page/getCompaniesStatuses',\n  async (_, { rejectWithValue }) => {\n    try {\n      const response = await api.get(API_COMPANIES_STATUSES)\n      return response?.data?.map((value: ICompanyStatus) => ({ ...value, label: value?.status, value: value?.status }))\n    } catch (e) {\n      const err = e as AxiosError\n      return rejectWithValue(err?.response)\n    }\n  },\n)\n\nexport const postDraftCompany = createAsyncThunk(\n  'companies-page/postDraftCompany',\n  async (data: any, { rejectWithValue }) => {\n    try {\n      const response = await api.post(API_COMPANY_DRAFT_ENDPOINT, data)\n      return response.data\n    } catch (e) {\n      const typedError = e as AxiosError\n      return rejectWithValue(typedError?.response)\n    }\n  },\n)\n","import { createSlice } from '@reduxjs/toolkit'\nimport { v4 as uuidv4 } from 'uuid'\nimport {\n  IDirectories,\n  IFilterJson,\n  IHRVacancyHeader,\n  IInitialState,\n  IStudentRawData,\n  TStudentRawArrayData,\n  TStudentRowArray,\n} from '../types/vacacies-page-types/vacancies-page-types'\nimport {\n  deleteVacancy,\n  getDirectories,\n  getInfo,\n  getStudentProfile,\n  getVacanciesList,\n  getVacanciesStatistic,\n  patchStudentStatus,\n  patchVacancyInfo,\n  patchVacancyStatus,\n  postDraftVacancy,\n} from '../axios/vacancies-page'\nimport { IAPIError } from '../types/global-types'\n\nconst getRows = (rawData: TStudentRawArrayData): TStudentRowArray => {\n  const result = []\n  const offeredStudents = rawData.filter((s) => s.job_found)\n  const otherStudents = rawData.filter((s) => !s.job_found)\n  const isOfferedStudents = offeredStudents.length > 0\n  const isOtherStudents = otherStudents.length > 0\n  if (isOfferedStudents)\n    result.push({ id: 'OFFERED', title: `Студенты с оффером на эту вакансию (${offeredStudents.length})` })\n  rawData.map((s) => (s.job_found ? result.push(s) : null))\n  if (isOtherStudents) result.push({ id: 'OTHER', title: `Остальные отклики (${otherStudents.length})` })\n  rawData.map((s) => (!s.job_found ? result.push(s) : null))\n  return result\n}\n\nexport const initialState: IInitialState = {\n  filtersJSON: {} as IFilterJson,\n  directoriesData: {} as IDirectories,\n  isOpenVacancyPopup: false,\n  vacancyToArchive: null,\n  vacancyToDelete: null,\n  isInfoPopupOpen: false,\n  vacancyToEdit: null,\n  vacancies: [],\n  statistic: [],\n  isLoading: false,\n  isOpenFoundJobPopup: false,\n  studentToEdit: null,\n  isNetworkError: false,\n  networkError: null,\n  patchNetworkError: null,\n  infoData: [],\n  rows: [],\n  updateStatus: '',\n  updateStudentStatus: false,\n  rowsCount: 0,\n  header: {} as IHRVacancyHeader,\n  isDraftPopupOpen: false,\n  draftFormData: null,\n  studentProfile: {},\n  isOpenVacancyAcceleratePopup: false,\n  isSuccessDeleteVacancy: false,\n}\n\nconst vacanciesPageSlice = createSlice({\n  name: 'vacancies-page',\n  initialState,\n  reducers: {\n    setIsSuccessDeleteVacancy(state, action) {\n      state.isSuccessDeleteVacancy = action.payload\n    },\n    setIsOpenVacancyAcceleratePopup(state, action) {\n      state.isOpenVacancyAcceleratePopup = action.payload\n    },\n    setUpdatedStudentStatus(state, action) {\n      const newInfoRows = [...state.infoData]\n      newInfoRows[newInfoRows?.findIndex((el) => el.id === state.studentToEdit?.id)].status.value = action.payload\n      state.rows = getRows(newInfoRows)\n      state.updateStatus = 'ok'\n      state.updateStudentStatus = true\n    },\n    setFiltersJSON(state, action) {\n      state.filtersJSON = action.payload\n    },\n    setDirectoriesData(state, action) {\n      state.directoriesData = action.payload\n    },\n    setIsOpenVacancyPopup(state, action) {\n      state.isOpenVacancyPopup = action.payload\n    },\n    setVacancyToArchive(state, action) {\n      state.vacancyToArchive = action.payload\n    },\n    setVacancyToDelete(state, action) {\n      state.vacancyToDelete = action.payload\n    },\n    setIsInfoPopupOpen(state, action) {\n      state.isInfoPopupOpen = action.payload\n    },\n    setVacancyToEdit(state, action) {\n      state.vacancyToEdit = action.payload\n    },\n    setVacancies(state, action) {\n      state.vacancies = action.payload\n    },\n    setIsLoading(state, action) {\n      state.isLoading = action.payload\n    },\n    setIsOpenFoundJobPopup(state, action) {\n      state.isOpenFoundJobPopup = action.payload\n    },\n    setStudentToEdit(state, action) {\n      state.studentToEdit = action.payload\n    },\n    resetUpdateStatus(state) {\n      state.updateStatus = ''\n    },\n    resetUpdateStudentStatus(state) {\n      state.updateStudentStatus = false\n    },\n    setDraftPopupState(state, action) {\n      state.isDraftPopupOpen = action.payload\n    },\n    setDraftFormData(state, action) {\n      state.draftFormData = action.payload\n    },\n    clearPatchError(state) {\n      state.networkError = null\n      state.patchNetworkError = null\n      state.isNetworkError = false\n    },\n    setHeader(state, action) {\n      state.header = action.payload\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      // get Vacancies\n      .addCase(getVacanciesList.pending, (state) => {\n        state.isLoading = true\n        state.isNetworkError = false\n        state.networkError = null\n      })\n      .addCase(getVacanciesList.fulfilled, (state, action) => {\n        state.isLoading = false\n        state.vacancies = action.payload.results\n        // if (action.payload.previous === null) {\n        //   state.vacancies = action.payload.results\n        // } else {\n        //   state.vacancies = state.vacancies.concat(...action.payload.results)\n        // }\n        state.rowsCount = action.payload.count\n      })\n      .addCase(getVacanciesList.rejected, (state, action) => {\n        state.isLoading = false\n        state.networkError = action.payload as IAPIError\n        state.isNetworkError = true\n      })\n\n      // get statistic\n      .addCase(getVacanciesStatistic.pending, (state) => {\n        state.isLoading = true\n        state.isNetworkError = false\n        state.networkError = null\n      })\n      .addCase(getVacanciesStatistic.fulfilled, (state, action) => {\n        state.isLoading = false\n        const stats = action.payload\n        state.statistic = [\n          {\n            title: 'Всего вакансий',\n            value: stats.vacancy_count,\n            dynamicValue: null,\n            id: uuidv4(),\n          },\n          {\n            title: '% Реферальности',\n            value: stats.referral,\n            dynamicValue: stats.dynamic_referral,\n            id: uuidv4(),\n          },\n          {\n            title: '% Вакансий',\n            subtitle: 'повторных',\n            value: stats.repeated,\n            dynamicValue: stats.dynamic_repeated,\n            id: uuidv4(),\n          },\n          {\n            title: '% Сорсинга',\n            value: stats.sourcing,\n            dynamicValue: stats.dynamic_sourcing,\n            id: uuidv4(),\n          },\n          {\n            title: 'Трудоустроенных',\n            value: stats.employed,\n            dynamicValue: null,\n            id: uuidv4(),\n          },\n          {\n            title: '% Вакансий',\n            subtitle: 'закрытых',\n            value: stats.vacancies_closed,\n            dynamicValue: stats.dynamic_vacancies_closed,\n            id: uuidv4(),\n          },\n        ]\n      })\n      .addCase(getVacanciesStatistic.rejected, (state, action) => {\n        state.isLoading = false\n        state.networkError = action.payload as IAPIError\n        state.isNetworkError = true\n      })\n\n      // get Directories\n      .addCase(getDirectories.pending, (state) => {\n        state.isLoading = true\n        state.isNetworkError = false\n        state.networkError = null\n      })\n      .addCase(getDirectories.fulfilled, (state, action) => {\n        state.isLoading = false\n        state.filtersJSON = action.payload.filters\n        state.directoriesData = action.payload.directoriesData\n      })\n      .addCase(getDirectories.rejected, (state, action) => {\n        state.isLoading = false\n        state.networkError = action.payload as IAPIError\n        state.isNetworkError = true\n      })\n\n      // patch Vacancies\n      .addCase(patchVacancyStatus.pending, (state) => {\n        state.isLoading = true\n        state.isNetworkError = false\n        state.networkError = null\n      })\n      .addCase(patchVacancyStatus.fulfilled, (state, action) => {\n        state.isLoading = false\n        const { updatedRow } = action.payload\n        const newVacancies = [...state.vacancies]\n        newVacancies[newVacancies.findIndex((el) => el.id === updatedRow.id)] = updatedRow\n        state.vacancies = newVacancies\n        state.updateStatus = 'ok'\n      })\n      .addCase(patchVacancyStatus.rejected, (state, action) => {\n        state.isLoading = false\n        state.patchNetworkError = action.payload as IAPIError\n        state.isNetworkError = true\n      })\n\n      // delete Vacancies\n      .addCase(deleteVacancy.pending, (state) => {\n        state.isLoading = true\n        state.isNetworkError = false\n        state.networkError = null\n      })\n      .addCase(deleteVacancy.fulfilled, (state, action) => {\n        state.isLoading = false\n        state.isSuccessDeleteVacancy = true\n      })\n      .addCase(deleteVacancy.rejected, (state, action) => {\n        state.isLoading = false\n        state.patchNetworkError = action.payload as IAPIError\n        state.isNetworkError = true\n      })\n\n      // patch student's status\n      .addCase(patchStudentStatus.pending, (state) => {\n        state.isLoading = true\n        state.isNetworkError = false\n        state.networkError = null\n      })\n      .addCase(patchStudentStatus.fulfilled, (state, action) => {\n        state.isLoading = false\n        const { updatedRow } = action.payload\n        const newInfoRows: Array<IStudentRawData> = [...state.infoData]\n        newInfoRows[newInfoRows.findIndex((el) => el.id === updatedRow.id)].status.value = updatedRow.status\n        state.rows = getRows(newInfoRows)\n        state.updateStatus = 'ok'\n        state.updateStudentStatus = true\n      })\n      .addCase(patchStudentStatus.rejected, (state, action) => {\n        state.isLoading = false\n        state.networkError = action.payload as IAPIError\n        state.isNetworkError = true\n      })\n\n      // get Info about vacancy\n      .addCase(getInfo.pending, (state) => {\n        state.isLoading = true\n        state.isNetworkError = false\n        state.networkError = null\n      })\n      .addCase(getInfo.fulfilled, (state, action) => {\n        state.isLoading = false\n        state.infoData = action.payload.tableData\n        state.header = action.payload.headerData\n        state.rows = getRows(action.payload.tableData)\n      })\n      .addCase(getInfo.rejected, (state, action) => {\n        state.isLoading = false\n        state.networkError = action.payload as IAPIError\n        state.isNetworkError = true\n      })\n\n      // get student profile\n      .addCase(getStudentProfile.pending, (state) => {\n        state.isLoading = true\n        state.isNetworkError = false\n        state.networkError = null\n      })\n      .addCase(getStudentProfile.fulfilled, (state, action) => {\n        state.isLoading = false\n        state.studentProfile = action.payload\n      })\n      .addCase(getStudentProfile.rejected, (state, action) => {\n        state.isLoading = false\n        state.networkError = action.payload as IAPIError\n        state.isNetworkError = true\n      })\n\n      // patch vacancy info\n      .addCase(patchVacancyInfo.pending, (state) => {\n        state.isLoading = true\n        state.isNetworkError = false\n        state.networkError = null\n      })\n      .addCase(patchVacancyInfo.fulfilled, (state, action) => {\n        state.isLoading = false\n        state.header = action.payload\n        state.vacancies = state.vacancies.map((v) => (v.id !== action.payload?.id ? v : action.payload))\n        // const updatedRow = action.payload\n        // const newVacancies = [...state.vacancies]\n        // Частично и аккуратно обновляем общий список. В ответе патча нет статистики + источник летит цифрой\n        // newVacancies[newVacancies.findIndex((el) => el.id === updatedRow.id)] = {\n        //   ...newVacancies[newVacancies.findIndex((el) => el.id === updatedRow.id)],\n        //   ...updatedRow,\n        //   source: state.filtersJSON.sources.find((item) => item.id === updatedRow.source)?.name,\n        // }\n        // state.vacancies = newVacancies\n      })\n      .addCase(patchVacancyInfo.rejected, (state, action) => {\n        state.isLoading = false\n        state.networkError = action.payload as IAPIError\n        state.isNetworkError = true\n      })\n\n      // post Draft Vacancy\n      .addCase(postDraftVacancy.pending, (state) => {\n        state.isLoading = true\n        state.isNetworkError = false\n        state.networkError = null\n      })\n      .addCase(postDraftVacancy.fulfilled, (state, action) => {\n        state.isLoading = false\n      })\n      .addCase(postDraftVacancy.rejected, (state, action) => {\n        state.isLoading = false\n        state.networkError = action.payload as IAPIError\n        state.isNetworkError = true\n      })\n  },\n})\n\nexport const {\n  setFiltersJSON,\n  setDirectoriesData,\n  setIsOpenVacancyPopup,\n  setVacancyToArchive,\n  setIsInfoPopupOpen,\n  setVacancyToEdit,\n  setVacancies,\n  setIsLoading,\n  setIsOpenFoundJobPopup,\n  setStudentToEdit,\n  resetUpdateStatus,\n  resetUpdateStudentStatus,\n  setDraftPopupState,\n  setDraftFormData,\n  clearPatchError,\n  setUpdatedStudentStatus,\n  setIsOpenVacancyAcceleratePopup,\n  setHeader,\n  setVacancyToDelete,\n  setIsSuccessDeleteVacancy,\n} = vacanciesPageSlice.actions\n\nexport default vacanciesPageSlice\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport {\n  ICompany,\n  IDirectories,\n  IFilterJson,\n  IInfoPopupAction,\n  IInitialState,\n} from '../types/companies-page-types/companies-page-types'\nimport {\n  deleteCompany,\n  getCohorts,\n  getCompaniesList,\n  getCompaniesStatuses,\n  getCompanyEmployedStudentList,\n  getCompanyInfo,\n  getCompanyVacanciesList,\n  getDirectories,\n  patchCompanyInfo,\n  patchCompanyStatus,\n  patchStudentStatus,\n  patchVacancyStatus,\n  postDraftCompany,\n} from '../axios/companies-page'\nimport { IAPIError } from '../types/global-types'\n\nexport const initialState: IInitialState = {\n  filtersJSON: {} as IFilterJson,\n  directoriesData: {} as IDirectories,\n  companies: [],\n  selectedCompanyVacancies: [],\n  selectedCompany: null,\n  isLoading: false,\n  isNetworkError: false,\n  networkError: null,\n  updateStatus: '',\n  updateCompanyStatus: false,\n  rowsCount: 0,\n  companiesStatuses: [],\n  selectedCompanyFullInfo: null,\n  employedStudentList: [],\n  coursesWithCohorts: [],\n  isOpenNewEditCompanyModal: false,\n  isLockUpdate: false,\n  companiesRowsCount: 0,\n  filters: {},\n  infoPopupTitle: '',\n  infoPopupSubtitle: '',\n  infoPopupButtonTitle: '',\n  isInfoPopupOpen: false,\n  infoPopupType: '',\n  deleteNetworkError: null,\n  vacancyToArchive: null,\n  studentToEdit: null,\n  isOpenFoundJobPopup: false,\n  isOpenAcceleratePopup: false,\n  isDraftPopupOpen: false,\n  draftFormData: null,\n}\n\nconst companiesPageSlice = createSlice({\n  name: 'companies-page',\n  initialState,\n  reducers: {\n    setDraftPopupState(state, action) {\n      state.isDraftPopupOpen = action.payload\n    },\n    setDraftFormData(state, action) {\n      state.draftFormData = action.payload\n    },\n    setIsOpenAcceleratePopup(state, action) {\n      state.isOpenAcceleratePopup = action.payload\n    },\n    updateStudentStatus(state, action) {\n      const newStudentList = [...state.employedStudentList]\n      newStudentList[newStudentList.findIndex((el) => el.id === state.studentToEdit?.id)].status = action.payload\n      state.employedStudentList = newStudentList\n    },\n    setIsOpenFoundJobPopup(state, action) {\n      state.isOpenFoundJobPopup = action.payload\n    },\n    setStudentToEdit(state, action) {\n      state.studentToEdit = action.payload\n    },\n    setVacancyToArchive(state, action) {\n      state.vacancyToArchive = action.payload\n    },\n    clearDeleteError(state) {\n      state.deleteNetworkError = null\n      state.isNetworkError = false\n    },\n    openInfoPopup(state, action: PayloadAction<IInfoPopupAction>) {\n      state.infoPopupTitle = action.payload.title\n      state.infoPopupSubtitle = action.payload.subtitle\n      state.infoPopupButtonTitle = action.payload.buttonTitle\n      state.infoPopupType = action.payload.type\n      state.isInfoPopupOpen = true\n    },\n    closeInfoPopup(state) {\n      state.isInfoPopupOpen = false\n      state.infoPopupTitle = ''\n      state.infoPopupSubtitle = ''\n      state.infoPopupType = ''\n    },\n    openNewEditCompanyModal(state) {\n      state.isOpenNewEditCompanyModal = true\n    },\n    closeNewEditCompanyModal(state) {\n      state.isOpenNewEditCompanyModal = false\n    },\n    setSaveFilters(state, action) {\n      state.filters = action.payload\n    },\n    setLockUpdate(state, action) {\n      state.isLockUpdate = action.payload\n    },\n    setFiltersJSON(state, action) {\n      state.filtersJSON = action.payload\n    },\n    setDirectoriesData(state, action) {\n      state.directoriesData = action.payload\n    },\n    setSelectedCompany(state, action) {\n      state.selectedCompany = action.payload\n    },\n    updateCompanyInList(state, action) {\n      const newCompanies = [...state.companies]\n      const companyIndex = newCompanies?.findIndex((company) => company.pk === action.payload.id)\n      newCompanies[companyIndex] = { ...action.payload, pk: action.payload.id }\n      state.companies = [...newCompanies]\n    },\n    setSelectedCompanyFullInfo(state, action) {\n      state.selectedCompanyFullInfo = action.payload\n    },\n    resetSelectedCompanyFullInfo(state) {\n      state.selectedCompanyFullInfo = null\n    },\n    setVacancies(state, action) {\n      state.companies = action.payload\n    },\n    setIsLoading(state, action) {\n      state.isLoading = action.payload\n    },\n    resetUpdateStatus(state) {\n      state.updateStatus = ''\n    },\n    resetUpdateStudentStatus(state) {\n      state.updateCompanyStatus = false\n    },\n    resetDataGridInfo(state) {\n      state.employedStudentList = []\n      state.selectedCompanyVacancies = []\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      // get Companies\n      .addCase(getCompaniesList.pending, (state) => {\n        state.isLoading = true\n        state.isNetworkError = false\n        state.networkError = null\n      })\n      .addCase(getCompaniesList.fulfilled, (state, action) => {\n        state.isLoading = false\n        const list: Array<ICompany> = action.payload.results\n        state.companies = list.map((item) => ({ ...item, id: item.pk }))\n        // if (action.payload.links.previous === null) {\n        //   state.companies = list.map((item) => ({ ...item, id: item.pk }))\n        // } else {\n        //   state.companies = state.companies.concat(...list.map((item) => ({ ...item, id: item.pk })))\n        // }\n        state.companiesRowsCount = action.payload.count\n      })\n      .addCase(getCompaniesList.rejected, (state, action) => {\n        state.isLoading = false\n        state.networkError = action.payload as IAPIError\n        state.isNetworkError = true\n      })\n\n      // get company vacancies\n      .addCase(getCompanyVacanciesList.pending, (state) => {\n        state.isLoading = true\n        state.isNetworkError = false\n        state.networkError = null\n      })\n      .addCase(getCompanyVacanciesList.fulfilled, (state, action) => {\n        state.isLoading = false\n        state.selectedCompanyVacancies = action.payload.results\n        state.rowsCount = action.payload.count\n      })\n      .addCase(getCompanyVacanciesList.rejected, (state, action) => {\n        state.isLoading = false\n        state.networkError = action.payload as IAPIError\n        state.isNetworkError = true\n      })\n\n      // get company employed students\n      .addCase(getCompanyEmployedStudentList.pending, (state) => {\n        state.isLoading = true\n        state.isNetworkError = false\n        state.networkError = null\n      })\n      .addCase(getCompanyEmployedStudentList.fulfilled, (state, action) => {\n        state.isLoading = false\n        state.employedStudentList = action.payload.results\n        state.rowsCount = action.payload.count\n      })\n      .addCase(getCompanyEmployedStudentList.rejected, (state, action) => {\n        state.isLoading = false\n        state.networkError = action.payload as IAPIError\n        state.isNetworkError = true\n      })\n\n      // get company full information\n      .addCase(getCompanyInfo.pending, (state) => {\n        state.isLoading = true\n        state.isNetworkError = false\n        state.networkError = null\n      })\n      .addCase(getCompanyInfo.fulfilled, (state, action) => {\n        state.isLoading = false\n        state.selectedCompanyFullInfo = action.payload\n        state.rowsCount = action.payload.count\n      })\n      .addCase(getCompanyInfo.rejected, (state, action) => {\n        state.isLoading = false\n        state.networkError = action.payload as IAPIError\n        state.isNetworkError = true\n      })\n\n      // delete company\n      .addCase(deleteCompany.pending, (state) => {\n        state.isLoading = true\n        state.isNetworkError = false\n        state.networkError = null\n      })\n      .addCase(deleteCompany.fulfilled, (state, action) => {\n        state.isLoading = false\n        const newCompanies = [...state.companies]\n        newCompanies.splice(\n          newCompanies.findIndex((item) => item.id === state.selectedCompany?.id),\n          1,\n        )\n        state.companies = [...newCompanies]\n        state.selectedCompany = null\n      })\n      .addCase(deleteCompany.rejected, (state, action) => {\n        state.isLoading = false\n        state.deleteNetworkError = action.payload as IAPIError\n        state.isNetworkError = true\n      })\n\n      // get companies statuses\n      .addCase(getCompaniesStatuses.pending, (state) => {\n        state.isLoading = true\n        state.isNetworkError = false\n        state.networkError = null\n      })\n      .addCase(getCompaniesStatuses.fulfilled, (state, action) => {\n        state.isLoading = false\n        state.companiesStatuses = action.payload\n        state.filtersJSON = {\n          ...state.filtersJSON,\n          statuses: action.payload,\n        }\n        state.rowsCount = action.payload.count\n      })\n\n      // get company full information\n      .addCase(getCohorts.pending, (state) => {\n        state.isLoading = true\n        state.isNetworkError = false\n        state.networkError = null\n      })\n      .addCase(getCohorts.fulfilled, (state, action) => {\n        state.isLoading = false\n        state.coursesWithCohorts = action.payload.courses\n      })\n      .addCase(getCohorts.rejected, (state, action) => {\n        state.isLoading = false\n        state.networkError = action.payload as IAPIError\n        state.isNetworkError = true\n      })\n\n      .addCase(getCompaniesStatuses.rejected, (state, action) => {\n        state.isLoading = false\n        state.networkError = action.payload as IAPIError\n        state.isNetworkError = true\n      })\n\n      // get Directories\n      .addCase(getDirectories.pending, (state) => {\n        state.isLoading = true\n        state.isNetworkError = false\n        state.networkError = null\n      })\n      .addCase(getDirectories.fulfilled, (state, action) => {\n        state.isLoading = false\n        state.filtersJSON = { courses: action.payload.filters.courses, statuses: state.filtersJSON.statuses }\n        state.directoriesData = action.payload.directoriesData\n      })\n      .addCase(getDirectories.rejected, (state, action) => {\n        state.isLoading = false\n        state.networkError = action.payload as IAPIError\n        state.isNetworkError = true\n      })\n\n      // // patch student status\n      .addCase(patchStudentStatus.pending, (state) => {\n        state.isLoading = true\n        state.isNetworkError = false\n        state.networkError = null\n      })\n      .addCase(patchStudentStatus.fulfilled, (state, action) => {\n        state.isLoading = false\n        const { updatedRow } = action.payload\n        const newStudentList = [...state.employedStudentList]\n        newStudentList[newStudentList.findIndex((el) => el.id === updatedRow.id)].status = updatedRow.status\n        state.employedStudentList = newStudentList\n        state.studentToEdit = null\n        // state.updateStatus = 'ok'\n      })\n      .addCase(patchStudentStatus.rejected, (state, action) => {\n        state.isLoading = false\n        state.networkError = action.payload as IAPIError\n        state.isNetworkError = true\n      })\n\n      // patch company status\n      .addCase(patchCompanyStatus.pending, (state) => {\n        state.isLoading = true\n        state.isNetworkError = false\n        state.networkError = null\n      })\n      .addCase(patchCompanyStatus.fulfilled, (state, action) => {\n        state.isLoading = false\n        const { updatedRow } = action.payload\n        const newCompanies = [...state.companies]\n        newCompanies[newCompanies.findIndex((el) => el.id === updatedRow.id)] = updatedRow\n        state.companies = newCompanies\n        state.updateStatus = 'ok'\n      })\n      .addCase(patchCompanyStatus.rejected, (state, action) => {\n        state.isLoading = false\n        state.networkError = action.payload as IAPIError\n        state.isNetworkError = true\n      })\n\n      // patch company info\n      .addCase(patchCompanyInfo.pending, (state) => {\n        state.isLoading = true\n        state.isNetworkError = false\n        state.networkError = null\n      })\n      .addCase(patchCompanyInfo.fulfilled, (state, action) => {\n        state.isLoading = false\n        const updatedRow = action.payload\n        state.selectedCompanyFullInfo = { ...updatedRow }\n        const newCompanies = [...state.companies]\n        newCompanies[newCompanies.findIndex((el) => el.pk === updatedRow.id)] = {\n          ...newCompanies[newCompanies.findIndex((el) => el.pk === updatedRow.id)],\n          courses: [...updatedRow.courses],\n          name: updatedRow.name,\n        }\n        state.companies = newCompanies\n      })\n\n      // patch Vacancies\n      .addCase(patchVacancyStatus.pending, (state) => {\n        state.isLoading = true\n        state.isNetworkError = false\n        state.networkError = null\n      })\n      .addCase(patchVacancyStatus.fulfilled, (state, action) => {\n        state.isLoading = false\n        const { updatedRow } = action.payload\n        const newVacancies = [...state.selectedCompanyVacancies]\n        newVacancies[newVacancies.findIndex((el) => el.id === updatedRow.id)].vacancy_status = updatedRow.vacancy_status\n        state.selectedCompanyVacancies = newVacancies\n      })\n      .addCase(patchVacancyStatus.rejected, (state, action) => {\n        state.isLoading = false\n        state.networkError = action.payload as IAPIError\n        state.isNetworkError = true\n      })\n      // post Draft Company\n      .addCase(postDraftCompany.pending, (state) => {\n        state.isLoading = true\n        state.isNetworkError = false\n        state.networkError = null\n      })\n      .addCase(postDraftCompany.fulfilled, (state, action) => {\n        state.isLoading = false\n      })\n      .addCase(postDraftCompany.rejected, (state, action) => {\n        state.isLoading = false\n        state.networkError = action.payload as IAPIError\n        state.isNetworkError = true\n      })\n  },\n})\n\nexport const {\n  setFiltersJSON,\n  setDirectoriesData,\n  setVacancies,\n  setIsLoading,\n  resetUpdateStatus,\n  resetUpdateStudentStatus,\n  setSelectedCompany,\n  setSelectedCompanyFullInfo,\n  resetSelectedCompanyFullInfo,\n  resetDataGridInfo,\n  openNewEditCompanyModal,\n  closeNewEditCompanyModal,\n  setLockUpdate,\n  setSaveFilters,\n  openInfoPopup,\n  closeInfoPopup,\n  clearDeleteError,\n  setVacancyToArchive,\n  setStudentToEdit,\n  setIsOpenFoundJobPopup,\n  updateStudentStatus,\n  setIsOpenAcceleratePopup,\n  updateCompanyInList,\n  setDraftPopupState,\n  setDraftFormData,\n} = companiesPageSlice.actions\n\nexport default companiesPageSlice\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { v4 as uuidv4 } from 'uuid'\nimport { IAPIError } from '../types/global-types'\nimport {\n  IFilterJson,\n  IInitialState,\n  IInfoPopupAction,\n} from '../types/workshop-projects-list-page-types/workshop-projects-list-page-types'\nimport {\n  deleteProject,\n  getDirectories,\n  getProjectsList,\n  getProjectStudents,\n  getProjectTeam,\n  patchProjectInfo,\n  patchProjectStatus,\n  patchStudentStatus,\n  patchTeamStatus,\n} from '../axios/workshop-projects-list-page'\n\nexport const initialState: IInitialState = {\n  filtersJSON: {} as IFilterJson,\n  projectToEdit: null,\n  projects: [],\n  projectToClose: null,\n  projectToDraft: null,\n  isLoading: false,\n  isNetworkError: false,\n  networkError: null,\n  rowsCount: 0,\n  updateStatus: '',\n  isLockUpdate: false,\n  // TODO надо будет хранить фильтры\n  // filters: []\n  infoPopupTitle: '',\n  infoPopupSubtitle: '',\n  infoPopupButtonTitle: '',\n  isInfoPopupOpen: false,\n  infoPopupType: '',\n  deleteStatus: '',\n  projectStudents: [],\n  projectTeam: [],\n  projectStudentsRowsCount: 0,\n  projectTeamRowsCount: 0,\n}\n\nconst workshopProjectsListPageSlice = createSlice({\n  name: 'workshopProjectsListPage',\n  initialState,\n  reducers: {\n    // TODO костыль для моков - создание проекта\n    createProject(state, action) {\n      state.projects.unshift(action.payload)\n    },\n    openInfoPopup(state, action: PayloadAction<IInfoPopupAction>) {\n      state.infoPopupTitle = action.payload.title\n      state.infoPopupSubtitle = action.payload.subtitle\n      state.infoPopupButtonTitle = action.payload.buttonTitle\n      state.infoPopupType = action.payload.type\n      state.isInfoPopupOpen = true\n    },\n    closeInfoPopup(state) {\n      state.isInfoPopupOpen = false\n      state.infoPopupTitle = ''\n      state.infoPopupSubtitle = ''\n      state.infoPopupType = ''\n    },\n    setIsLockUpdate(state, action) {\n      state.isLockUpdate = action.payload\n    },\n    setProjectToEdit(state, action) {\n      state.projectToEdit = action.payload\n    },\n    resetUpdateStatus(state) {\n      state.updateStatus = ''\n    },\n    resetDeleteStatus(state) {\n      state.deleteStatus = ''\n    },\n    setProjectToClose(state, action) {\n      state.projectToClose = action.payload\n    },\n\n    setProjectToDraft(state, action) {\n      state.projectToDraft = action.payload\n    },\n\n    setFiltersJSON(state, action) {\n      state.filtersJSON = action.payload\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      // get projects\n      .addCase(getProjectsList.pending, (state) => {\n        state.isLoading = true\n        state.isNetworkError = false\n        state.networkError = null\n      })\n      .addCase(getProjectsList.fulfilled, (state, action) => {\n        state.isLoading = false\n        // state.projects = action.payload.results\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore\n        state.projects = action.payload\n        state.rowsCount = action.payload.length\n\n        // if (action.payload.previous === null) {\n        //   state.vacancies = action.payload.results\n        // } else {\n        //   state.vacancies = state.vacancies.concat(...action.payload.results)\n        // }\n        // state.rowsCount = action.payload.count\n      })\n      .addCase(getProjectsList.rejected, (state, action) => {\n        state.isLoading = false\n        state.networkError = action.payload as IAPIError\n        state.isNetworkError = true\n      })\n\n      // get Directories\n      .addCase(getDirectories.pending, (state) => {\n        state.isLoading = true\n        state.isNetworkError = false\n        state.networkError = null\n      })\n      .addCase(getDirectories.fulfilled, (state, action) => {\n        state.isLoading = false\n        state.filtersJSON = action.payload\n      })\n      .addCase(getDirectories.rejected, (state, action) => {\n        state.isLoading = false\n        state.networkError = action.payload as IAPIError\n        state.isNetworkError = true\n      })\n\n      // patch project status\n      // get Directories\n      .addCase(patchProjectStatus.pending, (state) => {\n        state.isLoading = true\n        state.isNetworkError = false\n        state.networkError = null\n      })\n      .addCase(patchProjectStatus.fulfilled, (state, action) => {\n        state.isLoading = false\n        const { projectId, status } = action.payload\n        const projects_statuses = [\n          {\n            id: 1,\n            status: 'Черновик',\n            label: 'Черновик',\n            value: 'Черновик',\n            color: 'hsla(219, 100%, 97%, 1)',\n          },\n          {\n            id: 2,\n            status: 'На оценке',\n            label: 'На оценке',\n            value: 'На оценке',\n            color: 'hsla(254, 54%, 85%, 1)',\n          },\n          {\n            id: 3,\n            status: 'Уточнение данных',\n            label: 'Уточнение данных',\n            value: 'Уточнение данных',\n            color: 'hsla(51, 100%, 91%, 1)',\n          },\n          {\n            id: 4,\n            status: 'Одобрен',\n            label: 'Одобрен',\n            value: 'Одобрен',\n            color: 'hsla(217, 100%, 84%, 1)',\n          },\n          {\n            id: 5,\n            status: 'Набор открыт',\n            label: 'Набор открыт',\n            value: 'Набор открыт',\n            color: 'hsla(141, 40%, 83%, 1)',\n          },\n          {\n            id: 6,\n            status: 'Набор закрыт',\n            label: 'Набор закрыт',\n            value: 'Набор закрыт',\n            color: 'hsla(33, 23%, 56%, 0.26)',\n          },\n          {\n            id: 7,\n            status: 'В реализации',\n            label: 'В реализации',\n            value: 'В реализации',\n            color: 'hsla(33, 100%, 87%, 1)',\n          },\n          {\n            id: 8,\n            status: 'На паузе',\n            label: 'На паузе',\n            value: 'На паузе',\n            color: 'hsla(214, 11%, 88%, 1)',\n          },\n          {\n            id: 9,\n            status: 'Завершен',\n            label: 'Завершен',\n            value: 'Завершен',\n            color: 'hsla(214, 11%, 88%, 1)',\n          },\n          {\n            id: 10,\n            status: 'Отклонен',\n            label: 'Отклонен',\n            value: 'Отклонен',\n            color: 'hsla(346, 100%, 93%, 1)',\n          },\n        ]\n        const newProjectsState = [...state.projects]\n        const editedIndex = newProjectsState.findIndex((p) => p.id === projectId)\n        newProjectsState[editedIndex] = {\n          ...newProjectsState[editedIndex],\n          // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n          // @ts-ignore\n          status: projects_statuses.find((item) => item.status === status),\n        }\n        state.projects = [...newProjectsState]\n        state.updateStatus = 'ok'\n      })\n      .addCase(patchProjectStatus.rejected, (state, action) => {\n        state.isLoading = false\n        state.networkError = action.payload as IAPIError\n        state.isNetworkError = true\n      })\n\n      .addCase(patchProjectInfo.pending, (state) => {\n        state.isLoading = true\n        state.isNetworkError = false\n        state.networkError = null\n      })\n      .addCase(patchProjectInfo.fulfilled, (state, action) => {\n        state.isLoading = false\n        const { projectId, fieldName, fieldValue } = action.payload\n        const newProjectsState = [...state.projects]\n        const editedProject = newProjectsState.find((p) => p.id === projectId)\n        if (editedProject) {\n          // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n          // @ts-ignore\n          editedProject[fieldName] = fieldValue\n        }\n        state.projects = [...newProjectsState]\n\n        // newProjectsState[editedIndex] = {\n        //   ...newProjectsState[editedIndex],\n        //   // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        //   // @ts-ignore\n        //   status: projects_statuses.find((item) => item.status === status),\n        // }\n        state.projects = [...newProjectsState]\n        state.updateStatus = 'ok'\n      })\n      .addCase(patchProjectInfo.rejected, (state, action) => {\n        state.isLoading = false\n        state.networkError = action.payload as IAPIError\n        state.isNetworkError = true\n      })\n      // Delete project\n      .addCase(deleteProject.pending, (state) => {\n        state.isLoading = true\n        state.isNetworkError = false\n        state.networkError = null\n      })\n      .addCase(deleteProject.fulfilled, (state, action) => {\n        state.isLoading = false\n        const id = action.payload\n        const newProjectsState = [...state.projects]\n        const editedProjectIndex = newProjectsState.findIndex((p) => p.id === id)\n        newProjectsState.splice(editedProjectIndex, 1)\n        state.projects = [...newProjectsState]\n        state.deleteStatus = 'ok'\n      })\n      .addCase(deleteProject.rejected, (state, action) => {\n        state.isLoading = false\n        state.networkError = action.payload as IAPIError\n        state.isNetworkError = true\n      })\n\n      // get projects students\n      .addCase(getProjectStudents.pending, (state) => {\n        state.isLoading = true\n        state.isNetworkError = false\n        state.networkError = null\n      })\n      .addCase(getProjectStudents.fulfilled, (state, action) => {\n        state.isLoading = false\n        // state.projects = action.payload.results\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore\n        state.projectStudents = action.payload\n        state.projectStudentsRowsCount = action.payload.length\n\n        // if (action.payload.previous === null) {\n        //   state.vacancies = action.payload.results\n        // } else {\n        //   state.vacancies = state.vacancies.concat(...action.payload.results)\n        // }\n        // state.rowsCount = action.payload.count\n      })\n      .addCase(getProjectStudents.rejected, (state, action) => {\n        state.isLoading = false\n        state.networkError = action.payload as IAPIError\n        state.isNetworkError = true\n      })\n\n      // get projects team\n      .addCase(getProjectTeam.pending, (state) => {\n        state.isLoading = true\n        state.isNetworkError = false\n        state.networkError = null\n      })\n      .addCase(getProjectTeam.fulfilled, (state, action) => {\n        state.isLoading = false\n        // state.projects = action.payload.results\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore\n        state.projectTeam = action.payload\n        state.projectTeamRowsCount = action.payload.length\n\n        // if (action.payload.previous === null) {\n        //   state.vacancies = action.payload.results\n        // } else {\n        //   state.vacancies = state.vacancies.concat(...action.payload.results)\n        // }\n        // state.rowsCount = action.payload.count\n      })\n      .addCase(getProjectTeam.rejected, (state, action) => {\n        state.isLoading = false\n        state.networkError = action.payload as IAPIError\n        state.isNetworkError = true\n      })\n      // Patch students status\n      .addCase(patchStudentStatus.pending, (state) => {\n        state.isLoading = true\n        state.isNetworkError = false\n        state.networkError = null\n      })\n      .addCase(patchStudentStatus.fulfilled, (state, action) => {\n        state.isLoading = false\n        const { id, fieldName, fieldValue } = action.payload\n        const newProjectsStudents = [...state.projectStudents]\n        const editedProject = newProjectsStudents.find((p) => p.id === id)\n        if (editedProject) {\n          // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n          // @ts-ignore\n          editedProject[fieldName] = fieldValue\n        }\n\n        // newProjectsState[editedIndex] = {\n        //   ...newProjectsState[editedIndex],\n        //   // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        //   // @ts-ignore\n        //   status: projects_statuses.find((item) => item.status === status),\n        // }\n        state.updateStatus = 'ok'\n      })\n      .addCase(patchStudentStatus.rejected, (state, action) => {\n        state.isLoading = false\n        state.networkError = action.payload as IAPIError\n        state.isNetworkError = true\n      })\n\n      // Patch team status\n      .addCase(patchTeamStatus.pending, (state) => {\n        state.isLoading = true\n        state.isNetworkError = false\n        state.networkError = null\n      })\n      .addCase(patchTeamStatus.fulfilled, (state, action) => {\n        state.isLoading = false\n        const { id, fieldName, fieldValue } = action.payload\n        const newProjectsTeam = [...state.projectTeam]\n        const editedProject = newProjectsTeam.find((p) => p.id === id)\n        if (editedProject) {\n          // TODO костыль, для массива\n          // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n          // @ts-ignore\n          editedProject[fieldName] = [fieldValue]\n        }\n\n        // newProjectsState[editedIndex] = {\n        //   ...newProjectsState[editedIndex],\n        //   // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        //   // @ts-ignore\n        //   status: projects_statuses.find((item) => item.status === status),\n        // }\n        state.updateStatus = 'ok'\n      })\n      .addCase(patchTeamStatus.rejected, (state, action) => {\n        state.isLoading = false\n        state.networkError = action.payload as IAPIError\n        state.isNetworkError = true\n      })\n  },\n})\n\nexport const {\n  setFiltersJSON,\n  setProjectToClose,\n  setProjectToDraft,\n  resetUpdateStatus,\n  setProjectToEdit,\n  setIsLockUpdate,\n  openInfoPopup,\n  closeInfoPopup,\n  resetDeleteStatus,\n  createProject,\n} = workshopProjectsListPageSlice.actions\n\nexport default workshopProjectsListPageSlice\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\n\ntype TInitialState = {\n  isHidden: boolean\n}\n\nconst initialState: TInitialState = {\n  isHidden: false,\n}\n\nexport const statisticsMetricsSlice = createSlice({\n  name: 'statistics-metrics-slice',\n  initialState,\n  reducers: {\n    changeStatisticsMetricsState: (state, action: PayloadAction<boolean>) => {\n      state.isHidden = action.payload\n    },\n  },\n})\n\nexport const { changeStatisticsMetricsState } = statisticsMetricsSlice.actions\nexport default statisticsMetricsSlice\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport {\n  TInitialPCState,\n  TTeamItem,\n} from '../types/workshop-projects-list-page-types/workshop-projects-list-page-types'\nimport { IAPIError } from '../types/global-types'\nimport { getDirectories } from '../axios/project-creation'\n\nconst initialState: TInitialPCState = {\n  currentTab: 0,\n  isLockNextButton: false,\n  isLoading: false,\n  isNetworkError: false,\n  networkError: null,\n  project_types: [],\n  selectedProjectType: null,\n  teamItems: [],\n  tabPC2Values: null,\n  tabPC3Values: null,\n  tabPC4Values: null,\n  project_directions: [],\n  project_spheres: [],\n  customer_types: [],\n  selectedCustomerType: null,\n  selectedFaculties: [],\n  customer_comment: '',\n  createStatus: '',\n}\n\nexport const projectCreationSlice = createSlice({\n  name: 'project-creation-slice',\n  initialState,\n  reducers: {\n    resetState: (state) => initialState,\n    resetCreateStatus: (state) => {\n      state.createStatus = ''\n    },\n    setCustomerType: (state, action) => {\n      state.selectedCustomerType = action.payload\n    },\n    // TODO костыль для сохранения данных в стор. Скорее всего потом не пригодится\n    setProjectsValues(state, action) {\n      const { fieldName, values } = action.payload\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore\n      state[fieldName] = values\n    },\n    setIsLockNextButton(state, action) {\n      state.isLockNextButton = action.payload\n    },\n    setProjectType: (state, action) => {\n      state.selectedProjectType = action.payload\n    },\n    setNextTab: (state) => {\n      state.currentTab += 1\n    },\n    setPrevTab: (state) => {\n      if (state.currentTab) state.currentTab -= 1\n    },\n    changeActiveStatus: (state, action) => {\n      const newTeamItems = [...state.teamItems]\n      const itemIndex = newTeamItems.findIndex((item) => item.id === action.payload)\n      // Если предыдущий статус активный, то обнуляем счётчик\n      if (newTeamItems[itemIndex].isActive) {\n        newTeamItems[itemIndex] = { ...newTeamItems[itemIndex], isActive: !newTeamItems[itemIndex].isActive, count: 0 }\n      } else {\n        newTeamItems[itemIndex] = { ...newTeamItems[itemIndex], isActive: !newTeamItems[itemIndex].isActive, count: 1 }\n      }\n      state.teamItems = [...newTeamItems]\n    },\n    increaseTeamItemCounter: (state, action) => {\n      const newTeamItems = [...state.selectedFaculties]\n      const itemIndex = newTeamItems.findIndex((item) => item.id === action.payload)\n      newTeamItems[itemIndex] = { ...newTeamItems[itemIndex], count: newTeamItems[itemIndex].count + 1 }\n      state.selectedFaculties = [...newTeamItems]\n    },\n    decreaseTeamItemCounter: (state, action) => {\n      const newTeamItems = [...state.selectedFaculties]\n      const itemIndex = newTeamItems.findIndex((item) => item.id === action.payload)\n      const foundedItem = newTeamItems[itemIndex]\n      if (foundedItem.count !== 1) {\n        newTeamItems[itemIndex] = { ...foundedItem, count: newTeamItems[itemIndex].count - 1 }\n      }\n      state.selectedFaculties = [...newTeamItems]\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      // get directories\n      .addCase(getDirectories.pending, (state) => {\n        state.isLoading = true\n        state.isNetworkError = false\n        state.networkError = null\n      })\n      .addCase(getDirectories.fulfilled, (state, action) => {\n        state.isLoading = false\n        const { project_types, team_items, project_directions, project_spheres, customer_types } = action.payload\n        state.project_types = project_types\n        state.teamItems = team_items\n        state.project_directions = project_directions\n        state.project_spheres = project_spheres\n        state.customer_types = customer_types\n      })\n      .addCase(getDirectories.rejected, (state, action) => {\n        state.isLoading = false\n        state.networkError = action.payload as IAPIError\n        state.isNetworkError = true\n      })\n  },\n})\n\nexport const {\n  setNextTab,\n  setPrevTab,\n  changeActiveStatus,\n  increaseTeamItemCounter,\n  decreaseTeamItemCounter,\n  setProjectType,\n  setIsLockNextButton,\n  setProjectsValues,\n  setCustomerType,\n  resetCreateStatus,\n  resetState,\n} = projectCreationSlice.actions\nexport default projectCreationSlice\n","export default __webpack_public_path__ + \"static/media/medal-big-gray.b51426d6.svg\";","import { createSlice } from '@reduxjs/toolkit'\nimport { v4 } from 'uuid'\nimport { getAchievements } from '../axios/achievements'\nimport { IAPIError, IRequestInfo } from '../types/global-types'\nimport medal from '../../assets/medal-big-gray.svg'\nimport { ApiAchievement, TAchievement } from '../types/achievements/achievements-types'\n\ninterface IAchievementState extends IRequestInfo {\n  selectedAchievement: TAchievement & {\n    open: boolean\n  }\n  allAchievements: Array<TAchievement>\n  successAchievements: Array<TAchievement>\n  failedAchievements: Array<TAchievement>\n  commonAchievements: Array<TAchievement>\n  preaccelerationAchievements: Array<TAchievement>\n  accelerationAchievements: Array<TAchievement>\n  testPeriodAchievements: Array<TAchievement>\n  communityAchievements: Array<TAchievement>\n  filteredAllAchievements: Array<TAchievement>\n  filteredCommonAchievements: Array<TAchievement>\n  filteredPreaccelerationAchievements: Array<TAchievement>\n  filteredAccelerationAchievements: Array<TAchievement>\n  filteredTestPeriodAchievements: Array<TAchievement>\n  filteredCommunityAchievements: Array<TAchievement>\n}\n\nexport const initialState: IAchievementState = {\n  status: 'idle',\n  isError: false,\n  errorInfo: null,\n  selectedAchievement: {\n    image: '',\n    title: '',\n    message: '',\n    open: false,\n    isSuccess: false,\n  },\n  allAchievements: [],\n  commonAchievements: [],\n  preaccelerationAchievements: [],\n  accelerationAchievements: [],\n  testPeriodAchievements: [],\n  communityAchievements: [],\n  successAchievements: [],\n  failedAchievements: [],\n  filteredAllAchievements: [],\n  filteredCommonAchievements: [],\n  filteredPreaccelerationAchievements: [],\n  filteredAccelerationAchievements: [],\n  filteredTestPeriodAchievements: [],\n  filteredCommunityAchievements: [],\n}\n\nconst achievementsSlice = createSlice({\n  name: 'achievement',\n  initialState,\n  reducers: {\n    openActiveAchievement(state, action) {\n      state.selectedAchievement = { ...action.payload, open: true }\n    },\n    closeActiveAchievement(state) {\n      state.selectedAchievement.open = false\n    },\n    filterAchievements(state, action) {\n      switch (action.payload) {\n        case 1:\n          // Фильтруем все\n          state.filteredAllAchievements = [...state.allAchievements]\n          state.filteredCommonAchievements = [...state.commonAchievements]\n          state.filteredPreaccelerationAchievements = [...state.preaccelerationAchievements]\n          state.filteredAccelerationAchievements = [...state.accelerationAchievements]\n          state.filteredTestPeriodAchievements = [...state.testPeriodAchievements]\n          state.filteredCommunityAchievements = [...state.communityAchievements]\n          break\n        case 2:\n          // Фильтруем полученные\n          state.filteredAllAchievements = [...state.successAchievements]\n          state.filteredCommonAchievements = state.commonAchievements.filter((item) => item.isSuccess)\n          state.filteredPreaccelerationAchievements = state.preaccelerationAchievements.filter((item) => item.isSuccess)\n          state.filteredAccelerationAchievements = state.accelerationAchievements.filter((item) => item.isSuccess)\n          state.filteredTestPeriodAchievements = state.testPeriodAchievements.filter((item) => item.isSuccess)\n          state.filteredCommunityAchievements = state.communityAchievements.filter((item) => item.isSuccess)\n          break\n        case 3:\n          // Фильтруем неполученные\n          state.filteredAllAchievements = [...state.failedAchievements]\n          state.filteredCommonAchievements = state.commonAchievements.filter((item) => !item.isSuccess)\n          state.filteredPreaccelerationAchievements = state.preaccelerationAchievements.filter(\n            (item) => !item.isSuccess,\n          )\n          state.filteredAccelerationAchievements = state.accelerationAchievements.filter((item) => !item.isSuccess)\n          state.filteredTestPeriodAchievements = state.testPeriodAchievements.filter((item) => !item.isSuccess)\n          state.filteredCommunityAchievements = state.communityAchievements.filter((item) => !item.isSuccess)\n          break\n        default:\n          // Ничего не делаем, если пришла борода\n          break\n      }\n    },\n    resetAchievements: () => initialState,\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(getAchievements.pending, (state) => {\n        state.status = 'pending'\n        state.isError = false\n        state.errorInfo = null\n      })\n      .addCase(getAchievements.fulfilled, (state, action) => {\n        state.status = 'succeeded'\n        const achievementGroups = action.payload\n        state.allAchievements = []\n        state.commonAchievements = []\n        state.preaccelerationAchievements = []\n        state.accelerationAchievements = []\n        state.testPeriodAchievements = []\n        state.communityAchievements = []\n        achievementGroups.forEach((group: ApiAchievement) => {\n          const statuses = group.required_statuses\n          group.stages.forEach((stage) => {\n            const uuid = v4()\n            const achievement: TAchievement = stage.is_hidden\n              ? {\n                  image: medal,\n                  title: 'Достижение скрыто',\n                  message: 'Секретное достижение',\n                  uuid,\n                  isSuccess: stage.is_success,\n                }\n              : {\n                  image: stage.is_success ? stage.success_image : stage.todo_image,\n                  title: stage.name,\n                  message: stage.condition_text,\n                  currentProgress: stage.current_progress,\n                  maxProgress: stage.success_condition,\n                  uuid,\n                  isSuccess: stage.is_success,\n                }\n            // Сразу предварительно заполняем ещё и фильтрованные стейты\n            if (statuses.length === 4) {\n              state.commonAchievements.push(achievement)\n              state.filteredCommonAchievements.push(achievement)\n            } else {\n              if (statuses.includes(1)) {\n                state.preaccelerationAchievements.push(achievement)\n                state.filteredPreaccelerationAchievements.push(achievement)\n              }\n              if (statuses.includes(2)) {\n                state.accelerationAchievements.push(achievement)\n                state.filteredAccelerationAchievements.push(achievement)\n              }\n              if (statuses.includes(3)) {\n                state.communityAchievements.push(achievement)\n                state.filteredCommunityAchievements.push(achievement)\n              }\n              if (statuses.includes(7)) {\n                state.testPeriodAchievements.push(achievement)\n                state.filteredTestPeriodAchievements.push(achievement)\n              }\n            }\n            // Заполняем стейты со всеми выполненными и невыполненными ачивками\n            if (stage.is_success) {\n              state.successAchievements.push(achievement)\n            } else {\n              state.failedAchievements.push(achievement)\n            }\n            state.allAchievements.push(achievement)\n            state.filteredAllAchievements.push(achievement)\n          })\n        })\n      })\n      .addCase(getAchievements.rejected, (state, action) => {\n        state.isError = true\n        state.errorInfo = action.payload as IAPIError\n        state.status = 'failed'\n      })\n  },\n})\n\nexport const { openActiveAchievement, closeActiveAchievement, resetAchievements, filterAchievements } =\n  achievementsSlice.actions\n\nexport default achievementsSlice\n","import { createSlice } from '@reduxjs/toolkit'\nimport { SnackbarKey, OptionsObject } from 'notistack'\nimport internal from 'stream'\nimport {\n  createResponse,\n  deleteResponse,\n  getCurrencies,\n  getResponses,\n  getSources,\n  moveCards,\n  patchResponse,\n} from '../axios/diary'\nimport { IAPIError, IRequestInfo } from '../types/global-types'\n\ntype Response = {\n  id: string\n  key: SnackbarKey\n  dismissed: boolean\n  message: string\n  options?: OptionsObject\n}\n\ntype Currency = {\n  id: number\n  name: string\n  icon: string\n}\n\ntype VacancySource = {\n  id: number\n  name: string\n}\n\ntype ApiCurrency = {\n  id: number\n  name: string\n  label: string\n}\n\ntype DragStatus = {\n  stage: 'idle' | 'dragging' | 'dropped'\n  responseId: string | null\n  oldStatus: string | null\n  newStatus: string | null\n  responseDate: string | null\n}\n\ntype CardsToRefreshPosition = {\n  id: number\n  position: number\n  statusData: Record<string, unknown>\n}\n\ninterface IDiaryState extends IRequestInfo {\n  responses: Array<Response>\n  currencies: Array<Currency>\n  sources: Array<VacancySource>\n  draggingStatus: DragStatus\n  cardsToRefreshPositions: Array<CardsToRefreshPosition>\n  searchQuery?: string\n}\n\nexport const initialState: IDiaryState = {\n  responses: [],\n  currencies: [],\n  sources: [],\n  status: 'idle',\n  isError: false,\n  errorInfo: null,\n  cardsToRefreshPositions: [],\n  draggingStatus: {\n    stage: 'idle',\n    responseId: null,\n    oldStatus: null,\n    newStatus: null,\n    responseDate: null,\n  },\n  searchQuery: undefined,\n}\n\nconst diarySlice = createSlice({\n  name: 'diary',\n  initialState,\n  reducers: {\n    setSearchQuery(state, action) {\n      if (action.payload === '') {\n        state.searchQuery = undefined\n      } else {\n        state.searchQuery = action.payload\n      }\n    },\n    addToQueue(state, action) {\n      const { id, position, statusData } = action.payload\n      state.cardsToRefreshPositions.push({ id, position, statusData })\n    },\n    removeFromQueue(state, action) {\n      state.cardsToRefreshPositions = state.cardsToRefreshPositions.filter((card) => card.id !== action.payload)\n    },\n    setResponses(state, action) {\n      state.responses = action.payload\n    },\n    updateResponseStatus(state, action) {\n      state.draggingStatus = {\n        stage: 'dragging',\n        responseId: action.payload.id,\n        oldStatus: action.payload.status_id,\n        newStatus: action.payload.newStatus,\n        responseDate: action.payload.response_date,\n      }\n      state.responses = state.responses.map((response) =>\n        response.id === action.payload.id ? { ...response, status_id: action.payload.newStatus } : response,\n      )\n    },\n    cancelDragging(state) {\n      state.responses = [...state.responses].map((response) =>\n        response.id === state.draggingStatus?.responseId\n          ? { ...response, status_id: state.draggingStatus?.oldStatus }\n          : response,\n      )\n      state.draggingStatus = {\n        stage: 'idle',\n        responseId: null,\n        oldStatus: null,\n        newStatus: null,\n        responseDate: null,\n      }\n    },\n    finishDragging(state) {\n      state.draggingStatus = {\n        stage: 'dropped',\n        responseId: null,\n        oldStatus: null,\n        newStatus: null,\n        responseDate: null,\n      }\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      // GET CARDS\n      .addCase(getResponses.pending, (state) => {\n        state.status = 'pending'\n        state.isError = false\n        state.errorInfo = null\n      })\n      .addCase(getResponses.fulfilled, (state, action) => {\n        state.status = 'succeeded'\n        state.responses = action.payload\n      })\n      .addCase(getResponses.rejected, (state, action) => {\n        state.isError = true\n        state.errorInfo = action.payload as IAPIError\n        state.status = 'failed'\n      })\n\n      // GET CURRENCIES\n      .addCase(getCurrencies.pending, (state) => {\n        state.status = 'pending'\n        state.isError = false\n        state.errorInfo = null\n      })\n      .addCase(getCurrencies.fulfilled, (state, action) => {\n        state.status = 'succeeded'\n        state.currencies = action.payload.map((currency: ApiCurrency) => ({ ...currency, icon: currency.label }))\n      })\n      .addCase(getCurrencies.rejected, (state, action) => {\n        state.isError = true\n        state.errorInfo = action.payload as IAPIError\n        state.status = 'failed'\n      })\n\n      // GET VACANCY SOURCES\n      .addCase(getSources.pending, (state) => {\n        state.status = 'pending'\n        state.isError = false\n        state.errorInfo = null\n      })\n      .addCase(getSources.fulfilled, (state, action) => {\n        state.status = 'succeeded'\n        state.sources = action.payload.map((s: { id: internal; title: string }) => ({ id: s.id, name: s.title }))\n      })\n      .addCase(getSources.rejected, (state, action) => {\n        state.isError = true\n        state.errorInfo = action.payload as IAPIError\n        state.status = 'failed'\n      })\n\n      // CREATE RESPONSE\n      .addCase(createResponse.pending, (state) => {\n        state.status = 'pending'\n        state.isError = false\n        state.errorInfo = null\n      })\n      .addCase(createResponse.fulfilled, (state, action) => {\n        state.status = 'succeeded'\n        state.responses = [...state.responses, action.payload]\n      })\n      .addCase(createResponse.rejected, (state, action) => {\n        state.isError = true\n        state.errorInfo = action.payload as IAPIError\n        state.status = 'failed'\n      })\n\n      // PATCH RESPONSE\n      .addCase(patchResponse.pending, (state) => {\n        state.status = 'pending'\n        state.isError = false\n        state.errorInfo = null\n      })\n      .addCase(patchResponse.fulfilled, (state, action) => {\n        state.status = 'succeeded'\n        state.responses = state.responses.map((response) =>\n          response.id === action.payload.id ? action.payload : response,\n        )\n      })\n      .addCase(patchResponse.rejected, (state, action) => {\n        state.isError = true\n        state.errorInfo = action.payload as IAPIError\n        state.status = 'failed'\n      })\n\n      // MOVE CARDS\n      .addCase(moveCards.pending, (state) => {\n        state.status = 'pending'\n        state.isError = false\n        state.errorInfo = null\n      })\n      .addCase(moveCards.fulfilled, (state, action) => {\n        state.status = 'succeeded'\n\n        // state.responses = action.payload\n      })\n      .addCase(moveCards.rejected, (state, action) => {\n        state.isError = true\n        state.errorInfo = action.payload as IAPIError\n        state.status = 'failed'\n      })\n\n      // DELETE RESPONSE\n      .addCase(deleteResponse.pending, (state) => {\n        state.status = 'pending'\n        state.isError = false\n        state.errorInfo = null\n      })\n      .addCase(deleteResponse.fulfilled, (state, action) => {\n        state.status = 'succeeded'\n        state.responses = state.responses.filter((response) => response.id !== action.payload)\n      })\n      .addCase(deleteResponse.rejected, (state, action) => {\n        state.isError = true\n        state.errorInfo = action.payload as IAPIError\n        state.status = 'failed'\n      })\n  },\n})\n\nexport const {\n  updateResponseStatus,\n  cancelDragging,\n  finishDragging,\n  setResponses,\n  addToQueue,\n  removeFromQueue,\n  setSearchQuery,\n} = diarySlice.actions\n\nexport default diarySlice\n","import { createSlice } from '@reduxjs/toolkit'\nimport { createPartnerForm, getDirectories } from '../axios/partners-form'\nimport { IAPIError } from '../types/global-types'\n\nexport interface IInitialState {\n  managers: Array<{ id: string; name: string }>\n  types: Array<{ id: string; name: string }>\n  scopes: Array<{ id: string; name: string }>\n  sizes: Array<{ id: string; name: string }>\n  workFormats: Array<{ id: string; name: string }>\n  employments: Array<{ id: string; name: string }>\n  isLoading: boolean\n  isNetworkError: boolean\n  networkError: IAPIError | null\n  formData: { [key: string]: any }\n  currentTab: number\n}\n\nexport const initialState: IInitialState = {\n  managers: [],\n  types: [],\n  scopes: [],\n  sizes: [],\n  workFormats: [],\n  employments: [],\n  isLoading: false,\n  isNetworkError: false,\n  networkError: null,\n  formData: {},\n  currentTab: 0,\n}\n\nconst partnersFormSlice = createSlice({\n  name: 'partners-form',\n  initialState,\n  reducers: {\n    setFormData: (state, action) => {\n      state.formData = action.payload\n    },\n    setCurrentTab: (state, action) => {\n      state.currentTab = action.payload\n    },\n    resetPartnersForm: () => initialState,\n  },\n  extraReducers: (builder) => {\n    builder\n      // get Directories\n      .addCase(getDirectories.pending, (state) => {\n        state.isLoading = true\n        state.isNetworkError = false\n        state.networkError = null\n      })\n      .addCase(getDirectories.fulfilled, (state, action) => {\n        state.isLoading = false\n        state.managers = action.payload.managers\n        state.types = action.payload.types\n        state.scopes = action.payload.scopes\n        state.sizes = action.payload.sizes\n        state.workFormats = action.payload.workFormats\n        state.employments = action.payload.employments\n      })\n      .addCase(getDirectories.rejected, (state, action) => {\n        state.isLoading = false\n        state.networkError = action.payload as IAPIError\n        state.isNetworkError = true\n      })\n\n      // CREATE PARTNERS FORM\n      .addCase(createPartnerForm.pending, (state) => {\n        state.isLoading = true\n        state.isNetworkError = false\n        state.networkError = null\n      })\n      .addCase(createPartnerForm.fulfilled, (state, action) => {\n        state.isLoading = false\n      })\n      .addCase(createPartnerForm.rejected, (state, action) => {\n        state.isLoading = false\n        state.networkError = action.payload as IAPIError\n        state.isNetworkError = true\n      })\n  },\n})\n\nexport const { setFormData, setCurrentTab, resetPartnersForm } = partnersFormSlice.actions\n\nexport default partnersFormSlice\n","import { createSlice } from '@reduxjs/toolkit'\nimport { getStats, getNotifications } from '../axios/metrics'\nimport { IMetricsState, IAPIError } from '../types/metrics/metrics-types'\n\nexport const initialState: IMetricsState = {\n  status: 'idle',\n  isError: false,\n  errorInfo: null,\n  notification: null,\n  funnelStats: null,\n  eventsStats: [],\n}\n\nconst metricsSlice = createSlice({\n  name: 'metrics',\n  initialState,\n  reducers: {\n    setNotificated(state) {\n      if (state.notification) {\n        state.notification.is_notificated = true\n      }\n    },\n    resetMetrics: () => initialState,\n  },\n  extraReducers: (builder) => {\n    builder\n\n      // GET NOTIFICATIONS\n      .addCase(getNotifications.pending, (state) => {\n        state.status = 'pending'\n        state.isError = false\n        state.errorInfo = null\n      })\n      .addCase(getNotifications.fulfilled, (state, action) => {\n        state.status = 'succeeded'\n        state.notification = { ...action.payload }\n      })\n      .addCase(getNotifications.rejected, (state, action) => {\n        const payload = action.payload as IAPIError\n        state.isError = true\n        state.errorInfo = payload\n        state.status = 'failed'\n      })\n\n      // GET STATS\n      .addCase(getStats.pending, (state) => {\n        state.status = 'pending'\n        state.isError = false\n        state.errorInfo = null\n      })\n      .addCase(getStats.fulfilled, (state, action) => {\n        state.status = 'succeeded'\n        const { all_stats, week_stats } = action.payload\n        if (all_stats) {\n          state.funnelStats = { ...all_stats }\n        }\n        if (week_stats) {\n          state.eventsStats = [...week_stats]\n        }\n      })\n      .addCase(getStats.rejected, (state, action) => {\n        const payload = action.payload as IAPIError\n        state.isError = true\n        state.errorInfo = payload\n        state.status = 'failed'\n      })\n  },\n})\n\nexport const { setNotificated, resetMetrics } = metricsSlice.actions\n\nexport default metricsSlice\n","import { createSlice } from '@reduxjs/toolkit'\nimport { IAPIError } from '../types/global-types'\nimport { IInitialState } from '../types/workshop/workshop-types'\nimport { createResponse, getProjects } from '../axios/student-projects'\n\nexport const initialState: IInitialState = {\n  isLockUpdate: false,\n  filters: {},\n  isLoading: false,\n  isNetworkError: false,\n  networkError: null,\n  studentsProjects: [],\n  charityProjects: [],\n  projectToView: null,\n  isSuccessResponse: false,\n}\n\nconst studentProjectsSlice = createSlice({\n  name: 'studentsWorkshop',\n  initialState,\n  reducers: {\n    resetSuccessResponseStatus(state) {\n      state.isSuccessResponse = false\n    },\n    saveFilters(state, action) {\n      state.filters = action.payload\n    },\n    setIsLockUpdate(state, action) {\n      state.isLockUpdate = action.payload\n    },\n    setProjectToView(state, action) {\n      state.projectToView = action.payload\n    },\n    setCharityProjectToViewed(state, action) {\n      const newProjects = [...state.charityProjects]\n      const changedIndex = state.charityProjects.findIndex((item) => item.id === action.payload)\n      newProjects[changedIndex].is_viewed = true\n      state.charityProjects = [...newProjects]\n    },\n    setStudentProjectToViewed(state, action) {\n      const newProjects = [...state.studentsProjects]\n      const changedIndex = state.studentsProjects.findIndex((item) => item.id === action.payload)\n      newProjects[changedIndex].is_viewed = true\n      state.studentsProjects = [...newProjects]\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      // Get projects\n      .addCase(getProjects.pending, (state) => {\n        state.isLoading = true\n        state.isNetworkError = false\n        state.networkError = null\n      })\n      .addCase(getProjects.fulfilled, (state, action) => {\n        state.isLoading = false\n        state.studentsProjects = action.payload.studentsProjects\n        state.charityProjects = action.payload.charityProjects\n      })\n      .addCase(getProjects.rejected, (state, action) => {\n        state.isLoading = false\n        state.networkError = action.payload as IAPIError\n        state.isNetworkError = true\n      })\n      //  create response\n      .addCase(createResponse.pending, (state) => {\n        state.isLoading = true\n        state.isNetworkError = false\n        state.networkError = null\n      })\n      .addCase(createResponse.fulfilled, (state, action) => {\n        state.isLoading = false\n        const isCharity = state.charityProjects.findIndex((item) => item.id === action.payload) >= 0\n        if (isCharity) {\n          const newProjects = [...state.charityProjects]\n          const changedIndex = state.charityProjects.findIndex((item) => item.id === action.payload)\n          newProjects[changedIndex].is_accepted = true\n          state.charityProjects = [...newProjects]\n          if (state.projectToView) state.projectToView.is_accepted = true\n        } else {\n          const newProjects = [...state.studentsProjects]\n          const changedIndex = state.studentsProjects.findIndex((item) => item.id === action.payload)\n          newProjects[changedIndex].is_accepted = true\n          state.studentsProjects = [...newProjects]\n          if (state.projectToView) state.projectToView.is_accepted = true\n        }\n        state.isSuccessResponse = true\n      })\n      .addCase(createResponse.rejected, (state, action) => {\n        state.isLoading = false\n        state.networkError = action.payload as IAPIError\n        state.isNetworkError = true\n      })\n  },\n})\n\nexport const {\n  setIsLockUpdate,\n  saveFilters,\n  setProjectToView,\n  setCharityProjectToViewed,\n  setStudentProjectToViewed,\n  resetSuccessResponseStatus,\n} = studentProjectsSlice.actions\n\nexport default studentProjectsSlice\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { ExperienceInfo, OnboardingBaseData, PersonalInfo, ResumeInfo } from '../types/onboarding/onboarding-types'\nimport { getOnboardingBaseData } from '../axios/onboarding'\nimport { IAPIError, IRequestInfo } from '../types/global-types'\n\ntype TInitialState = IRequestInfo & {\n  baseData: OnboardingBaseData | null\n}\n\nconst initialState: TInitialState = {\n  status: 'idle',\n  isError: false,\n  errorInfo: null,\n  baseData: null,\n}\n\nexport const onboardingSlice = createSlice({\n  name: 'onboarding',\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder\n      .addCase(getOnboardingBaseData.pending, (state) => {\n        state.status = 'pending'\n        state.isError = false\n        state.errorInfo = null\n      })\n      .addCase(getOnboardingBaseData.fulfilled, (state, action) => {\n        state.status = 'succeeded'\n        state.baseData = action.payload\n      })\n      .addCase(getOnboardingBaseData.rejected, (state, action) => {\n        state.status = 'failed'\n        state.isError = true\n        state.errorInfo = action.payload as IAPIError\n      })\n  },\n})\n\nexport default onboardingSlice\n","import { Middleware } from '@reduxjs/toolkit'\nimport showAchievementsNotifications from '../../utils/showAchievementsNotifications'\nimport { resetPartnersAchievements } from '../slices/student-vacancies-slice'\n\nexport const authMiddleware: Middleware =\n  ({ dispatch, getState }) =>\n  (next) =>\n  (action) => {\n    const result = next(action)\n    if (action.type?.startsWith('auth/')) {\n      const authState = getState().auth\n      const stateToSave = { isLoggedIn: authState.isLoggedIn, role: authState.role, profile: authState.profile }\n      localStorage.setItem('auth', JSON.stringify(stateToSave))\n      // Создаём/удаляем признак для скрытия метрик у консультанта и у менеджера вакансий\n      if (authState.role === 'consultant' || authState.role === 'vacancy_manager')\n        localStorage.setItem('metrics', JSON.stringify({ hideMetrics: false }))\n      if (authState.role === null && localStorage.getItem('metrics')) localStorage.removeItem('metrics')\n      // Удаляем сохранённый источник у студента\n      if (authState.role === null && localStorage.getItem('responseSource')) localStorage.removeItem('responseSource')\n    }\n    const studentVacanciesState = getState().studentVacancies\n    if (studentVacanciesState.achievements.length > 0) {\n      showAchievementsNotifications(studentVacanciesState.achievements, dispatch)\n      dispatch(resetPartnersAchievements())\n    }\n    return result\n  }\n","import { AnyAction, MiddlewareAPI } from 'redux'\nimport websocketSlice from '../slices/websocket-slice'\nimport showAchievementsNotifications from '../../utils/showAchievementsNotifications'\nimport { ApiStage } from '../types/achievements/achievements-types'\nimport { changeNotificationsCountState } from '../slices/hr-notifications-slice'\n\nconst { wsConnectionStart, wsConnectionStop, wsConnectionSuccess, wsConnectionError, wsConnectionClosed } =\n  websocketSlice.actions\n\nexport const socketMiddleware = () => (store: MiddlewareAPI) => {\n  let socket: WebSocket | null = null\n\n  return (next: (action: AnyAction) => void) => (action: AnyAction) => {\n    const { dispatch } = store\n    const { type, payload } = action\n\n    if (type === wsConnectionStart.type) {\n      const wsUrl: string = payload.token ? `${payload.url}?token=${payload.token}` : `${payload.url}`\n      socket = new WebSocket(wsUrl)\n    }\n\n    if (type === wsConnectionStop.type && socket) {\n      socket.close(1000, 'CLOSE_NORMAL')\n    }\n\n    if (socket) {\n      socket.onopen = () => {\n        dispatch(wsConnectionSuccess())\n      }\n\n      socket.onerror = () => {\n        dispatch(wsConnectionError())\n      }\n\n      socket.onmessage = (event) => {\n        const { data } = event\n        const { success, ...parsedData } = JSON.parse(data)\n        if (parsedData.message && parsedData.message === 'Invalid or missing token') {\n          if (socket) socket.close(1000, 'CLOSE_NORMAL')\n        }\n        const stages = parsedData?.achievements\n        const notifications_count: number = parsedData?.notifications_count\n        if (stages) {\n          showAchievementsNotifications(stages, dispatch)\n          stages.forEach((stage: ApiStage) => {\n            socket?.send(JSON.stringify({ success_id: stage?.success_id }))\n          })\n        }\n        if (notifications_count !== undefined && notifications_count !== null) {\n          dispatch(changeNotificationsCountState(notifications_count))\n        }\n      }\n\n      socket.onclose = () => {\n        dispatch(wsConnectionClosed())\n      }\n    }\n\n    next(action)\n  }\n}\n","import { configureStore, ThunkAction, Action, combineReducers } from '@reduxjs/toolkit'\nimport thunk from 'redux-thunk'\nimport { persistReducer } from 'redux-persist'\nimport storage from 'redux-persist/lib/storage'\nimport { FLUSH, PAUSE, PERSIST, PURGE, REGISTER, REHYDRATE } from 'redux-persist/es/constants'\nimport authSlice, { initialState } from '../slices/auth-slice'\nimport onboardingSlice from '../slices/onboarding-slice'\nimport { authMiddleware } from './middleware'\nimport vacanciesPageSlice from '../slices/vacancies-page-slice'\nimport metricsSlice from '../slices/metrics-slice'\nimport appSlice from '../slices/app-slice'\nimport achievementsSlice from '../slices/achievements-slice'\nimport diarySlice from '../slices/diary-slice'\nimport websocketSlice from '../slices/websocket-slice'\nimport { socketMiddleware } from './socketMiddleware'\nimport studentVacanciesSlice from '../slices/student-vacancies-slice'\nimport statisticsMetricsSlice from '../slices/statistics-metrics-slice'\nimport hrNotificationsSlice from '../slices/hr-notifications-slice'\nimport companiesPageSlice from '../slices/companies-page-slice'\nimport partnersFormSlice from '../slices/partners-form-slice'\nimport projectCreationSlice from '../slices/project-creation-slice'\nimport workshopProjectsListPageSlice from '../slices/workshop-projects-list-page-slice'\nimport studentProjectsSlice from '../slices/student-workshop-slice'\n\n// Основной конфиг специально держит в блеклисте все редьюсеры\n// Чтобы не сохранять то, что мы специально не перевели в хранилище\nconst persistConfig = {\n  key: 'root',\n  storage,\n  blacklist: [\n    'companiesPage',\n    'app',\n    'auth',\n    'onboarding',\n    'vacanciesPage',\n    'metrics',\n    'achievements',\n    'diary',\n    'ws',\n    'statisticsMetrics',\n    'hrNotifications',\n    'partnersForm',\n    'projectCreationPage',\n  ],\n}\n// Конфиг под сохранение компаний\nconst persistCompanyPageConfig = {\n  key: 'companiesPage',\n  storage,\n}\n\n// Конфиг под сохранение вакансий у студентов\nconst persistStudentVacanciesPageConfig = {\n  key: 'studentVacancies',\n  storage,\n}\n\n// Конфиг под сохранение проектов у менеджеров\nconst persistProjectManagerPageConfig = {\n  key: 'workshopProjectsListPage',\n  storage,\n}\n\n// Конфиг под сохранение проектов у студентосов\nconst persistStudentsProjectsPageConfig = {\n  key: 'studentsWorkshop',\n  storage,\n}\n\n// TODO пока убрал, потому что не понял нужно ли сохранять\n// const projectCreationPageConfig = {\n//   key: 'projectCreationPage',\n//   storage,\n// }\n\nexport const rootReducer = combineReducers({\n  app: appSlice.reducer,\n  auth: authSlice.reducer,\n  onboarding: onboardingSlice.reducer,\n  vacanciesPage: vacanciesPageSlice.reducer,\n  // Создали редьюсер с сохранением для компаний\n  companiesPage: persistReducer(persistCompanyPageConfig, companiesPageSlice.reducer),\n  metrics: metricsSlice.reducer,\n  achievements: achievementsSlice.reducer,\n  diary: diarySlice.reducer,\n  ws: websocketSlice.reducer,\n  // Редьюсер для сохранения состояния для вакансий\n  studentVacancies: persistReducer(persistStudentVacanciesPageConfig, studentVacanciesSlice.reducer),\n  statisticsMetrics: statisticsMetricsSlice.reducer,\n  hrNotifications: hrNotificationsSlice.reducer,\n  partnersForm: partnersFormSlice.reducer,\n  // Сохраняем в сторадж слайс созадния проекта\n  // projectCreationPage: persistReducer(projectCreationPageConfig, projectCreationSlice.reducer),\n  projectCreationPage: projectCreationSlice.reducer,\n  // Сохраняем в сторадж проекты\n  workshopProjectsListPage: persistReducer(persistProjectManagerPageConfig, workshopProjectsListPageSlice.reducer),\n  studentsWorkshop: persistReducer(persistStudentsProjectsPageConfig, studentProjectsSlice.reducer),\n})\n\n// Кастомный корневой редьюсер\nconst persistedReducer = persistReducer(persistConfig, rootReducer)\n\nconst loadFromLocalStorage = () => {\n  try {\n    const serialisedState = localStorage.getItem('auth')\n    if (serialisedState === null) return undefined\n    return JSON.parse(serialisedState)\n  } catch (e) {\n    return undefined\n  }\n}\n\nconst loadedAuthState = loadFromLocalStorage()\n\n/*  thunk добавил по инструкции\n *  When using Redux Persist without using the Thunk middleware, we‘d get an error in the browser’s console\n *  reading a non-serializable value was detected in the state.\n * */\n\nexport const setupStore = () =>\n  configureStore({\n    reducer: persistedReducer,\n    middleware: (getDefaultMiddleware) =>\n      getDefaultMiddleware({\n        serializableCheck: {\n          ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n        },\n      }).concat(thunk, authMiddleware, socketMiddleware()),\n    preloadedState: { auth: { ...initialState, ...loadedAuthState } },\n  })\n\nexport type AppStore = ReturnType<typeof setupStore>\nexport type AppDispatch = AppStore['dispatch']\nexport type TRootState = ReturnType<typeof rootReducer>\nexport type AppThunk<ReturnType = void> = ThunkAction<ReturnType, TRootState, unknown, Action<string>>\n","import { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    padding: '32px 40px 32px 40px',\n    height: '100vh',\n    display: 'grid',\n    placeItems: 'center',\n    backgroundSize: 'cover',\n    backgroundRepeat: 'no-repeat',\n    backgroundImage: `url(\"data:image/svg+xml,%3Csvg width='1920' height='1080' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cg clip-path='url(%23prefix__clip0)'%3E%3Cpath fill='%231A1B22' d='M0 0h1920v1080H0z'/%3E%3Cpath d='M1845 195c0 259.022-209.98 469-469 469-25.09 0-49.72-1.97-73.75-5.765l-3.21 5.563A478.511 478.511 0 001376 670c262.34 0 475-212.665 475-475 0-262.335-212.66-475-475-475-262.34 0-475 212.665-475 475 0 226.413 158.41 415.827 370.45 463.456l3.14-5.448C1064.32 606.66 907 419.202 907 195c0-259.022 209.98-469 469-469s469 209.978 469 469z' fill='%23fff'/%3E%3Cpath d='M1422.44 385.612L1073 990.86l442.48 255.46 364.8-631.855-417.27-240.911-3 5.196 412.08 237.911-358.81 621.469-432.08-249.466 346.44-600.052-5.2-3z' fill='%23488EFB'/%3E%3Cpath d='M-394.3 700.448l249.07-616.72 440.362 498.458L-394.3 700.448z' stroke='%23fff' stroke-width='4'/%3E%3C/g%3E%3Cdefs%3E%3CclipPath id='prefix__clip0'%3E%3Cpath fill='%23fff' d='M0 0h1920v1080H0z'/%3E%3C/clipPath%3E%3C/defs%3E%3C/svg%3E\")`,\n  },\n  rootSigned: {\n    background: '#FFFF',\n  },\n  rootBlack: {\n    display: 'flex',\n    background: '#FFFF',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n}))\n\nexport default useStyles\n","import React from 'react'\nimport { getStatus } from '../services/axios/auth'\nimport { useAppDispatch } from '../services/store/hooks'\nimport { STATUS_CHECK_PERIOD } from './constants'\nimport { enqueueSnackbar } from '../services/slices/app-slice'\nimport { setTimeoutId } from '../services/slices/auth-slice'\n\ntype TUseUpdateStudentStatus = () => { updateStudentStatus: () => void }\n\nconst useUpdateStudentStatus: TUseUpdateStudentStatus = () => {\n  const dispatch = useAppDispatch()\n\n  const request = () => {\n    try {\n      dispatch(getStatus())\n    } catch {\n      dispatch(\n        enqueueSnackbar({\n          info: {\n            type: 'error',\n            title: 'Ошибка обновления статуса',\n            message: 'Сообщи в поддержку',\n          },\n          options: {\n            key: new Date().getTime() + Math.random(),\n            autoHideDuration: 6000,\n          },\n        }),\n      )\n    }\n    dispatch(setTimeoutId(setTimeout(request, STATUS_CHECK_PERIOD)))\n  }\n  return {\n    updateStudentStatus: () => {\n      dispatch(setTimeoutId(setTimeout(request, STATUS_CHECK_PERIOD)))\n    },\n  }\n}\n\nexport default useUpdateStudentStatus\n","/* eslint-disable no-restricted-syntax */\nimport React, { useState, useEffect } from 'react'\nimport moment from 'moment'\nimport packageJson from '../../package.json'\n\nconst buildDateGreaterThan = (latestDate, currentDate) => {\n  const momLatestDateTime = moment(latestDate)\n  const momCurrentDateTime = moment(currentDate)\n\n  if (momLatestDateTime.isAfter(momCurrentDateTime)) {\n    return true\n  }\n\n  return false\n}\n\nfunction withClearCache(Component) {\n  function ClearCacheComponent(props) {\n    const [isLatestBuildDate, setIsLatestBuildDate] = useState(false)\n\n    useEffect(() => {\n      fetch('/meta.json')\n        .then((response) => response.json())\n        .then((meta) => {\n          const latestVersionDate = meta.buildDate\n\n          const currentVersionDate = packageJson.buildDate\n\n          const shouldForceRefresh = buildDateGreaterThan(latestVersionDate, currentVersionDate)\n          if (shouldForceRefresh) {\n            setIsLatestBuildDate(false)\n            refreshCacheAndReload()\n          } else {\n            setIsLatestBuildDate(true)\n          }\n        })\n    }, [])\n\n    const refreshCacheAndReload = () => {\n      if (caches) {\n        caches.keys().then((names) => {\n          for (const name of names) {\n            caches.delete(name)\n          }\n        })\n      }\n      // delete browser cache and hard reload\n      window.location.reload(true)\n    }\n\n    return <React.Fragment>{isLatestBuildDate ? <Component {...props} /> : null}</React.Fragment>\n  }\n\n  return ClearCacheComponent\n}\n\nexport default withClearCache\n","import React, { useEffect } from 'react'\nimport loadable from '@loadable/component'\nimport SwiperCore, { Pagination } from 'swiper'\n\nimport { createTheme, ThemeProvider } from '@material-ui/core/styles'\nimport { Routes, Route, Navigate } from 'react-router-dom'\nimport { SnackbarProvider } from 'notistack'\nimport theme from './App.theme'\nimport useStyles from './App.styles'\nimport { useAppDispatch, useAppSelector } from '../../services/store/hooks'\nimport { clearTimeoutId } from '../../services/slices/auth-slice'\nimport useUpdateStudentStatus from '../../utils/useUpdateStudentStatus'\nimport LoadingOverlay from '../Sub/DataTable/LoadingOverlay/LoadingOverlay'\nimport withClearCache from '../../utils/withClearCache'\n\nconst OnboardingPage = loadable(() => import('../../pages/students/OnboardingPage/OnboardingPage'), {\n  fallback: <LoadingOverlay />,\n})\nconst OnboardingFormPersonal = loadable(\n  () => import('../Main/OnboardingPage/OnboardingFormPersonal/OnboardingFormPersonal'),\n  { fallback: <LoadingOverlay /> },\n)\nconst OnboardingFormExperience = loadable(\n  () => import('../Main/OnboardingPage/OnboardingFormExperience/OnboardingFormExperience'),\n  { fallback: <LoadingOverlay /> },\n)\nconst OnboardingFormProjects = loadable(\n  () => import('../Main/OnboardingPage/OnboardingFormProjects/OnboardingFormProjects'),\n  { fallback: <LoadingOverlay /> },\n)\nconst OnboardingFormResume = loadable(\n  () => import('../Main/OnboardingPage/OnboardingFormResume/OnboardingFormResume'),\n  { fallback: <LoadingOverlay /> },\n)\nconst OnboardingFormContacts = loadable(\n  () => import('../Main/OnboardingPage/OnboardingFormContacts/OnboardingFormContacts'),\n  { fallback: <LoadingOverlay /> },\n)\n\nconst LoginPage = loadable(() => import('../../pages/auth/LoginPage/LoginPage'), { fallback: <LoadingOverlay /> })\nconst RegisterPage = loadable(() => import('../../pages/auth/RegisterPage/RegisterPage'), {\n  fallback: <LoadingOverlay />,\n})\nconst ResetPassword = loadable(() => import('../../pages/auth/ResetPassword/ResetPassword'), {\n  fallback: <LoadingOverlay />,\n})\n\nconst DiaryPage = loadable(() => import('../../pages/students/DiaryPage/DiaryPage'), { fallback: <LoadingOverlay /> })\nconst FeedPage = loadable(() => import('../../pages/students/FeedPage/FeedPage'), { fallback: <LoadingOverlay /> })\nconst MetricsPage = loadable(() => import('../../pages/students/MetricsPage/MetricsPage'), {\n  fallback: <LoadingOverlay />,\n})\nconst VacanciesPage = loadable(() => import('../../pages/students/VacanciesPage/VacanciesPage'), {\n  fallback: <LoadingOverlay />,\n})\n\nconst WorkshopPage = loadable(() => import('../../pages/students/WorkshopPage/WorkshopPage'), {\n  fallback: <LoadingOverlay />,\n})\n\nconst VacancyViewPage = loadable(() => import('../../pages/students/VacancyViewPage/VacancyViewPage'), {\n  fallback: <LoadingOverlay />,\n})\n\nconst ApplicationsPage = loadable(() => import('../../pages/consultants/ApplicationsPage/ApplicationsPage'), {\n  fallback: <LoadingOverlay />,\n})\nconst StudentsListPage = loadable(() => import('../../pages/consultants/StudentsListPage/StudentsListPage'), {\n  fallback: <LoadingOverlay />,\n})\nconst StudentsListPageNew = loadable(() => import('../../pages/consultants/StudentsListPageNew/StudentsListPageNew'), {\n  fallback: <LoadingOverlay />,\n})\nconst StudentsDiaryPage = loadable(() => import('../../pages/consultants/StudentsDiaryPage/StudentsDiaryPage'), {\n  fallback: <LoadingOverlay />,\n})\nconst ConsultantFeedPage = loadable(() => import('../../pages/consultants/ConsultantFeedPage/ConsultantFeedPage'), {\n  fallback: <LoadingOverlay />,\n})\nconst ConsultantMetricsPage = loadable(\n  () => import('../../pages/consultants/ConsultantMetricsPage/ConsultantMetricsPage'),\n  { fallback: <LoadingOverlay /> },\n)\nconst CohortPage = loadable(() => import('../../pages/consultants/CohortPage/CohortPage'), {\n  fallback: <LoadingOverlay />,\n})\nconst LandingPage = loadable(() => import('../../pages/landing/landing'), { fallback: <LoadingOverlay /> })\nconst VacanciesListPage = loadable(() => import('../../pages/vacancies/VacanciesListPageNew/VacanciesListPage'), {\n  fallback: <LoadingOverlay />,\n})\nconst TestPage = loadable(() => import('../../pages/students/TestPage/TestPage'), { fallback: <LoadingOverlay /> })\nconst ContactsPage = loadable(() => import('../../pages/students/ContactsPage/ContactsPage'), {\n  fallback: <LoadingOverlay />,\n})\nconst StatisticsPage = loadable(() => import('../../pages/consultants/StatisticsPage/StatisticsPage'), {\n  fallback: <LoadingOverlay />,\n})\nconst CompaniesListPage = loadable(() => import('../../pages/vacancies/CompaniesListPage/CompaniesListPage'), {\n  fallback: <LoadingOverlay />,\n})\nconst AboutCompanyPage = loadable(() => import('../../pages/vacancies/AboutCompanyPage/AboutCompanyPage'), {\n  fallback: <LoadingOverlay />,\n})\n\nconst AboutVacancyPage = loadable(() => import('../../pages/vacancies/AboutVacancyPage/AboutVacancyPage'), {\n  fallback: <LoadingOverlay />,\n})\n\nconst ConsultantExportPage = loadable(\n  () => import('../../pages/ExportPages/ConsultantExportPage/ConsultantExportPage'),\n  {\n    fallback: <LoadingOverlay />,\n  },\n)\n\nconst HRExportPage = loadable(() => import('../../pages/ExportPages/HRExportPage/HRExportPage'), {\n  fallback: <LoadingOverlay />,\n})\n\nconst PartnersFormPage = loadable(() => import('../../pages/other/partners-form-page/partners-form-page'), {\n  fallback: <LoadingOverlay />,\n})\n\nconst PartnersFormSuccessPage = loadable(\n  () => import('../../pages/other/partners-form-success/partners-form-success'),\n  {\n    fallback: <LoadingOverlay />,\n  },\n)\n\nconst ProjectCreationPage = loadable(() => import('../../pages/workshop/project-creation-page/project-creation-page'), {\n  fallback: <LoadingOverlay />,\n})\n\nconst AboutProjectPage = loadable(() => import('../../pages/workshop/about-project-page/AboutProjectPage'), {\n  fallback: <LoadingOverlay />,\n})\n\nconst WorkshopProjectsListPage = loadable(\n  () => import('../../pages/workshop/workshop-projects-list-page/WorkshopProjectsListPage'),\n  {\n    fallback: <LoadingOverlay />,\n  },\n)\n\nconst WorkshopViewPage = loadable(() => import('../../pages/students/WorkshopViewPage/WorkshopViewPage'), {\n  fallback: <LoadingOverlay />,\n})\n\nconst ServerError404Page = loadable(() => import('../../pages/ServerErrorPages/ServerError404Page/ServerError404Page'))\nconst ServerError500Page = loadable(() => import('../../pages/ServerErrorPages/ServerError500Page/ServerError500Page'))\n\nconst AuthLayout = loadable(() => import('../Layouts/AuthLayout/AuthLayout'))\nconst PageLayout = loadable(() => import('../Layouts/PageLayout/PageLayout'))\nconst MainLayout = loadable(() => import('../Layouts/MainLayout/MainLayout'))\nconst DiaryLayout = loadable(() => import('../Layouts/DiaryLayout/DiaryLayout'))\nconst ProjectCreationLayout = loadable(() => import('../Layouts/ProjectCreationLayout/ProjectCreationLayout'))\nconst PartnersLayout = loadable(() => import('../Layouts/PartnersLayout/PartnersLayout'))\nconst RequireUserAuth = loadable(() => import('../RequireAuth/RequireUserAuth/RequireUserAuth'))\nconst RequireConsultantAuth = loadable(() => import('../RequireAuth/RequireConsultantAuth/RequireConsultantAuth'))\nconst RequireVacancyAuth = loadable(() => import('../RequireAuth/RequireVacancyAuth/RequireVacancyAuth'))\n\nSwiperCore.use([Pagination])\n\nfunction App() {\n  const classes = useStyles()\n  const { role, profile, timeoutId } = useAppSelector((store) => store.auth)\n  const dispatch = useAppDispatch()\n  const { updateStudentStatus } = useUpdateStudentStatus()\n  const themeOptions = React.useMemo(\n    () =>\n      createTheme({\n        palette: {\n          ...theme.palette,\n        },\n        typography: {\n          ...theme.typography,\n        },\n        overrides: {\n          MuiButton: {\n            root: {\n              width: '100%',\n              minHeight: '50px',\n              backgroundColor: theme.palette.button.primary,\n              color: theme.palette.button.primaryTextColor,\n              '&:hover': {\n                backgroundColor: theme.palette.button.primaryHover,\n              },\n            },\n            label: {\n              color: theme.palette.button.primaryTextColor,\n            },\n            textPrimary: {\n              '&:hover': {\n                backgroundColor: 'none',\n              },\n            },\n          },\n        },\n      }),\n    [theme.palette],\n  )\n  const [snack, setSnack] = React.useState({\n    open: false,\n    header: 'Форма отправлена',\n    message: '',\n  })\n\n  const { REACT_APP_IS_DEVTEST_SERVER } = process.env\n\n  // Слушаем пользователя и если аккаунт юзера, вешаем опрашивалку\n  useEffect(() => {\n    if (role === 'user' && profile?.first_name && !timeoutId) updateStudentStatus()\n    return () => {\n      if (timeoutId) {\n        clearTimeout(timeoutId)\n        dispatch(clearTimeoutId())\n      }\n    }\n  }, [role, profile?.first_name])\n\n  return (\n    <ThemeProvider theme={themeOptions}>\n      <SnackbarProvider>\n        <Routes>\n          <Route index path=\"/\" element={<LandingPage />} />\n          <Route path=\"/\" element={<PageLayout />}>\n            <Route\n              path=\"partners-form\"\n              element={\n                <main className={classes.root}>\n                  <PartnersFormPage />\n                </main>\n              }\n            />\n            <Route\n              path=\"partners-form-success\"\n              element={\n                <main className={classes.root}>\n                  <PartnersFormSuccessPage />\n                </main>\n              }\n            />\n          </Route>\n          {/* Роуты авторизации и онбординга (с лэйаутом AuthLayout: без шапки, с футером) */}\n          <Route path=\"/\" element={<AuthLayout />}>\n            <Route\n              path=\"sign-in\"\n              element={\n                <main className={classes.root}>\n                  <LoginPage />\n                </main>\n              }\n            />\n            <Route\n              path=\"sign-up\"\n              element={\n                <main className={classes.root}>\n                  <RegisterPage />\n                </main>\n              }\n            />\n            <Route\n              path=\"reset-password\"\n              element={\n                <main className={classes.root}>\n                  <ResetPassword />\n                </main>\n              }\n            />\n          </Route>\n          <Route path=\"onboarding\">\n            <Route index element={<Navigate to=\"/onboarding/personal-info\" />} />\n            <Route\n              path=\"personal-info\"\n              element={\n                <RequireUserAuth>\n                  <main className={classes.rootSigned}>\n                    <OnboardingPage title=\"Заполни все поля на странице, чтобы начать работу с воронкой трудоустройства\">\n                      <OnboardingFormPersonal />\n                    </OnboardingPage>\n                  </main>\n                </RequireUserAuth>\n              }\n            />\n            <Route\n              path=\"experience\"\n              element={\n                <RequireUserAuth>\n                  <main className={classes.rootSigned}>\n                    <OnboardingPage title=\"После сохранения ты сможешь изменить информацию о себе в настройках\">\n                      <OnboardingFormExperience />\n                    </OnboardingPage>\n                  </main>\n                </RequireUserAuth>\n              }\n            />\n            <Route\n              path=\"projects\"\n              element={\n                <RequireUserAuth>\n                  <main className={classes.rootSigned}>\n                    <OnboardingPage title=\"Добавь данные для работы с Pet-проектами и проектами Мастерской. Ты можешь сделать это позднее в редактировании профиля\">\n                      <OnboardingFormProjects />\n                    </OnboardingPage>\n                  </main>\n                </RequireUserAuth>\n              }\n            />\n            <Route\n              path=\"resume\"\n              element={\n                <RequireUserAuth>\n                  <main className={classes.rootSigned}>\n                    <OnboardingPage\n                      title={[\n                        'Для откликов на партнёрские вакансии необходимо загрузить своё резюме и добавить ссылку на портфолио.',\n                        <br />,\n                        'Ты можешь сделать это позднее в редактировании профиля',\n                      ]}\n                    >\n                      <OnboardingFormResume />\n                    </OnboardingPage>\n                  </main>\n                </RequireUserAuth>\n              }\n            />\n            <Route\n              path=\"contacts\"\n              element={\n                <RequireUserAuth>\n                  <main className={classes.rootSigned}>\n                    <OnboardingPage\n                      title={[\n                        'Для откликов на партнёрские вакансии и проекты мастерской необходимо загрузить своё резюме и контакты для связи.',\n                        <br />,\n                        'Ты можешь сделать это позднее в редактировании профиля',\n                      ]}\n                    >\n                      <OnboardingFormContacts />\n                    </OnboardingPage>\n                  </main>\n                </RequireUserAuth>\n              }\n            />\n          </Route>\n          {/* Роуты страниц пользователя (с лэйаутом ProjectCreationLayout */}\n          <Route path=\"/\" element={<ProjectCreationLayout />}>\n            {REACT_APP_IS_DEVTEST_SERVER && (\n              <Route\n                path=\"test-page\"\n                element={\n                  <RequireUserAuth>\n                    <ProjectCreationPage />\n                  </RequireUserAuth>\n                }\n              />\n            )}\n          </Route>\n          {/* Роуты страниц пользователя (с лэйаутом DiaryLayout: с шапкой, без футера, с сайдбаром) */}\n          <Route path=\"/\" element={<DiaryLayout snack={snack} setSnack={setSnack} />}>\n            {/* <Route\n              index\n              element={\n                <RequireUserAuth>\n                  <DiaryPage setSnack={setSnack} />\n                </RequireUserAuth>\n              }\n            /> */}\n            <Route\n              path=\"diary\"\n              element={\n                <RequireUserAuth>\n                  <DiaryPage setSnack={setSnack} />\n                </RequireUserAuth>\n              }\n            />\n            {/* {REACT_APP_IS_DEVTEST_SERVER && (\n              <Route\n                path=\"test-page\"\n                element={\n                  <RequireUserAuth>\n                    <TestPage />\n                  </RequireUserAuth>\n                }\n              />\n            )} */}\n            <Route\n              path=\"feed\"\n              element={\n                <RequireUserAuth>\n                  <FeedPage setSnack={setSnack} />\n                </RequireUserAuth>\n              }\n            />\n            <Route\n              path=\"contacts\"\n              element={\n                <RequireUserAuth>\n                  <ContactsPage setSnack={setSnack} />\n                </RequireUserAuth>\n              }\n            />\n            <Route\n              path=\"metrics\"\n              element={\n                <RequireUserAuth>\n                  <MetricsPage setSnack={setSnack} />\n                </RequireUserAuth>\n              }\n            />\n          </Route>\n          <Route path=\"/vacancies\" element={<PartnersLayout snack={snack} setSnack={setSnack} />}>\n            <Route\n              index\n              element={\n                <RequireUserAuth>\n                  <VacanciesPage setSnack={setSnack} />\n                </RequireUserAuth>\n              }\n            />\n\n            <Route path=\":id\">\n              <Route\n                path=\"\"\n                element={\n                  <RequireUserAuth>\n                    <VacancyViewPage />\n                  </RequireUserAuth>\n                }\n              />\n              <Route\n                path=\":slug\"\n                element={\n                  <RequireUserAuth>\n                    <VacancyViewPage />\n                  </RequireUserAuth>\n                }\n              />\n            </Route>\n          </Route>\n          <Route path=\"/workshop\" element={<PartnersLayout snack={snack} setSnack={setSnack} />}>\n            <Route\n              index\n              element={\n                <RequireUserAuth>\n                  <WorkshopPage setSnack={setSnack} />\n                </RequireUserAuth>\n              }\n            />\n            <Route path=\":id\">\n              <Route\n                path=\"\"\n                element={\n                  <RequireUserAuth>\n                    <WorkshopViewPage setSnack={setSnack} />\n                  </RequireUserAuth>\n                }\n              />\n              <Route\n                path=\":slug\"\n                element={\n                  <RequireUserAuth>\n                    <WorkshopViewPage setSnack={setSnack} />\n                  </RequireUserAuth>\n                }\n              />\n            </Route>\n          </Route>\n          {/* Роуты страниц консультанта */}\n          <Route path=\"/consultant\" element={<MainLayout snack={snack} setSnack={setSnack} />}>\n            <Route index element={<Navigate to=\"/consultant/students\" />} />\n            <Route\n              path=\"applications\"\n              element={\n                <RequireConsultantAuth>\n                  <ApplicationsPage setSnack={setSnack} />\n                </RequireConsultantAuth>\n              }\n            />\n            <Route\n              path=\"test-page\"\n              element={\n                <RequireConsultantAuth>\n                  <TestPage />\n                </RequireConsultantAuth>\n              }\n            />\n            <Route\n              path=\"students\"\n              element={\n                <RequireConsultantAuth>\n                  <StudentsListPageNew setSnack={setSnack} />\n                </RequireConsultantAuth>\n              }\n            />\n            <Route\n              path=\"students2\"\n              element={\n                <RequireConsultantAuth>\n                  <StudentsListPage setSnack={setSnack} />\n                </RequireConsultantAuth>\n              }\n            />\n            <Route\n              path=\"statistics\"\n              element={\n                <RequireConsultantAuth>\n                  <StatisticsPage setSnack={setSnack} />\n                </RequireConsultantAuth>\n              }\n            />\n            <Route\n              path=\"feed\"\n              element={\n                <RequireConsultantAuth>\n                  <ConsultantFeedPage setSnack={setSnack} />\n                </RequireConsultantAuth>\n              }\n            >\n              <Route\n                path=\":studentId\"\n                element={\n                  <RequireConsultantAuth>\n                    <ConsultantFeedPage setSnack={setSnack} />\n                  </RequireConsultantAuth>\n                }\n              />\n            </Route>\n            <Route\n              path=\"diary\"\n              element={\n                <RequireConsultantAuth>\n                  <StudentsDiaryPage setSnack={setSnack} />\n                </RequireConsultantAuth>\n              }\n            />\n            <Route\n              path=\"metrics\"\n              element={\n                <RequireConsultantAuth>\n                  <ConsultantMetricsPage />\n                </RequireConsultantAuth>\n              }\n            />\n            <Route\n              path=\"cohorts\"\n              element={\n                <RequireConsultantAuth>\n                  <CohortPage setSnack={setSnack} />\n                </RequireConsultantAuth>\n              }\n            />\n            <Route\n              path=\"export\"\n              element={\n                <RequireConsultantAuth>\n                  <ConsultantExportPage setSnack={setSnack} />\n                </RequireConsultantAuth>\n              }\n            />\n          </Route>\n          {/* Роуты страницы менеджера по вакансиям */}\n          <Route path=\"/vacancies\" element={<MainLayout snack={snack} setSnack={setSnack} />}>\n            <Route\n              path=\"companies\"\n              element={\n                <RequireVacancyAuth>\n                  <CompaniesListPage setSnack={setSnack} />\n                </RequireVacancyAuth>\n              }\n            />\n            <Route\n              path=\"export-page\"\n              element={\n                <RequireVacancyAuth>\n                  <HRExportPage setSnack={setSnack} />\n                </RequireVacancyAuth>\n              }\n            />\n            <Route\n              path=\"about-company\"\n              element={\n                <RequireVacancyAuth>\n                  <AboutCompanyPage setSnack={setSnack} />\n                </RequireVacancyAuth>\n              }\n            />\n            <Route\n              path=\"about-vacancy\"\n              element={\n                <RequireVacancyAuth>\n                  <AboutVacancyPage setSnack={setSnack} />\n                </RequireVacancyAuth>\n              }\n            />\n            <Route index element={<Navigate to=\"/vacancies/list\" />} />\n            <Route\n              path=\"list\"\n              element={\n                <RequireVacancyAuth>\n                  <VacanciesListPage setSnack={setSnack} />\n                </RequireVacancyAuth>\n              }\n            />\n          </Route>\n          {/* Роуты менеджера проектов */}\n          <Route path=\"/workshop-managers\" element={<MainLayout snack={snack} setSnack={setSnack} />}>\n            <Route index element={<Navigate to=\"/workshop-managers/projects\" />} />\n            <Route path=\"create-project\" element={<ProjectCreationLayout />}>\n              <Route path=\"\" element={<ProjectCreationPage />} />\n            </Route>\n            <Route\n              path=\"projects\"\n              element={\n                // <RequireConsultantAuth>\n                <WorkshopProjectsListPage setSnack={setSnack} />\n                // </RequireConsultantAuth>\n              }\n            />\n            <Route\n              path=\"about-project\"\n              element={\n                // <RequireConsultantAuth>\n                <AboutProjectPage setSnack={setSnack} />\n                // </RequireConsultantAuth>\n              }\n            />\n          </Route>\n          <Route path=\"500\" element={<ServerError500Page />} />\n          {/* Все нераспознанные роуты отправляем на 404 */}\n          <Route path=\"*\" element={<ServerError404Page />} />\n        </Routes>\n      </SnackbarProvider>\n    </ThemeProvider>\n  )\n}\n\nconst ClearCacheComponent = withClearCache(App)\n\nfunction NoCacheApp() {\n  return <ClearCacheComponent />\n}\n\nexport default NoCacheApp\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import React, { useEffect } from 'react'\nimport { Helmet } from 'react-helmet'\nimport { useLocation } from 'react-router-dom'\n\nconst WithYandexMetrics = ({ children }) => {\n  const counterId = process.env.REACT_APP_YANDEX_METRICS_COUNTER\n  const location = useLocation()\n  useEffect(() => {\n    if (window.ym) {\n      window.ym(counterId, 'init', {\n        defer: true,\n        clickmap: true,\n        trackLinks: true,\n        accurateTrackBounce: true,\n        webvisor: true,\n        triggerEvent: true,\n      })\n    }\n  }, [])\n\n  useEffect(() => {\n    if (window?.ym) {\n      window.ym(counterId, 'hit', window.location.href)\n    }\n  }, [location?.pathname])\n\n  return (\n    <>\n      {counterId && (\n        <Helmet>\n          <script type=\"text/javascript\">\n            {`(function(m,e,t,r,i,k,a){m[i]=m[i]||function(){(m[i].a=m[i].a||[]).push(arguments)};\nm[i].l=1*new Date();k=e.createElement(t),a=e.getElementsByTagName(t)[0],k.async=1,k.src=r,a.parentNode.insertBefore(k,a)})\n(window, document, \"script\", \"https://mc.yandex.ru/metrika/tag.js\", \"ym\");`}\n          </script>\n          <noscript>\n            {`\n           <div>\n            <img\n              src=\"https://mc.yandex.ru/watch/${counterId}\"\n              style=\"position:absolute; left:-9999px;\"\n              alt=\"\"\n            />\n          </div>\n          `}\n          </noscript>\n        </Helmet>\n      )}\n      {children}\n    </>\n  )\n}\n\nexport default WithYandexMetrics\n","import React from 'react'\nimport './index.css'\nimport * as Sentry from '@sentry/react'\nimport { BrowserTracing } from '@sentry/tracing'\n// Import Swiper styles\nimport 'swiper/swiper-bundle.min.css'\nimport 'swiper/swiper.min.css'\nimport ReactDOM from 'react-dom'\nimport { BrowserRouter } from 'react-router-dom'\nimport { Provider } from 'react-redux'\nimport { PersistGate } from 'redux-persist/integration/react'\nimport { persistStore } from 'redux-persist'\nimport { setupStore } from './services/store/store'\nimport App from './components/App/App'\nimport reportWebVitals from './reportWebVitals'\nimport WithYandexMetrics from './components/WithYandexMetrics/WithYandexMetrics'\n\nconst store = setupStore()\nexport const persistor = persistStore(store)\n\nconst { REACT_APP_SENTRY_PROJECT, REACT_APP_SENTRY_RELEASE } = process.env\n\nif (REACT_APP_SENTRY_PROJECT) {\n  // eslint-disable-next-line no-nested-ternary\n  const dsnUrl = process.env.REACT_APP_SENTRY_DSN\n  Sentry.init({\n    dsn: dsnUrl,\n    integrations: [new BrowserTracing()],\n    release: REACT_APP_SENTRY_RELEASE,\n    // eslint-disable-next-line no-nested-ternary\n    environment: REACT_APP_SENTRY_PROJECT !== 'students-diary-front-prod' ? 'dev' : 'prod',\n    // На продакшене debug выключим, чтобы не засорял консоль\n    debug: REACT_APP_SENTRY_PROJECT !== 'students-diary-front-prod',\n    // Диалоговое окно с \"введите что произошло\"\n    // eslint-disable-next-line no-unused-vars\n    beforeSend(event, hint) {\n      // Check if it is an exception, and if so, show the report dialog\n      if (event.exception) {\n        Sentry.showReportDialog({ eventId: event.event_id })\n      }\n      return event\n    },\n    // We recommend adjusting this value in production, or using tracesSampler\n    // for finer control\n    // Попробую 0.7, чтобы не ловить 429 ошибку\n    tracesSampleRate: 0.7,\n    // Опция, чтобы не крашиться из-за ошибки ResizeObserver\n    // Это какой-то редкий баг некоторых версий бразуеров\n    ignoreErrors: ['ResizeObserver loop limit exceeded'],\n  })\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <Sentry.ErrorBoundary fallback={<p>Что-то пошло не так. Обновите страницу</p>}>\n      <BrowserRouter>\n        <Provider store={store}>\n          <PersistGate loading={null} persistor={persistor}>\n            <WithYandexMetrics>\n              <App />\n            </WithYandexMetrics>\n          </PersistGate>\n        </Provider>\n      </BrowserRouter>\n    </Sentry.ErrorBoundary>\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n","import { createAsyncThunk } from '@reduxjs/toolkit'\nimport { AxiosError } from 'axios'\nimport {\n  API_HR_PART_VACANCY_ENDPOINT,\n  API_HR_PART_DIRECTORY_ENDPOINT,\n  API_HR_PART_VACANCY_BY_ID_ENDPOINT,\n  API_STUDENT_BY_ID_ENDPOINT,\n  API_HR_PART_VACANCY_INFO_ENDPOINT,\n  API_HR_PART_STATISTIC_ENDPOINT,\n  API_HR_PART_HR_SOURCES_ENDPOINT,\n  API_HR_PART_HR_PROFILES_ENDPOINT,\n  API_HR_PART_DRAFT_VACANCY_ENDPOINT,\n} from '../../utils/constants'\nimport api from './settings'\nimport {\n  IDirectoriesResponse,\n  IHRVacancyHeader,\n  IParams,\n  IProfilesDirectoryResponse,\n  ISources,\n  ISourcesDirectoryResponse,\n  TGetVacanciesData,\n  TGetVacancyInfo,\n  TPatchData,\n  TPatchStudentData,\n} from '../types/vacacies-page-types/vacancies-page-types'\n\nexport const getVacanciesList = createAsyncThunk(\n  'vacancies-page/getVacanciesList',\n  async (data: TGetVacanciesData, { rejectWithValue }) => {\n    try {\n      const { paramsSerializer } = data\n      const response = await api.get(API_HR_PART_VACANCY_ENDPOINT, {\n        params: { ...data.hook.filters },\n        paramsSerializer,\n      })\n      // return Promise.resolve(response.data)\n      return response?.data\n    } catch (e) {\n      const err = e as AxiosError\n      return rejectWithValue(err?.response)\n    }\n  },\n)\n\nexport const getVacanciesStatistic = createAsyncThunk(\n  'vacancies-page/getVacanciesStatistic',\n  async (data: TGetVacanciesData, { rejectWithValue }) => {\n    try {\n      const { paramsSerializer } = data\n      const response = await api.get(API_HR_PART_STATISTIC_ENDPOINT, {\n        params: { ...data.hook.filters },\n        paramsSerializer,\n      })\n      return response?.data\n    } catch (e) {\n      const err = e as AxiosError\n      return rejectWithValue(err?.response)\n    }\n  },\n)\n\nexport const getDirectories = createAsyncThunk(\n  'vacancies-page/getDirectories',\n  async (_: void, { rejectWithValue }) => {\n    try {\n      const response = await api.get(API_HR_PART_DIRECTORY_ENDPOINT)\n      const response_sources = await api.get(API_HR_PART_HR_SOURCES_ENDPOINT)\n      const response_profiles = await api.get(API_HR_PART_HR_PROFILES_ENDPOINT)\n      const sourcesData: Array<ISourcesDirectoryResponse> = response_sources?.data\n      const profilesData: Array<IProfilesDirectoryResponse> = response_profiles?.data\n      const rawData: IDirectoriesResponse = response?.data\n      const courses = rawData?.courses\n      const statuses = rawData?.vacancies_status?.map((s) => ({ ...s, label: s?.value }))\n      const studentStatuses = rawData?.student_status?.map((s) => ({ ...s, label: s?.value }))\n      const currencies = rawData?.currencies?.map((currency) => ({\n        id: currency.id,\n        name: currency.name,\n        icon: currency.label,\n      }))\n      const employmentItems = rawData?.employment?.map((e) => ({ ...e, name: e?.value }))\n      const workFormatItems = rawData?.work_format?.map((w) => ({ ...w, name: w?.value }))\n      const jobApplicationItems = rawData?.design_formats?.map((d) => ({ ...d, name: d?.value }))\n      const experienceItems = rawData?.experience_types\n      const educationItems = rawData?.education_types\n      const profilesItems = profilesData?.map((p) => ({ id: p.id, name: `${p.first_name} ${p.last_name}` }))\n      const sourcesItems: Array<ISources> = sourcesData?.map((s) => ({ id: s.id, name: s.title }))\n      return {\n        filters: {\n          courses,\n          statuses,\n          profiles: profilesItems,\n          sources: sourcesItems,\n        },\n        directoriesData: {\n          courses,\n          statuses,\n          studentStatuses,\n          currencies,\n          employmentItems,\n          workFormatItems,\n          jobApplicationItems,\n          experienceItems,\n          educationItems,\n          profilesItems,\n          sourcesItems,\n        },\n      }\n    } catch (e) {\n      const typedError = e as AxiosError\n      return rejectWithValue(typedError?.response)\n    }\n  },\n)\n\nexport const patchVacancyStatus = createAsyncThunk(\n  'vacancies-page/patchVacancyStatus',\n  async (data: TPatchData, { rejectWithValue }) => {\n    try {\n      const response = await api.patch(API_HR_PART_VACANCY_BY_ID_ENDPOINT(data.vacancyId), {\n        vacancy_status: data.status.status,\n      })\n      return {\n        updatedRow: response.data,\n      }\n    } catch (e) {\n      const typedError = e as AxiosError\n      return rejectWithValue(typedError?.response)\n    }\n  },\n)\n\nexport const postDraftVacancy = createAsyncThunk(\n  'vacancies-page/postDraftVacancy',\n  async (data: any, { rejectWithValue }) => {\n    try {\n      const response = await api.post(API_HR_PART_DRAFT_VACANCY_ENDPOINT, data)\n      return response.data\n    } catch (e) {\n      const typedError = e as AxiosError\n      return rejectWithValue(typedError?.response)\n    }\n  },\n)\n\nexport const patchStudentStatus = createAsyncThunk(\n  'vacancies-page/patchStudentStatus',\n  async (data: TPatchStudentData, { rejectWithValue }) => {\n    try {\n      const response = await api.patch(API_STUDENT_BY_ID_ENDPOINT(data.studentId), data.status)\n      return {\n        updatedRow: response.data,\n      }\n    } catch (e) {\n      const typedError = e as AxiosError\n      return rejectWithValue(typedError?.response)\n    }\n  },\n)\n\nexport const getInfo = createAsyncThunk(\n  'vacancies-page/getInfo',\n  async (data: TGetVacancyInfo, { rejectWithValue }) => {\n    const params: IParams = {}\n    if (data.searchQuery) params.search = data.searchQuery\n    try {\n      const response = await api.get(API_HR_PART_VACANCY_INFO_ENDPOINT(data.id), {\n        params,\n      })\n      const header_response = await api.get(API_HR_PART_VACANCY_BY_ID_ENDPOINT(data.id))\n\n      return {\n        headerData: header_response.data,\n        tableData: response.data,\n      }\n    } catch (e) {\n      const typedError = e as AxiosError\n      return rejectWithValue(typedError?.response)\n    }\n  },\n)\n\nexport const getStudentProfile = createAsyncThunk(\n  'vacancies-page/getStudentProfile',\n  async (studentId: number, { rejectWithValue }) => {\n    try {\n      const response = await api.get(API_STUDENT_BY_ID_ENDPOINT(studentId))\n      return response.data\n    } catch (e) {\n      const typedError = e as AxiosError\n      return rejectWithValue(typedError?.response)\n    }\n  },\n)\nexport const patchVacancyInfo = createAsyncThunk(\n  'vacancies-page/patchVacancyInfo',\n  async ({ id, data }: { id?: number; data: IHRVacancyHeader }, { rejectWithValue }) => {\n    try {\n      const response = await api.patch(API_HR_PART_VACANCY_BY_ID_ENDPOINT(id), data)\n      return response.data\n    } catch (e) {\n      const typedError = e as AxiosError\n      return rejectWithValue(typedError?.response)\n    }\n  },\n)\n\nexport const deleteVacancy = createAsyncThunk(\n  'vacancies-page/deleteVacancy',\n  async (id: number, { rejectWithValue }) => {\n    try {\n      const response = await api.delete(API_HR_PART_VACANCY_BY_ID_ENDPOINT(id))\n      return response.data\n    } catch (e) {\n      const typedError = e as AxiosError\n      return rejectWithValue(typedError?.response)\n    }\n  },\n)\n","import { createAsyncThunk } from '@reduxjs/toolkit'\nimport { AxiosError } from 'axios'\nimport { TGetVacanciesData } from '../types/vacacies-page-types/vacancies-page-types'\nimport {\n  TPatchData,\n  TPatchProjectInfoData,\n} from '../types/workshop-projects-list-page-types/workshop-projects-list-page-types'\n\nexport const getProjectsList = createAsyncThunk(\n  'workshopProjectsListPage/getProjectsList',\n  async (data: TGetVacanciesData, { rejectWithValue }) => {\n    try {\n      const { paramsSerializer } = data\n      // const response = await api.get(API_HR_PART_VACANCY_ENDPOINT, {\n      //   params: { ...data.hook.filters },\n      //   paramsSerializer,\n      // })\n      const projectsJSONArray = [\n        {\n          id: 1,\n          name: 'Проект по созданию проектов',\n          type: 'НКО',\n          project_manager: 1,\n          scope: 1,\n          comment: 'Какой-то коммент',\n          customer: {\n            id: 252,\n            name: 'Илья Ильюхин',\n            logo_url:\n              'https://sun9-54.userapi.com/impg/0I9648p_3WegWt2TcKNXbv5OC6J1PbYfoOckuw/QiCNv0Hyo0s.jpg?size=548x604&quality=95&sign=c37683ea95103b5b783ebd6bca779c40&type=album',\n          },\n          project_contacts: [\n            {\n              id: 156,\n              type: 1,\n              value: '@luxary_tesla',\n              link: 'https://t.me/luxary_tesla',\n            },\n            {\n              id: 157,\n              type: 2,\n              value: 'elona@tesla.com',\n              link: 'elona@tesla.com',\n            },\n          ],\n          published_at: '12 декабря',\n          closed_at: '19 декабря',\n          members_count: 2,\n          open_positions_count: 8,\n          status: {\n            id: 5,\n            status: 'Набор открыт',\n            color: 'hsla(141, 40%, 83%, 1)',\n          },\n        },\n        {\n          id: 2,\n          name: 'Сайт мобильной больницы',\n          type: 'НКО',\n          project_manager: 2,\n          scope: 1,\n          comment: 'Какой-то коммент',\n          customer: {\n            id: 253,\n            name: 'Илья Неилюхин',\n            logo_url:\n              'https://sun9-49.userapi.com/impf/c857416/v857416563/a1196/w-FlOyTOLao.jpg?size=1440x2160&quality=96&sign=c5b79f783367bf6d4d5e3217e6a24e0d&type=album',\n          },\n          project_contacts: [\n            {\n              id: 159,\n              type: 1,\n              value: '@luxary_tesla1',\n              link: 'https://t.me/luxary_tesla1',\n            },\n            {\n              id: 160,\n              type: 2,\n              value: 'elona1@tesla.com',\n              link: 'elona@1tesla.com',\n            },\n            {\n              id: 161,\n              type: 3,\n              value: '+79993332212',\n              link: ' https://wa.me/79993332212',\n            },\n          ],\n          published_at: '12 декабря',\n          closed_at: '13 декабря',\n          members_count: 4,\n          open_positions_count: 6,\n          status: {\n            id: 5,\n            status: 'Набор открыт',\n            color: 'hsla(141, 40%, 83%, 1)',\n          },\n        },\n        {\n          id: 3,\n          name: 'Разделитель апельсинов онлайн',\n          type: 'Pet-проект',\n          project_manager: 3,\n          scope: 1,\n          comment: 'Какой-то коммент',\n          customer: {\n            id: 253,\n            name: 'Илья Неилюхин',\n            logo_url:\n              'https://sun9-49.userapi.com/impf/c857416/v857416563/a1196/w-FlOyTOLao.jpg?size=1440x2160&quality=96&sign=c5b79f783367bf6d4d5e3217e6a24e0d&type=album',\n          },\n          project_contacts: [\n            {\n              id: 156,\n              type: 1,\n              value: '@luxary_tesla',\n              link: 'https://t.me/luxary_tesla',\n            },\n            {\n              id: 157,\n              type: 2,\n              value: 'elona@tesla.com',\n              link: 'elona@tesla.com',\n            },\n            {\n              id: 158,\n              type: 3,\n              value: '+79993332211',\n              link: ' https://wa.me/79993332211',\n            },\n          ],\n          published_at: '4 февраля',\n          closed_at: '3 марта',\n          members_count: 2,\n          open_positions_count: 8,\n          status: {\n            id: 2,\n            status: 'На оценке',\n            color: 'hsla(254, 54%, 85%, 1)',\n          },\n        },\n        {\n          id: 4,\n          name: 'Реконструкция дома',\n          type: 'НКО',\n          project_manager: 4,\n          scope: 1,\n          comment: 'Какой-то коммент',\n          customer: {\n            id: 253,\n            name: 'Михаил Горшенёв',\n            logo_url: 'https://www.nashe.ru/uploads/photos/1/2020/07/F4Nmyb-u9a0.jpg',\n          },\n          project_contacts: [\n            {\n              id: 188,\n              type: 3,\n              value: '+79996666996',\n              link: ' https://wa.me/79996666996',\n            },\n          ],\n          published_at: '9 мая',\n          closed_at: '13 июля',\n          members_count: 20,\n          open_positions_count: 8,\n          status: {\n            id: 4,\n            status: 'Одобрен',\n            color: 'hsla(217, 100%, 84%, 1)',\n          },\n        },\n        {\n          id: 5,\n          name: 'Новый сайт сада',\n          type: 'Pet-проект',\n          project_manager: 1,\n          scope: 1,\n          comment: 'Какой-то коммент',\n          customer: {\n            id: 252,\n            name: 'Илья Ильюхин',\n            logo_url:\n              'https://sun9-54.userapi.com/impg/0I9648p_3WegWt2TcKNXbv5OC6J1PbYfoOckuw/QiCNv0Hyo0s.jpg?size=548x604&quality=95&sign=c37683ea95103b5b783ebd6bca779c40&type=album',\n          },\n          project_contacts: [\n            {\n              id: 156,\n              type: 1,\n              value: '@luxary_tesla',\n              link: 'https://t.me/luxary_tesla',\n            },\n            {\n              id: 157,\n              type: 2,\n              value: 'elona@tesla.com',\n              link: 'elona@tesla.com',\n            },\n            {\n              id: 158,\n              type: 3,\n              value: '+79993332211',\n              link: ' https://wa.me/79993332211',\n            },\n          ],\n          published_at: '15 декабря',\n          closed_at: '16 декабря',\n          members_count: 20,\n          open_positions_count: 82,\n          status: {\n            id: 4,\n            status: 'Одобрен',\n            color: 'hsla(217, 100%, 84%, 1)',\n          },\n        },\n        {\n          id: 6,\n          name: 'Сайт больницы',\n          type: 'НКО',\n          project_manager: 1,\n          scope: 1,\n          comment: 'Какой-то коммент',\n          customer: {\n            id: 253,\n            name: 'Илья Неилюхин',\n            logo_url:\n              'https://sun9-49.userapi.com/impf/c857416/v857416563/a1196/w-FlOyTOLao.jpg?size=1440x2160&quality=96&sign=c5b79f783367bf6d4d5e3217e6a24e0d&type=album',\n          },\n          project_contacts: [\n            {\n              id: 156,\n              type: 1,\n              value: '@luxary_tesla',\n              link: 'https://t.me/luxary_tesla',\n            },\n          ],\n          published_at: '12 апреля',\n          closed_at: '5 июля',\n          members_count: 2,\n          open_positions_count: 8,\n          status: {\n            id: 4,\n            status: 'Одобрен',\n            color: 'hsla(217, 100%, 84%, 1)',\n          },\n        },\n        {\n          id: 7,\n          name: 'Сайт морга',\n          type: 'Pet-проект',\n          project_manager: 1,\n          scope: 1,\n          comment: 'Какой-то коммент',\n          customer: {\n            id: 252,\n            name: 'Илья Ильюхин',\n            logo_url:\n              'https://sun9-54.userapi.com/impg/0I9648p_3WegWt2TcKNXbv5OC6J1PbYfoOckuw/QiCNv0Hyo0s.jpg?size=548x604&quality=95&sign=c37683ea95103b5b783ebd6bca779c40&type=album',\n          },\n          project_contacts: [\n            {\n              id: 156,\n              type: 1,\n              value: '@luxary_tesla',\n              link: 'https://t.me/luxary_tesla',\n            },\n            {\n              id: 157,\n              type: 2,\n              value: 'elona@tesla.com',\n              link: 'elona@tesla.com',\n            },\n            {\n              id: 158,\n              type: 3,\n              value: '+79993332211',\n              link: ' https://wa.me/79993332211',\n            },\n          ],\n          published_at: '12 декабря',\n          closed_at: '23 января',\n          members_count: 10,\n          open_positions_count: 2,\n          status: {\n            id: 7,\n            status: 'В реализации',\n            color: 'hsla(33, 100%, 87%, 1)',\n          },\n        },\n        {\n          id: 8,\n          name: 'Зарплатный калькулятор',\n          type: 'Pet-проект',\n          project_manager: 1,\n          scope: 1,\n          comment: 'Какой-то коммент',\n          customer: {\n            id: 253,\n            name: 'Илья Неилюхин',\n            logo_url:\n              'https://sun9-49.userapi.com/impf/c857416/v857416563/a1196/w-FlOyTOLao.jpg?size=1440x2160&quality=96&sign=c5b79f783367bf6d4d5e3217e6a24e0d&type=album',\n          },\n          project_contacts: [\n            {\n              id: 156,\n              type: 1,\n              value: '@luxary_tesla',\n              link: 'https://t.me/luxary_tesla',\n            },\n            {\n              id: 158,\n              type: 3,\n              value: '+79993332211',\n              link: ' https://wa.me/79993332211',\n            },\n          ],\n          published_at: '12 декабря',\n          closed_at: '13 декабря',\n          members_count: 1,\n          open_positions_count: 5,\n          status: {\n            id: 5,\n            status: 'Набор открыт',\n            color: 'hsla(141, 40%, 83%, 1)',\n          },\n        },\n        // {\n        //   id: 9,\n        //   name: 'Новый биткоин',\n        //   type: 'Pet-проект',\n        //   project_manager: 1,\n        //   scope: 1,\n        //   comment: 'Какой-то коммент',\n        //   customer: {\n        //     id: 252,\n        //     name: 'Илья Ильюхин',\n        //     logo_url:\n        //       'https://sun9-54.userapi.com/impg/0I9648p_3WegWt2TcKNXbv5OC6J1PbYfoOckuw/QiCNv0Hyo0s.jpg?size=548x604&quality=95&sign=c37683ea95103b5b783ebd6bca779c40&type=album',\n        //   },\n        //   project_contacts: [\n        //     {\n        //       id: 158,\n        //       type: 3,\n        //       value: '+79993332211',\n        //       link: ' https://wa.me/79993332211',\n        //     },\n        //   ],\n        //   published_at: '3 июля',\n        //   closed_at: '7 августа',\n        //   members_count: 5,\n        //   open_positions_count: 2,\n        //   status: {\n        //     id: 7,\n        //     status: 'В реализации',\n        //     color: 'hsla(33, 100%, 87%, 1)',\n        //   },\n        // },\n      ]\n      // return response?.data\n      return projectsJSONArray\n    } catch (e) {\n      const err = e as AxiosError\n      return rejectWithValue(err?.response)\n    }\n  },\n)\n\nexport const getDirectories = createAsyncThunk(\n  'workshopProjectsListPage/getDirectories',\n  async (_: void, { rejectWithValue }) => {\n    try {\n      const courses = [\n        { id: 5, name: 'C++ разработчик', faculty: 1 },\n        { id: 6, name: 'DevOps', faculty: 1 },\n        { id: 4, name: 'GO-разработчик', faculty: 1 },\n        { id: 29, name: 'IT-рекрутер', faculty: 5 },\n        { id: 2, name: 'Java-разработчик', faculty: 1 },\n        { id: 1, name: 'Python-Разработчик', faculty: 1 },\n        { id: 18, name: 'Python-разработчик плюс', faculty: 1 },\n        { id: 33, name: 'QA Bootcamp', faculty: 6 },\n        { id: 20, name: 'React-разработчик', faculty: 2 },\n        { id: 16, name: 'SMM-специалист', faculty: 3 },\n        { id: 32, name: 'Web Bootcamp', faculty: 2 },\n        { id: 22, name: 'Автоматизатор тестирования на Java', faculty: 6 },\n        { id: 13, name: 'Аналитик данных', faculty: 4 },\n        { id: 14, name: 'Аналитик данных плюс', faculty: 4 },\n        { id: 15, name: 'Бренд менеджер', faculty: 3 },\n        { id: 3, name: 'Веб-Разработчик', faculty: 2 },\n        { id: 19, name: 'Веб-разработчик плюс', faculty: 2 },\n        { id: 23, name: 'Графический дизайнер', faculty: 7 },\n        { id: 25, name: 'Дизайнер интерфейсов', faculty: 7 },\n        { id: 21, name: 'Инженер по тестированию', faculty: 6 },\n        { id: 31, name: 'Инженер по тестированию Плюс', faculty: 6 },\n        { id: 24, name: 'Коммуникационный дизайнер', faculty: 7 },\n        { id: 7, name: 'Менеджер по интернет-маркетингу', faculty: 3 },\n        { id: 17, name: 'Менеджер проектов', faculty: 5 },\n        { id: 27, name: 'Мидл Python-разработчик', faculty: 1 },\n        { id: 28, name: 'Мидл Фронтенд-разработчик', faculty: 2 },\n        { id: 26, name: 'Продуктовый дизайнер', faculty: 7 },\n        { id: 8, name: 'Специалист CRM-маркетингу', faculty: 3 },\n        { id: 11, name: 'Специалист по Data Science', faculty: 4 },\n        { id: 12, name: 'Специалист по Data Science плюс', faculty: 4 },\n        { id: 9, name: 'Специалист по контекстной рекламе', faculty: 3 },\n        { id: 10, name: 'Специалист по таргетированной рекламе', faculty: 3 },\n        { id: 30, name: 'Трафик-менеджер', faculty: 3 },\n      ]\n\n      const projects_statuses = [\n        {\n          id: 1,\n          status: 'Черновик',\n          color: 'hsla(219, 100%, 97%, 1)',\n        },\n        {\n          id: 2,\n          status: 'На оценке',\n          color: 'hsla(254, 54%, 85%, 1)',\n        },\n        {\n          id: 3,\n          status: 'Уточнение данных',\n          color: 'hsla(51, 100%, 91%, 1)',\n        },\n        {\n          id: 4,\n          status: 'Одобрен',\n          color: 'hsla(217, 100%, 84%, 1)',\n        },\n        {\n          id: 5,\n          status: 'Набор открыт',\n          color: 'hsla(141, 40%, 83%, 1)',\n        },\n        {\n          id: 6,\n          status: 'Набор закрыт',\n          color: 'hsla(33, 23%, 56%, 0.26)',\n        },\n        {\n          id: 7,\n          status: 'В реализации',\n          color: 'hsla(33, 100%, 87%, 1)',\n        },\n        {\n          id: 8,\n          status: 'На паузе',\n          color: 'hsla(214, 11%, 88%, 1)',\n        },\n        {\n          id: 9,\n          status: 'Завершен',\n          color: 'hsla(214, 11%, 88%, 1)',\n        },\n        {\n          id: 10,\n          status: 'Отклонен',\n          color: 'hsla(346, 100%, 93%, 1)',\n        },\n      ]\n\n      const projects_types = [\n        {\n          value: 'Pet-проект',\n          id: 1,\n        },\n        {\n          value: 'НКО',\n          id: 2,\n        },\n      ]\n\n      const profilesData = [\n        { id: 1, first_name: 'Рита', last_name: 'Осянина' },\n        { id: 2, first_name: 'Лиза', last_name: 'Бричкина' },\n        { id: 3, first_name: 'Соня', last_name: 'Гурвич' },\n        { id: 4, first_name: 'Галя', last_name: 'Четвертак' },\n        { id: 5, first_name: 'Женя', last_name: 'Комелькова' },\n      ]\n\n      const profilesItems = profilesData?.map((p) => ({ id: p.id, name: `${p.first_name} ${p.last_name}` }))\n      // TODO сначала взял сферы из партнёрской формы, но они не совпадают со сферами из создания проекта\n      // const scopes = [\n      //   {\n      //     id: 1,\n      //     value: 'Автомобильный бизнес',\n      //   },\n      //   {\n      //     id: 2,\n      //     value: 'HoReCa',\n      //   },\n      //   {\n      //     id: 3,\n      //     value: 'Государственные организации',\n      //   },\n      //   {\n      //     id: 4,\n      //     value: 'Дизайн',\n      //   },\n      //   {\n      //     id: 5,\n      //     value: 'ЖКХ',\n      //   },\n      //   {\n      //     id: 6,\n      //     value: 'Информационные технологии, системная интеграция, интернет',\n      //   },\n      //   {\n      //     id: 7,\n      //     value: 'Искусство, культура',\n      //   },\n      //   {\n      //     id: 8,\n      //     value: 'Медицина, фармацевтика',\n      //   },\n      //   {\n      //     id: 9,\n      //     value: 'Металлургия, металлообработка',\n      //   },\n      //   {\n      //     id: 11,\n      //     value: 'Образовательные учреждения',\n      //   },\n      //   {\n      //     id: 12,\n      //     value: 'Общественная деятельность, НКО',\n      //   },\n      //   {\n      //     id: 13,\n      //     value: 'Перевозки, логистика, склад, ВЭД',\n      //   },\n      //   {\n      //     id: 14,\n      //     value: 'FMCG',\n      //   },\n      //   {\n      //     id: 15,\n      //     value: 'Промышленное оборудование',\n      //   },\n      //   {\n      //     id: 16,\n      //     value: 'Розничная торговля',\n      //   },\n      //   {\n      //     id: 17,\n      //     value: 'СМИ, маркетинг, реклама',\n      //   },\n      //   {\n      //     id: 18,\n      //     value: 'Сельское хозяйство',\n      //   },\n      //   {\n      //     id: 19,\n      //     value: 'Строительство, недвижимость, эксплуатация, проектирование',\n      //   },\n      //   {\n      //     id: 20,\n      //     value: 'Телекоммуникации, связь',\n      //   },\n      //   {\n      //     id: 21,\n      //     value: 'Управление многопрофильными активами',\n      //   },\n      //   {\n      //     id: 22,\n      //     value: 'Услуги для бизнеса',\n      //   },\n      //   {\n      //     id: 23,\n      //     value: 'Услуги для населения',\n      //   },\n      //   {\n      //     id: 24,\n      //     value: 'Финансовый сектор',\n      //   },\n      //   {\n      //     id: 25,\n      //     value: 'Химическое производство, удобрения',\n      //   },\n      //   {\n      //     id: 26,\n      //     value: 'Электроника, приборостроение, бытовая техника, компьютеры и оргтехника',\n      //   },\n      //   {\n      //     id: 27,\n      //     value: 'Энергетика',\n      //   },\n      // ]\n      const scopes = [\n        {\n          id: 1,\n          name: 'Финтех',\n          value: 'Финтех',\n        },\n        {\n          id: 2,\n          name: 'Промышленность',\n          value: 'Промышленность',\n        },\n        {\n          id: 3,\n          name: 'Игры',\n          value: 'Игры',\n        },\n        {\n          id: 4,\n          name: 'Биотех',\n          value: 'Биотех',\n        },\n        {\n          id: 5,\n          name: 'Безопасность',\n          value: 'Безопасность',\n        },\n        {\n          id: 6,\n          name: 'Ритейл',\n          value: 'Ритейл',\n        },\n        {\n          id: 7,\n          name: 'Маркетинг',\n          value: 'Маркетинг',\n        },\n        {\n          id: 8,\n          name: 'Другое',\n          value: 'Другое',\n        },\n      ]\n      const project_student_statuses = [\n        {\n          id: 1,\n          status: 'Новый отклик',\n          color: 'hsla(217, 100%, 84%, 1)',\n        },\n        {\n          id: 2,\n          status: 'Отклик отклонен',\n          color: 'hsla(346, 100%, 93%, 1)',\n        },\n        {\n          id: 3,\n          status: 'Отклик принят',\n          color: 'hsla(141, 40%, 83%, 1)',\n        },\n      ]\n\n      const project_team_statuses = [\n        {\n          id: 1,\n          status: 'Специалист',\n          color: 'hsla(219, 100%, 97%, 1)',\n        },\n        {\n          id: 2,\n          status: 'Заказчик',\n          color: 'hsla(219, 100%, 97%, 1)',\n        },\n        {\n          id: 3,\n          status: 'СВ',\n          color: 'hsla(219, 100%, 97%, 1)',\n        },\n        {\n          id: 4,\n          status: 'мл. Наставник',\n          color: 'hsla(219, 100%, 97%, 1)',\n        },\n        {\n          id: 5,\n          status: 'мл. Ревьювер',\n          color: 'hsla(219, 100%, 97%, 1)',\n        },\n        {\n          id: 6,\n          status: 'мл. PM',\n          color: 'hsla(219, 100%, 97%, 1)',\n        },\n      ]\n\n      return {\n        courses,\n        projects_statuses: projects_statuses.map((item) => ({ ...item, label: item.status, value: item.status })),\n        projects_types,\n        profiles: profilesItems,\n        scopes,\n        projects_student_statuses: project_student_statuses.map((item) => ({\n          ...item,\n          label: item.status,\n          value: item.status,\n        })),\n        projects_team_statuses: project_team_statuses.map((item) => ({\n          ...item,\n          label: item.status,\n          value: item.status,\n        })),\n      }\n    } catch (e) {\n      const typedError = e as AxiosError\n      return rejectWithValue(typedError?.response)\n    }\n  },\n)\n\nexport const patchProjectStatus = createAsyncThunk(\n  'workshopProjectsListPage/patchProjectStatus',\n  async (data: TPatchData, { rejectWithValue }) => {\n    try {\n      //   const response = await api.patch(API_HR_PART_VACANCY_BY_ID_ENDPOINT(data.vacancyId), {\n      //     vacancy_status: data.status.status,\n      //   })\n      //   return {\n      //     updatedRow: response.data,\n      //   }\n      return { projectId: data.projectId, status: data.status }\n    } catch (e) {\n      const typedError = e as AxiosError\n      return rejectWithValue(typedError?.response)\n    }\n  },\n)\n\nexport const patchProjectInfo = createAsyncThunk(\n  'workshopProjectsListPage/patchProjectInfo',\n  async (data: TPatchProjectInfoData, { rejectWithValue }) => {\n    try {\n      //   const response = await api.patch(API_HR_PART_VACANCY_BY_ID_ENDPOINT(data.vacancyId), {\n      //     vacancy_status: data.status.status,\n      //   })\n      //   return {\n      //     updatedRow: response.data,\n      //   }\n      return { projectId: data.id, fieldName: data.fieldName, fieldValue: data.fieldValue }\n    } catch (e) {\n      const typedError = e as AxiosError\n      return rejectWithValue(typedError?.response)\n    }\n  },\n)\n\nexport const deleteProject = createAsyncThunk(\n  'workshopProjectsListPage/deleteProject',\n  async (id: number, { rejectWithValue }) => {\n    try {\n      // const response = await api.delete(API_HR_PART_VACANCY_BY_ID_ENDPOINT(id))\n\n      return id\n    } catch (e) {\n      const typedError = e as AxiosError\n      return rejectWithValue(typedError?.response)\n    }\n  },\n)\n\nexport const getProjectStudents = createAsyncThunk(\n  'workshopProjectsListPage/getProjectStudents',\n  async (_, { rejectWithValue }) => {\n    try {\n      const results = [\n        {\n          id: 3,\n          first_name: 'Олег',\n          last_name: 'Васильев',\n          contacts: [\n            {\n              id: 3788,\n              type: 1,\n              value: 'alex',\n              link: 'https://t.me/alex',\n            },\n          ],\n          status: {\n            id: 2,\n            name: 'Отклик принят',\n            color: '#C2E5CE',\n          },\n          created_at: '2023-03-18T17:08:30.384813Z',\n          timezone_delta: '+1 к МСК',\n          image:\n            'https://sun9-74.userapi.com/impg/ZbY8G1izIcazf4Ylq0R_leIMgBJ4PzTkF9N2EA/osVK4QWii9M.jpg?size=1620x2160&quality=95&sign=c9508bda9771ae50ea59d950550c3ea6&type=album',\n          pet_project_experience_type: {\n            id: 1,\n            value: 'Создавал',\n          },\n          pet_project_spend_time: {\n            id: 1,\n            min: 10,\n            max: 15,\n          },\n          comment: 'Хочу всё, могу ничего',\n        },\n        {\n          id: 4,\n          first_name: 'Сергей',\n          last_name: 'Орехов',\n          contacts: [],\n          status: {\n            id: 2,\n            name: 'Отклик принят',\n            color: '#C2E5CE',\n          },\n          created_at: '2023-03-18T17:08:30.384813Z',\n          timezone_delta: '+1 к МСК',\n          image:\n            'https://sun9-26.userapi.com/impg/IeKrN9z2TXbfGOPJ6fCBG97zsxfNVqfGw05QTg/48sG5DCJ-oE.jpg?size=2560x1920&quality=95&sign=dd9a6545168fbbfe305cc521425cce94&type=album',\n          pet_project_experience_type: {\n            id: 1,\n            value: 'Создавал',\n          },\n          pet_project_spend_time: {\n            id: 1,\n            min: 20,\n            max: 35,\n          },\n          comment: 'Хочу всё, могу ничего',\n        },\n        {\n          id: 5,\n          first_name: 'Анастасия',\n          last_name: 'Плотвина',\n          contacts: [],\n          status: {\n            id: 2,\n            name: 'Отклик принят',\n            color: '#C2E5CE',\n          },\n          created_at: '2023-03-18T17:08:30.384813Z',\n          timezone_delta: '+1 к МСК',\n          image:\n            'https://sun9-54.userapi.com/impg/0I9648p_3WegWt2TcKNXbv5OC6J1PbYfoOckuw/QiCNv0Hyo0s.jpg?size=548x604&quality=95&sign=c37683ea95103b5b783ebd6bca779c40&type=album',\n          pet_project_experience_type: {\n            id: 1,\n            value: 'Создавал',\n          },\n          pet_project_spend_time: {\n            id: 1,\n            min: 0,\n            max: 5,\n          },\n          comment: 'Хочу всё, могу ничего',\n        },\n        {\n          id: 6,\n          first_name: 'Ольга',\n          last_name: 'Бергамотова',\n          contacts: [],\n          status: {\n            id: 2,\n            name: 'Отклик принят',\n            color: '#C2E5CE',\n          },\n          created_at: '2023-03-18T17:08:30.384813Z',\n          timezone_delta: '+1 к МСК',\n          image:\n            'https://sun9-38.userapi.com/impg/NMnE8Ip8YWmP3vbzGuSjMsV6f65tvXbdWuV7Mw/HoXrbGNVr1o.jpg?size=1920x1440&quality=96&sign=b94b3992582b1e984957e5838a8c13df&type=album',\n          pet_project_experience_type: {\n            id: 1,\n            value: 'Создавал',\n          },\n          pet_project_spend_time: {\n            id: 1,\n            min: 0,\n            max: 5,\n          },\n          comment: 'Хочу всё, могу ничего',\n        },\n      ]\n\n      return results\n    } catch (e) {\n      const typedError = e as AxiosError\n      return rejectWithValue(typedError?.response)\n    }\n  },\n)\n\nexport const getProjectTeam = createAsyncThunk(\n  'workshopProjectsListPage/getProjectTeam',\n  async (_, { rejectWithValue }) => {\n    try {\n      const result = [\n        {\n          id: 1,\n          first_name: 'Алексей',\n          last_name: 'Алексеев',\n          contacts: [\n            {\n              id: 3788,\n              type: 1,\n              value: 'alex',\n              link: 'https://t.me/alex',\n            },\n          ],\n          statuses: [\n            {\n              id: 1,\n              name: 'Специалист',\n              color: '#F1F6FF',\n            },\n          ],\n          created_at: '2023-03-18T20:27:27.223576Z',\n          timezone_delta: 'МСК',\n          image:\n            'https://sun9-62.userapi.com/impf/c851220/v851220273/102cfd/7tXGoeemVZk.jpg?size=2560x1707&quality=96&sign=e1059b069240624aad9c28e4814ef5f6&type=album',\n          pet_project_experience_type: {\n            id: 1,\n            value: 'Создавал',\n          },\n          pet_project_spend_time: {\n            id: 1,\n            min: 10,\n            max: 15,\n          },\n          comment: 'Хочу всё, могу ничего',\n        },\n        {\n          id: 2,\n          first_name: 'Ярослав',\n          last_name: 'Кузьмин',\n          contacts: [\n            {\n              id: 3788,\n              type: 1,\n              value: 'yarik',\n              link: 'https://t.me/yarik',\n            },\n          ],\n          statuses: [\n            {\n              id: 1,\n              name: 'Специалист',\n              color: '#F1F6FF',\n            },\n          ],\n          created_at: '2023-03-18T20:27:27.223576Z',\n          timezone_delta: 'МСК',\n          image:\n            'https://sun9-8.userapi.com/impf/c847221/v847221733/1e4a3b/eUQMBGL02HU.jpg?size=960x639&quality=96&sign=e81b5de47d1602795c47b1f9d00fd171&type=album',\n          pet_project_experience_type: {\n            id: 1,\n            value: 'Создавал',\n          },\n          pet_project_spend_time: {\n            id: 1,\n            min: 0,\n            max: 15,\n          },\n          comment: 'Хочу всё, могу ничего',\n        },\n        {\n          id: 3,\n          first_name: 'Анна',\n          last_name: 'Оладушкина',\n          contacts: [\n            {\n              id: 3788,\n              type: 1,\n              value: 'anolad',\n              link: 'https://t.me/anolad',\n            },\n          ],\n          statuses: [\n            {\n              id: 1,\n              name: 'Специалист',\n              color: '#F1F6FF',\n            },\n          ],\n          created_at: '2023-03-18T20:27:27.223576Z',\n          timezone_delta: 'МСК',\n          image:\n            'https://sun9-20.userapi.com/impf/c849532/v849532741/17706e/VY6tlzrouNY.jpg?size=960x639&quality=96&sign=199ab963a027cdb3a3a1b1473a4cc103&type=album',\n          pet_project_experience_type: {\n            id: 1,\n            value: 'Создавал',\n          },\n          pet_project_spend_time: {\n            id: 1,\n            min: 20,\n            max: 35,\n          },\n          comment: 'Хочу всё, могу ничего',\n        },\n      ]\n      return result\n    } catch (e) {\n      const typedError = e as AxiosError\n      return rejectWithValue(typedError?.response)\n    }\n  },\n)\n\nexport const patchStudentStatus = createAsyncThunk(\n  'workshopProjectsListPage/patchStudentStatus',\n  async (data: TPatchProjectInfoData, { rejectWithValue }) => {\n    try {\n      // const response = await api.patch(API_STUDENT_BY_ID_ENDPOINT(data.studentId), data.status)\n      // return {\n      //   updatedRow: response.data,\n      // }\n      // TODO костыль для работы селекта\n      return { ...data, fieldValue: { ...data.fieldValue, name: data.fieldValue.status } }\n    } catch (e) {\n      const typedError = e as AxiosError\n      return rejectWithValue(typedError?.response)\n    }\n  },\n)\n\nexport const patchTeamStatus = createAsyncThunk(\n  'workshopProjectsListPage/patchTeamStatus',\n  async (data: TPatchProjectInfoData, { rejectWithValue }) => {\n    try {\n      // const response = await api.patch(API_STUDENT_BY_ID_ENDPOINT(data.studentId), data.status)\n      // return {\n      //   updatedRow: response.data,\n      // }\n      // TODO костыль для работы селекта\n      return { ...data, fieldValue: { ...data.fieldValue, name: data.fieldValue.status } }\n    } catch (e) {\n      console.log(e)\n      const typedError = e as AxiosError\n      return rejectWithValue(typedError?.response)\n    }\n  },\n)\n","import { createAsyncThunk } from '@reduxjs/toolkit'\nimport { AxiosError } from 'axios'\nimport {\n  API_SIGN_IN_ENDPOINT,\n  API_SIGN_OUT_ENDPOINT,\n  API_SIGN_UP_ENDPOINT,\n  API_PROFILE_ENDPOINT,\n  API_USER_PROFILE_ENDPOINT,\n  API_PASSWORD_RECOVERY_ENDPOINT,\n  API_CREATE_NEW_PASSWORD_ENDPOINT,\n  API_USER_STATUS_ENDPOINT,\n} from '../../utils/constants'\nimport { TSignInData, TSignUpData, TResetPasswordData, TCreatePasswordData } from '../types/auth/auth-types'\nimport api from './settings'\n\nexport const signIn = createAsyncThunk('auth/signIn', async (data: TSignInData, { rejectWithValue }) => {\n  try {\n    const response = await api.post(API_SIGN_IN_ENDPOINT, data)\n    return response.data\n  } catch (error) {\n    const typedError = error as AxiosError\n    return rejectWithValue(typedError?.response?.data)\n  }\n})\n\nexport const signUp = createAsyncThunk('auth/signUp', async (data: TSignUpData, { rejectWithValue }) => {\n  try {\n    const response = await api.post(API_SIGN_UP_ENDPOINT, data)\n    return response.data\n  } catch (error) {\n    const typedError = error as AxiosError\n    return rejectWithValue(typedError?.response?.data)\n  }\n})\n\nexport const signOut = createAsyncThunk('auth/signOut', async (_: void, { rejectWithValue }) => {\n  try {\n    const response = await api.post(API_SIGN_OUT_ENDPOINT)\n    return response.data\n  } catch (error) {\n    const typedError = error as AxiosError\n    return rejectWithValue(typedError?.response?.data)\n  }\n})\n\nexport const resetPassword = createAsyncThunk(\n  'auth/resetPassword',\n  async (data: TResetPasswordData, { rejectWithValue }) => {\n    try {\n      const response = await api.post(API_PASSWORD_RECOVERY_ENDPOINT, data)\n      return response.data\n    } catch (error) {\n      const typedError = error as AxiosError\n      return rejectWithValue(typedError?.response?.data)\n    }\n  },\n)\n\nexport const createPassword = createAsyncThunk(\n  'auth/createPassword',\n  async (data: TCreatePasswordData, { rejectWithValue }) => {\n    try {\n      const response = await api.post(API_CREATE_NEW_PASSWORD_ENDPOINT, data)\n      return response.data\n    } catch (error) {\n      const typedError = error as AxiosError\n      return rejectWithValue(typedError?.response?.data)\n    }\n  },\n)\n\nexport const getProfile = createAsyncThunk('auth/getProfile', async (_: void, { rejectWithValue }) => {\n  try {\n    const response = await api.get(API_USER_PROFILE_ENDPOINT)\n    return response.data\n  } catch (error) {\n    const typedError = error as AxiosError\n    return rejectWithValue(typedError?.response?.data)\n  }\n})\n\nexport const postOnboarding = createAsyncThunk('auth/postOnboarding', async (data: FormData, { rejectWithValue }) => {\n  try {\n    const response = await api.post(API_PROFILE_ENDPOINT, data, {\n      headers: {\n        'Content-Type': 'multipart/form-data',\n        Accept: 'application/json',\n      },\n    })\n    return response.data\n  } catch (error) {\n    const typedError = error as AxiosError\n    return rejectWithValue(typedError?.response?.data)\n  }\n})\n\nexport const getStatus = createAsyncThunk('auth/getStatus', async (_: void, { rejectWithValue }) => {\n  try {\n    const response = await api.get(API_USER_STATUS_ENDPOINT)\n    return response.data\n  } catch (error) {\n    const typedError = error as AxiosError\n    return rejectWithValue(typedError?.response?.data)\n  }\n})\n","/* eslint-disable no-continue */\n/* eslint-disable guard-for-in */\n/* eslint-disable no-restricted-syntax */\nimport { createAsyncThunk } from '@reduxjs/toolkit'\nimport qs from 'qs'\nimport { AxiosError } from 'axios'\nimport {\n  API_HR_PART_ABOUT_VACANCY_STUDENT_ENDPOINT,\n  API_HR_PART_VACANCY_STUDENT_ENDPOINT,\n  API_PARTNER_DIRECTORY_ENDPOINT,\n  API_PARTNER_VACANCY_RESPONSE_ENDPOINT,\n  API_STUDENT_EXTERNAL_VACANCY,\n  API_VACANCY_RESPONSE_ENDPOINT,\n} from '../../utils/constants'\nimport { TStudentVacancyRequestParams } from '../types/student-vacancies/student-vacancies-types'\nimport api from './settings'\nimport { formatApiDate } from '../../utils/dates'\n\nexport const getPartnersDirectories = createAsyncThunk(\n  'partners/getDirectories',\n  async (_: void, { rejectWithValue }) => {\n    try {\n      const response = await api.get(API_PARTNER_DIRECTORY_ENDPOINT)\n      return response.data\n    } catch (error) {\n      const typedError = error as AxiosError\n      return rejectWithValue(typedError?.response?.data)\n    }\n  },\n)\n\nconst paramsSerializer = (params: TStudentVacancyRequestParams) => qs.stringify(params, { arrayFormat: 'repeat' })\n\nconst getParams = (params: TStudentVacancyRequestParams) => {\n  // eslint-disable-next-line no-var\n  var modifiedParams = new URLSearchParams('')\n  for (const key in params) {\n    const value = params[key as keyof TStudentVacancyRequestParams] as any\n    if (key === 'cities' && value.length > 0) {\n      value.forEach((city: string) => {\n        modifiedParams.append('cities', city)\n      })\n      // eslint-disable-next-line no-continue\n      continue\n    }\n    if (key === 'currency') {\n      if (value.dollar) {\n        modifiedParams.append('currency', '1')\n      }\n      if (value.euro) {\n        modifiedParams.append('currency', '2')\n      }\n      if (value.pound) {\n        modifiedParams.append('currency', '3')\n      }\n      if (value.ruble) {\n        modifiedParams.append('currency', '4')\n      }\n      if (value.shekel) {\n        modifiedParams.append('currency', '5')\n      }\n      if (value.tenge) {\n        modifiedParams.append('currency', '6')\n      }\n      continue\n    }\n    if (key === 'employment') {\n      if (value.office) {\n        modifiedParams.append('employment', '1')\n      }\n      if (value.remote) {\n        modifiedParams.append('employment', '3')\n      }\n      if (value.hybrid) {\n        modifiedParams.append('employment', '2')\n      }\n      continue\n    }\n    if (key === 'designFormats') {\n      if (value.dogovor) {\n        modifiedParams.append('design_formats', '1')\n      }\n      if (value.samo) {\n        modifiedParams.append('design_formats', '2')\n      }\n      if (value.ip) {\n        modifiedParams.append('design_formats', '3')\n      }\n      if (value.contract) {\n        modifiedParams.append('design_formats', '4')\n      }\n      if (value.gph) {\n        modifiedParams.append('design_formats', '5')\n      }\n      continue\n    }\n    // Статусы обработаем отдельно ниже\n    if (key === 'status') continue\n    if (value !== null && value !== undefined) {\n      modifiedParams.append(key, value)\n    }\n  }\n  // Здесь рассмотрим фильтры для статусов\n  if (params?.status) {\n    // Если только новые\n    if (params.status?.new && !params.status?.is_accepted && !params.status?.is_showed) {\n      modifiedParams.append('is_showed', 'false')\n      modifiedParams.append('is_accepted', 'false')\n      return modifiedParams.toString()\n    }\n    // Если только просмотренные\n    if (!params.status?.new && !params.status?.is_accepted && params.status?.is_showed) {\n      modifiedParams.append('is_showed', 'true')\n      modifiedParams.append('is_accepted', 'false')\n      return modifiedParams.toString()\n    }\n    // Если только отправленные\n    if (!params.status?.new && params.status?.is_accepted && !params.status?.is_showed) {\n      modifiedParams.append('is_showed', 'true')\n      modifiedParams.append('is_accepted', 'true')\n      return modifiedParams.toString()\n    }\n    // Если все, то ничего не отправляем\n    if (params.status?.new && params.status?.is_accepted && params.status?.is_showed) {\n      return modifiedParams.toString()\n    }\n\n    // Если новое и просмотренное\n    if (params.status?.new && !params.status?.is_accepted && params.status?.is_showed) {\n      modifiedParams.append('is_accepted', 'false')\n      return modifiedParams.toString()\n    }\n\n    // Если новое и отправленное то показываем все\n    if (params.status?.new && params.status?.is_accepted && !params.status?.is_showed) {\n      return modifiedParams.toString()\n    }\n\n    // Во всех любых других случаях отправим то, что есть\n    if (params.status?.is_showed) modifiedParams.append('is_showed', params.status?.is_showed.toString())\n    if (params.status?.is_accepted) modifiedParams.append('is_accepted', params.status?.is_accepted.toString())\n  }\n  return modifiedParams.toString()\n}\n\nexport const getPartnersVacancies = createAsyncThunk(\n  'partners/getPartnersVacancies',\n  async (requestParams: TStudentVacancyRequestParams, { rejectWithValue }) => {\n    const params = getParams(requestParams)\n    try {\n      const response = await api.get(`${API_HR_PART_VACANCY_STUDENT_ENDPOINT}?${params}`, {\n        params,\n        paramsSerializer,\n      })\n      return response.data\n    } catch (error) {\n      const typedError = error as AxiosError\n      return rejectWithValue(typedError?.response?.data)\n    }\n  },\n)\n\nexport const getExternalVacancies = createAsyncThunk(\n  'partners/getExternalPartnersVacancies',\n  async (requestParams: TStudentVacancyRequestParams, { rejectWithValue }) => {\n    const params = getParams(requestParams)\n    try {\n      const response = await api.get(`${API_STUDENT_EXTERNAL_VACANCY}?${params}`, {\n        params,\n        paramsSerializer,\n      })\n      return response.data\n    } catch (error) {\n      const typedError = error as AxiosError\n      return rejectWithValue(typedError?.response?.data)\n    }\n  },\n)\n\nexport const getExternalVacancy = createAsyncThunk(\n  'partners/getExternalVacancy',\n  async (data: number, { rejectWithValue }) => {\n    try {\n      const response = await api.get(`${API_STUDENT_EXTERNAL_VACANCY}/${data}`, {\n        paramsSerializer,\n      })\n      return response.data\n    } catch (error) {\n      const typedError = error as AxiosError\n      return rejectWithValue(typedError?.response?.data)\n    }\n  },\n)\n\nexport const getPartnersVacancy = createAsyncThunk(\n  'partners/getPartnersVacancy',\n  async (data: number, { rejectWithValue }) => {\n    try {\n      const response = await api.get(API_HR_PART_ABOUT_VACANCY_STUDENT_ENDPOINT(data), {\n        paramsSerializer,\n      })\n      return response.data\n    } catch (error) {\n      const typedError = error as AxiosError\n      return rejectWithValue(typedError?.response?.data)\n    }\n  },\n)\n\nexport const postPartnersVacancyResponse = createAsyncThunk(\n  'partners/postPartnersVacancyResponse',\n  async (data: FormData, { rejectWithValue }) => {\n    try {\n      const response = await api.post(API_PARTNER_VACANCY_RESPONSE_ENDPOINT, data, {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n        },\n      })\n      return response.data\n    } catch (error) {\n      const typedError = error as AxiosError\n      return rejectWithValue(typedError?.response?.data)\n    }\n  },\n)\n\nexport const createVacancyResponse = createAsyncThunk(\n  'partners/createExternalVacancyResponse',\n  async (data: number, { rejectWithValue }) => {\n    try {\n      const response = await api.post(API_VACANCY_RESPONSE_ENDPOINT, {\n        external_vacancy: data,\n        // убрано по таске\n        // https://employmentdiary.atlassian.net/browse/SD-1326\n        // response_date: formatApiDate(Date.now()),\n      })\n      return response.data\n    } catch (error) {\n      const typedError = error as AxiosError\n      return rejectWithValue(typedError?.response?.data)\n    }\n  },\n)\n","import { createAsyncThunk } from '@reduxjs/toolkit'\nimport { AxiosError } from 'axios'\nimport {\n  API_VACANCIES_ENDPOINT,\n  API_CURRENCY_DIRECTORY_ENDPOINT,\n  API_VACANCY_BY_ID_ENDPOINT,\n  API_SOURCE_DIRECTORY_ENDPOINT,\n} from '../../utils/constants'\nimport showAchievementsNotifications from '../../utils/showAchievementsNotifications'\nimport api from './settings'\n\nexport const getResponses = createAsyncThunk('diary/getResponses', async (searchQuery: string, { rejectWithValue }) => {\n  try {\n    const response = await api.get(`${API_VACANCIES_ENDPOINT}${searchQuery ? `?search=${searchQuery}` : ''}`)\n    return response.data\n  } catch (error) {\n    const typedError = error as AxiosError\n    return rejectWithValue(typedError?.response?.data)\n  }\n})\n\nexport const getCurrencies = createAsyncThunk('diary/getCurrencies', async (_: void, { rejectWithValue }) => {\n  try {\n    const response = await api.get(API_CURRENCY_DIRECTORY_ENDPOINT)\n    return response.data\n  } catch (error) {\n    const typedError = error as AxiosError\n    return rejectWithValue(typedError?.response?.data)\n  }\n})\n\nexport const getSources = createAsyncThunk('diary/getSources', async (_: void, { rejectWithValue }) => {\n  try {\n    const response = await api.get(API_SOURCE_DIRECTORY_ENDPOINT)\n    return response.data\n  } catch (error) {\n    const typedError = error as AxiosError\n    return rejectWithValue(typedError?.response?.data)\n  }\n})\n\nexport const createResponse = createAsyncThunk(\n  'diary/createResponse',\n  async (data: FormData, { dispatch, rejectWithValue }) => {\n    try {\n      const response = await api.post(API_VACANCIES_ENDPOINT, data)\n      showAchievementsNotifications(response.data?.achievements, dispatch)\n      return response.data\n    } catch (error) {\n      const typedError = error as AxiosError\n      return rejectWithValue(typedError?.response?.data)\n    }\n  },\n)\n\nexport const patchResponse = createAsyncThunk(\n  'diary/patchResponse',\n  async (rawData: { id: number; data: { [value: string]: string } }, { dispatch, rejectWithValue }) => {\n    try {\n      const { id, data } = rawData\n      const response = await api.patch(API_VACANCY_BY_ID_ENDPOINT(id), data)\n      showAchievementsNotifications(response.data?.achievements, dispatch)\n      return response.data\n    } catch (error) {\n      const typedError = error as AxiosError\n      return rejectWithValue(typedError?.response?.data)\n    }\n  },\n)\n\nexport const moveCards = createAsyncThunk(\n  'diary/moveCards',\n  async (\n    rawData: { id: number; position: number; statusData?: { [value: string]: string; last_update_datetime: string } },\n    { dispatch, rejectWithValue },\n  ) => {\n    try {\n      const { id, position, statusData } = rawData\n      let requestData = { card_position: position }\n      if (statusData) {\n        requestData = { ...requestData, ...statusData }\n      }\n      const response = await api.patch(API_VACANCY_BY_ID_ENDPOINT(id), requestData)\n      showAchievementsNotifications(response.data?.achievements, dispatch)\n      return response.data\n    } catch (error) {\n      const typedError = error as AxiosError\n      return rejectWithValue(typedError?.response?.data)\n    }\n  },\n)\n\nexport const deleteResponse = createAsyncThunk('diary/deleteResponse', async (id: string, { rejectWithValue }) => {\n  try {\n    await api.delete(API_VACANCY_BY_ID_ENDPOINT(id))\n    return id\n  } catch (error) {\n    const typedError = error as AxiosError\n    return rejectWithValue(typedError?.response?.data)\n  }\n})\n","import { createAsyncThunk } from '@reduxjs/toolkit'\nimport { AxiosError } from 'axios'\nimport qs from 'qs'\nimport {\n  API_HR_ALL_NOTIFICATIONS,\n  API_HR_DELETE_SHOWED_NOTIFICATIONS,\n  API_HR_ID_NOTIFICATION,\n  API_HR_NOT_SHOWED_NOTIFICATIONS,\n  API_HR_SHOWED_NOTIFICATIONS,\n} from '../../utils/constants'\nimport api from './settings'\n\nimport { TStudentVacancyRequestParams } from '../types/student-vacancies/student-vacancies-types'\n\nconst paramsSerializer = (params: TStudentVacancyRequestParams) => qs.stringify(params, { arrayFormat: 'repeat' })\n\nexport const getShowedNotificationsList = createAsyncThunk(\n  'hr-notifications/getShowedNotificationsList',\n  async (params: { limit: number; page?: number | undefined }, { rejectWithValue }) => {\n    try {\n      const response = await api.get(`${API_HR_SHOWED_NOTIFICATIONS}`, {\n        params,\n        paramsSerializer,\n      })\n      return response?.data\n    } catch (e) {\n      const err = e as AxiosError\n      return rejectWithValue(err?.response)\n    }\n  },\n)\n\nexport const getNotShowedNotificationsList = createAsyncThunk(\n  'hr-notifications/getNotShowedNotificationsList',\n  async (params: { limit: number; page?: number | undefined }, { rejectWithValue }) => {\n    try {\n      const response = await api.get(`${API_HR_NOT_SHOWED_NOTIFICATIONS}`, {\n        params,\n        paramsSerializer,\n      })\n      return response?.data\n    } catch (e) {\n      const err = e as AxiosError\n      return rejectWithValue(err?.response)\n    }\n  },\n)\n\nexport const patchNotification = createAsyncThunk(\n  'hr-notifications/patchNotification',\n  async (id: number, { rejectWithValue }) => {\n    try {\n      const response = await api.patch(API_HR_ID_NOTIFICATION(id), { is_showed: 'true' })\n      return response?.data\n    } catch (e) {\n      const err = e as AxiosError\n      return rejectWithValue(err?.response)\n    }\n  },\n)\n\nexport const patchAllNotifications = createAsyncThunk(\n  'hr-notifications/patchAllNotifications',\n  async (_, { rejectWithValue }) => {\n    try {\n      const response = await api.get(`${API_HR_ALL_NOTIFICATIONS}`)\n      return response?.data\n    } catch (e) {\n      const err = e as AxiosError\n      return rejectWithValue(err?.response)\n    }\n  },\n)\n\nexport const deleteAllShowedNotifications = createAsyncThunk(\n  'hr-notifications/deleteAllShowedNotifications',\n  async (_, { rejectWithValue }) => {\n    try {\n      const response = await api.get(`${API_HR_DELETE_SHOWED_NOTIFICATIONS}`)\n      return response?.data\n    } catch (e) {\n      const err = e as AxiosError\n      return rejectWithValue(err?.response)\n    }\n  },\n)\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux'\nimport type { TRootState, AppDispatch } from './store'\n\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\nexport const useAppDispatch = () => useDispatch<AppDispatch>()\nexport const useAppSelector: TypedUseSelectorHook<TRootState> = useSelector\n","import { createSlice } from '@reduxjs/toolkit'\nimport {\n  createPassword,\n  getProfile,\n  getStatus,\n  postOnboarding,\n  resetPassword,\n  signIn,\n  signOut,\n  signUp,\n} from '../axios/auth'\nimport { IAuthState, IAPIError, IRequestInfo } from '../types/auth/auth-types'\n\nconst initialRequestInfoState: IRequestInfo = {\n  status: 'idle',\n  isError: false,\n  errorInfo: null,\n}\n\nexport const initialState: IAuthState = {\n  isLoggedIn: false,\n  profile: undefined,\n  role: null,\n  timeoutId: undefined,\n  signInRequest: initialRequestInfoState,\n  signUpRequest: initialRequestInfoState,\n  signOutRequest: initialRequestInfoState,\n  resetPassRequest: initialRequestInfoState,\n  createPassRequest: initialRequestInfoState,\n  getProfileRequest: initialRequestInfoState,\n  postOnboardingRequest: initialRequestInfoState,\n  getStatusRequest: initialRequestInfoState,\n}\n\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  reducers: {\n    setRole(state, action) {\n      state.role = action.payload\n    },\n    setTimeoutId(state, action) {\n      state.timeoutId = action.payload\n    },\n    clearTimeoutId(state) {\n      state.timeoutId = undefined\n    },\n    setUnlogged(state) {\n      state.isLoggedIn = false\n      state.profile = undefined\n      state.role = null\n    },\n    setProfile(state, action) {\n      state.profile = action.payload\n    },\n    clearRequestProfile(state) {\n      state.getProfileRequest = { ...initialRequestInfoState }\n    },\n    setVacation(state, action) {\n      state.getProfileRequest = {\n        ...state,\n        status: 'idle',\n        isError: true,\n        errorInfo: {\n          detail: 'vacation',\n          end_date: action.payload,\n          message: '',\n        },\n      }\n      state.role = null\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      // SIGN IN\n      .addCase(signIn.pending, (state) => {\n        state.signInRequest.status = 'pending'\n        state.signInRequest.isError = false\n        state.signInRequest.errorInfo = null\n      })\n      .addCase(signIn.fulfilled, (state, action) => {\n        state.signInRequest.status = 'succeeded'\n        state.isLoggedIn = true\n        state.role = action.payload?.role.toLowerCase()\n      })\n      .addCase(signIn.rejected, (state, action) => {\n        state.signInRequest.isError = true\n        state.signInRequest.errorInfo = action.payload as IAPIError\n        state.signInRequest.status = 'failed'\n      })\n\n      // SIGN UP\n      .addCase(signUp.pending, (state) => {\n        state.signUpRequest.status = 'pending'\n        state.signUpRequest.isError = false\n        state.signUpRequest.errorInfo = null\n      })\n      .addCase(signUp.fulfilled, (state, action) => {\n        state.signUpRequest.status = 'succeeded'\n      })\n      .addCase(signUp.rejected, (state, action) => {\n        state.signUpRequest.isError = true\n        state.signUpRequest.errorInfo = action.payload as IAPIError\n        state.signUpRequest.status = 'failed'\n      })\n\n      // SIGN OUT\n      .addCase(signOut.pending, (state) => {\n        state.signOutRequest.status = 'pending'\n        state.signOutRequest.isError = false\n        state.signOutRequest.errorInfo = null\n      })\n      .addCase(signOut.fulfilled, (state) => {\n        state.isLoggedIn = false\n        state.profile = undefined\n        state.role = null\n        state.signOutRequest.status = 'succeeded'\n      })\n      .addCase(signOut.rejected, (state, action) => {\n        state.isLoggedIn = false\n        state.profile = undefined\n        state.role = null\n        state.signOutRequest.isError = true\n        state.signOutRequest.errorInfo = action.payload as IAPIError\n        state.signOutRequest.status = 'failed'\n      })\n\n      // RESET PASSWORD\n      .addCase(resetPassword.pending, (state) => {\n        state.resetPassRequest.status = 'pending'\n        state.resetPassRequest.isError = false\n        state.resetPassRequest.errorInfo = null\n      })\n      .addCase(resetPassword.fulfilled, (state, action) => {\n        state.resetPassRequest.status = 'succeeded'\n      })\n      .addCase(resetPassword.rejected, (state, action) => {\n        state.resetPassRequest.isError = true\n        state.resetPassRequest.errorInfo = action.payload as IAPIError\n        state.resetPassRequest.status = 'failed'\n      })\n\n      // CREATE PASSWORD\n      .addCase(createPassword.pending, (state) => {\n        state.createPassRequest.status = 'pending'\n        state.createPassRequest.isError = false\n        state.createPassRequest.errorInfo = null\n      })\n      .addCase(createPassword.fulfilled, (state, action) => {\n        state.createPassRequest.status = 'succeeded'\n      })\n      .addCase(createPassword.rejected, (state, action) => {\n        state.createPassRequest.isError = true\n        state.createPassRequest.errorInfo = action.payload as IAPIError\n        state.createPassRequest.status = 'failed'\n      })\n\n      // GET PROFILE\n      .addCase(getProfile.pending, (state) => {\n        state.getProfileRequest.status = 'pending'\n        state.getProfileRequest.isError = false\n        state.getProfileRequest.errorInfo = null\n      })\n      .addCase(getProfile.fulfilled, (state, action) => {\n        state.getProfileRequest.status = 'succeeded'\n        state.profile = { ...action.payload }\n      })\n      .addCase(getProfile.rejected, (state, action) => {\n        const payload = action.payload as IAPIError\n        if (payload?.end_date) {\n          state.profile = undefined\n        } else {\n          state.profile = null\n        }\n        state.getProfileRequest.isError = true\n        state.getProfileRequest.errorInfo = payload\n        state.getProfileRequest.status = 'failed'\n      })\n\n      // GET STATUS\n      .addCase(getStatus.pending, (state) => {\n        state.getStatusRequest.status = 'pending'\n        state.getStatusRequest.isError = false\n        state.getStatusRequest.errorInfo = null\n      })\n      .addCase(getStatus.fulfilled, (state, action) => {\n        state.getStatusRequest.status = 'succeeded'\n        if (state.profile) state.profile = { ...state.profile, status: action.payload[0].value }\n      })\n      .addCase(getStatus.rejected, (state, action) => {\n        const payload = action.payload as IAPIError\n        state.getStatusRequest.isError = true\n        state.getStatusRequest.errorInfo = payload\n        state.getStatusRequest.status = 'failed'\n      })\n\n      // POST ONBOARDING\n      .addCase(postOnboarding.pending, (state) => {\n        state.postOnboardingRequest.status = 'pending'\n        state.postOnboardingRequest.isError = false\n        state.postOnboardingRequest.errorInfo = null\n      })\n      .addCase(postOnboarding.fulfilled, (state, action) => {\n        state.postOnboardingRequest.status = 'succeeded'\n        state.postOnboardingRequest.isError = false\n        state.profile = action.payload\n      })\n      .addCase(postOnboarding.rejected, (state, action) => {\n        state.postOnboardingRequest.status = 'failed'\n        state.postOnboardingRequest.isError = true\n        state.postOnboardingRequest.errorInfo = action.payload as IAPIError\n      })\n  },\n})\n\nexport const { setUnlogged, setProfile, clearRequestProfile, setVacation, setTimeoutId, clearTimeoutId, setRole } =\n  authSlice.actions\n\nexport default authSlice\n","import React from 'react'\nimport { AnyAction, ThunkDispatch } from '@reduxjs/toolkit'\nimport { enqueueSnackbar } from '../services/slices/app-slice'\nimport { ApiStage } from '../services/types/achievements/achievements-types'\n\nconst showAchievementsNotifications = (\n  achievements: Array<ApiStage>,\n  dispatch: ThunkDispatch<unknown, unknown, AnyAction>,\n) => {\n  if (achievements) {\n    achievements.forEach((achievement, index) => {\n      setTimeout(() => {\n        dispatch(\n          enqueueSnackbar({\n            info: {\n              type: 'achievement',\n              title: achievement.name,\n              message: achievement.condition_text,\n              image: achievement.success_image,\n            },\n            options: {\n              key: new Date().getTime() + Math.random(),\n              autoHideDuration: 6000,\n            },\n          }),\n        )\n      }, 500 * (index + 1))\n    })\n  }\n}\n\nexport default showAchievementsNotifications\n","const theme = {\n  typography: {\n    fontFamily: [\n      'YS Display',\n      'YS Text',\n      '-apple-system',\n      'BlinkMacSystemFont',\n      'Arial',\n      'Helvetica',\n      'sans-serif',\n    ].join(','),\n    color: '#1a1b22',\n    h1: {\n      fontFamily: ['YS Display', '-apple-system', 'BlinkMacSystemFont', 'Arial', 'Helvetica', 'sans-serif'].join(','),\n      fontSize: '34px',\n      lineHeight: '40px',\n    },\n    h2: {\n      fontFamily: ['YS Display', '-apple-system', 'BlinkMacSystemFont', 'Arial', 'Helvetica', 'sans-serif'].join(','),\n      fontSize: '24px',\n      lineHeight: '32px',\n    },\n    h3: {\n      fontFamily: ['YS Display', '-apple-system', 'BlinkMacSystemFont', 'Arial', 'Helvetica', 'sans-serif'].join(','),\n      fontSize: '20px',\n      lineHeight: '24px',\n    },\n    subtitle1: {\n      fontFamily: ['YS Text', '-apple-system', 'BlinkMacSystemFont', 'Arial', 'Helvetica', 'sans-serif'].join(','),\n      fontSize: '18px',\n      lineHeight: '24px',\n    },\n    body1: {\n      fontFamily: ['YS Display', '-apple-system', 'BlinkMacSystemFont', 'Arial', 'Helvetica', 'sans-serif'].join(','),\n      fontSize: '16px',\n      lineHeight: '20px',\n    },\n    body2: {\n      // для использования в качестве меток инпутбоксов в формах\n      fontFamily: ['YS Text', '-apple-system', 'BlinkMacSystemFont', 'Arial', 'Helvetica', 'sans-serif'].join(','),\n      fontSize: '13px',\n      lineHeight: '16px',\n      fontWeight: 500,\n      '&.MuiTypography-root': {\n        fontFamily: ['YS Text', '-apple-system', 'BlinkMacSystemFont', 'Arial', 'Helvetica', 'sans-serif'].join(','),\n        fontSize: '13px',\n        lineHeight: '16px',\n        fontWeight: 500,\n      },\n    },\n    caption1: {\n      fontFamily: ['YS Text', '-apple-system', 'BlinkMacSystemFont', 'Arial', 'Helvetica', 'sans-serif'].join(','),\n      fontSize: '13px',\n      lineHeight: '14px',\n    },\n    caption2: {\n      fontFamily: ['YS Text', '-apple-system', 'BlinkMacSystemFont', 'Arial', 'Helvetica', 'sans-serif'].join(','),\n      fontSize: '13px',\n      lineHeight: '14px',\n    },\n  },\n  palette: {\n    type: 'light',\n    text: {\n      primary: '#1A1B22',\n      secondary: '#797981',\n    },\n    background: {\n      default: '#FFFFFF',\n    },\n    button: {\n      primary: '#488EFB',\n      primaryTextColor: '#FFFFFF',\n      primaryHover: '#1D6BF3',\n    },\n    link: {\n      primary: '#488EFB',\n      primaryTextColor: '#FFFFFF',\n      primaryHover: '#1D6BF3',\n    },\n  },\n}\n\nexport default theme\n","import { createAsyncThunk } from '@reduxjs/toolkit'\nimport { AxiosError } from 'axios'\nimport { API_STATS_ENDPOINT } from '../../utils/constants'\nimport api from './settings'\n\nexport const getNotifications = createAsyncThunk(\n  'metrics/getNotifications',\n  async (url: string, { rejectWithValue }) => {\n    try {\n      const response = await api.get(url)\n      return response.data\n    } catch (error) {\n      const typedError = error as AxiosError\n      return rejectWithValue(typedError?.response?.data)\n    }\n  },\n)\n\nexport const getStats = createAsyncThunk('metrics/getStats', async (id: string | undefined, { rejectWithValue }) => {\n  try {\n    let url = API_STATS_ENDPOINT\n    if (id) url += `?profile_id=${id}`\n    const response = await api.get(url)\n    return response.data\n  } catch (error) {\n    const typedError = error as AxiosError\n    return rejectWithValue(typedError?.response?.data)\n  }\n})\n","import { createAsyncThunk } from '@reduxjs/toolkit'\nimport qs from 'qs'\nimport { AxiosError } from 'axios'\nimport { TStudentVacancyRequestParams } from '../types/student-vacancies/student-vacancies-types'\n\nexport const getProjects = createAsyncThunk('studentsWorkshop/getProjects', async (_: void, { rejectWithValue }) => {\n  try {\n    // TODO не знаю как будем получать разные типы проектов - по одной ручке и сами фильтровать\n    // TODO либо несколько разных ручек будет. Сделаю пока будто один запрос, а там дальше разберёмся\n    const studentsProjects = [\n      {\n        id: 145,\n        customer: 'Илья Петров',\n        website: null,\n        name: 'Самый проектовый проект',\n        project_info: 'всем привет!всем привет!',\n        responsibilities: 'всем привет!всем привет!',\n        circs: 'всем привет!всем привет!',\n        mandatory_requirements: 'всем привет!всем привет!',\n        optional_requirements: null,\n        selection_stages: 'всем привет!всем привет!',\n        project_url: 'https://ya.ru/',\n        is_accepted: false,\n        customer_logo: 'http://51.250.71.86:6001/django_media/hrvacancies/JPG_320x400_eZwq6i2.jpg',\n        small_cover: null,\n        big_cover: null,\n        is_viewed: false,\n        start_date: '2023-02-25',\n        advice: null,\n      },\n      {\n        id: 146,\n        customer: 'Пётр Иванов',\n        website: null,\n        name: 'Продуктовый дизайн продукта',\n        project_info: 'всем привет!всем привет!',\n        responsibilities: 'всем привет!всем привет!',\n        circs: 'всем привет!всем привет!',\n        mandatory_requirements: 'всем привет!всем привет!',\n        optional_requirements: null,\n        selection_stages: 'всем привет!всем привет!',\n        is_accepted: false,\n        customer_logo: 'http://51.250.71.86:6001/django_media/hrvacancies/JPG_320x400_eZwq6i2.jpg',\n        small_cover: null,\n        big_cover: null,\n        is_viewed: false,\n        start_date: '2023-02-25',\n        advice: null,\n      },\n      {\n        id: 147,\n        customer: 'Пётр Иванов',\n        website: null,\n        name: 'Продуктовый дизайн продукта',\n        project_info: 'всем привет!всем привет!',\n        responsibilities: 'всем привет!всем привет!',\n        circs: 'всем привет!всем привет!',\n        mandatory_requirements: 'всем привет!всем привет!',\n        optional_requirements: null,\n        selection_stages: 'всем привет!всем привет!',\n        is_accepted: false,\n        customer_logo: 'http://51.250.71.86:6001/django_media/hrvacancies/JPG_320x400_eZwq6i2.jpg',\n        small_cover: null,\n        big_cover: null,\n        is_viewed: false,\n        start_date: '2023-02-25',\n        advice: null,\n      },\n      {\n        id: 148,\n        customer: 'Пётр Иванов',\n        website: null,\n        name: 'Продуктовый дизайн продукта',\n        project_info: 'всем привет!всем привет!',\n        responsibilities: 'всем привет!всем привет!',\n        circs: 'всем привет!всем привет!',\n        mandatory_requirements: 'всем привет!всем привет!',\n        optional_requirements: null,\n        selection_stages: 'всем привет!всем привет!',\n        is_accepted: false,\n        customer_logo: 'http://51.250.71.86:6001/django_media/hrvacancies/JPG_320x400_eZwq6i2.jpg',\n        small_cover: null,\n        big_cover: null,\n        is_viewed: false,\n        start_date: '2023-02-25',\n        advice: null,\n      },\n      {\n        id: 149,\n        customer: 'Пётр Иванов',\n        website: null,\n        name: 'Продуктовый дизайн продукта',\n        project_info: 'всем привет!всем привет!',\n        responsibilities: 'всем привет!всем привет!',\n        circs: 'всем привет!всем привет!',\n        mandatory_requirements: 'всем привет!всем привет!',\n        optional_requirements: null,\n        selection_stages: 'всем привет!всем привет!',\n        is_accepted: false,\n        customer_logo: 'http://51.250.71.86:6001/django_media/hrvacancies/JPG_320x400_eZwq6i2.jpg',\n        small_cover: null,\n        big_cover: null,\n        is_viewed: false,\n        start_date: '2023-02-25',\n        advice: null,\n      },\n    ]\n    const charityProjects = [\n      {\n        id: 1460,\n        customer: 'Пётр Иванов',\n        website: null,\n        name: 'Продуктовый дизайн продукта',\n        project_info: 'всем привет!всем привет!',\n        responsibilities: 'всем привет!всем привет!',\n        circs: 'всем привет!всем привет!',\n        mandatory_requirements: 'всем привет!всем привет!',\n        optional_requirements: null,\n        selection_stages: 'всем привет!всем привет!',\n        is_accepted: false,\n        customer_logo: 'http://51.250.71.86:6001/django_media/hrvacancies/JPG_320x400_eZwq6i2.jpg',\n        small_cover: null,\n        big_cover: null,\n        is_viewed: false,\n        start_date: '2023-02-25',\n        advice: null,\n      },\n      {\n        id: 1461,\n        customer: 'Пётр Иванов',\n        website: null,\n        name: 'Продуктовый дизайн продукта',\n        project_info: 'всем привет!всем привет!',\n        responsibilities: 'всем привет!всем привет!',\n        circs: 'всем привет!всем привет!',\n        mandatory_requirements: 'всем привет!всем привет!',\n        optional_requirements: null,\n        selection_stages: 'всем привет!всем привет!',\n        is_accepted: false,\n        customer_logo: 'http://51.250.71.86:6001/django_media/hrvacancies/JPG_320x400_eZwq6i2.jpg',\n        small_cover: null,\n        big_cover: null,\n        is_viewed: false,\n        start_date: '2023-02-25',\n        advice: null,\n      },\n      {\n        id: 1462,\n        customer: 'Пётр Иванов',\n        website: null,\n        name: 'Продуктовый дизайн продукта',\n        project_info: 'всем привет!всем привет!',\n        responsibilities: 'всем привет!всем привет!',\n        circs: 'всем привет!всем привет!',\n        mandatory_requirements: 'всем привет!всем привет!',\n        optional_requirements: null,\n        selection_stages: 'всем привет!всем привет!',\n        is_accepted: false,\n        customer_logo: 'http://51.250.71.86:6001/django_media/hrvacancies/JPG_320x400_eZwq6i2.jpg',\n        small_cover: null,\n        big_cover: null,\n        is_viewed: false,\n        start_date: '2023-02-25',\n        advice: null,\n      },\n    ]\n    // const response = await api.get(API_PARTNER_DIRECTORY_ENDPOINT)\n    return { studentsProjects, charityProjects }\n  } catch (error) {\n    const typedError = error as AxiosError\n    return rejectWithValue(typedError?.response?.data)\n  }\n})\n\nconst paramsSerializer = (params: TStudentVacancyRequestParams) => qs.stringify(params, { arrayFormat: 'repeat' })\n\nexport const createResponse = createAsyncThunk(\n  'studentsWorkshop/createResponse',\n  async (id: number, { rejectWithValue }) => {\n    try {\n      // TODO вообще не понятно, как будем откликаться, поэтому пока просто пробрасываю айди дальше\n\n      // const response = await api.get(API_PARTNER_DIRECTORY_ENDPOINT)\n      return id\n    } catch (error) {\n      const typedError = error as AxiosError\n      return rejectWithValue(typedError?.response?.data)\n    }\n  },\n)\n","const PartnersFormConstants = {\n  API_MANAGERS: '/sh0w_fo9_f0rm',\n  API_SCOPE: '/directory/company/scope',\n  API_TYPE: '/directory/company/type',\n  API_SIZE: '/directory/company/size',\n  API_WORKFORMAT: '/hr_part/workformat',\n  API_EMPLOYMENT: '/hr_part/employment',\n  API_CREATE: '/form_json_handler',\n}\n\nexport default PartnersFormConstants\n","import { createAsyncThunk } from '@reduxjs/toolkit'\nimport { AxiosError } from 'axios'\nimport api from './settings'\nimport PartnersFormConstants from '../../utils/constants/partners-form-constants'\n\nexport const getDirectories = createAsyncThunk('partners-form/getDirectories', async (_: void, { rejectWithValue }) => {\n  try {\n    const responseManager = await api.get(PartnersFormConstants.API_MANAGERS)\n    const responseScope = await api.get(PartnersFormConstants.API_SCOPE)\n    const responseType = await api.get(PartnersFormConstants.API_TYPE)\n    const responseSize = await api.get(PartnersFormConstants.API_SIZE)\n    const responseWorkFormat = await api.get(PartnersFormConstants.API_WORKFORMAT)\n    const responseEmployment = await api.get(PartnersFormConstants.API_EMPLOYMENT)\n    const managersData = responseManager?.data?.map((m: { id: number; first_name: string; last_name: string }) => ({\n      id: m.id,\n      name: `${m.first_name} ${m.last_name}`,\n    }))\n    const typesData = responseType?.data?.map((t: { id: number; value: string }) => ({ id: t.id, name: t.value }))\n    const scopeData = responseScope?.data?.map((s: { id: number; value: string }) => ({ id: s.id, name: s.value }))\n    const sizeData = responseSize?.data?.map((s: { id: number; value: string }) => ({ id: s.id, name: s.value }))\n    const workFormatData = responseWorkFormat?.data?.map((s: { id: number; value: string }) => ({\n      id: s.id,\n      name: s.value,\n    }))\n    const employmentData = responseEmployment?.data?.map((s: { id: number; value: string }) => ({\n      id: s.id,\n      name: s.value,\n    }))\n    return {\n      managers: managersData,\n      types: typesData,\n      scopes: scopeData,\n      sizes: sizeData,\n      workFormats: workFormatData,\n      employments: employmentData,\n    }\n  } catch (e) {\n    const typedError = e as AxiosError\n    return rejectWithValue(typedError?.response)\n  }\n})\n\nexport const createPartnerForm = createAsyncThunk(\n  'partners-form/createPartnerForm',\n  async (data: FormData, { rejectWithValue }) => {\n    try {\n      const response = await api.post(PartnersFormConstants.API_CREATE, data, {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n        },\n      })\n      return response.data\n    } catch (error) {\n      const typedError = error as AxiosError\n      return rejectWithValue(typedError?.response?.data)\n    }\n  },\n)\n","import { createSlice } from '@reduxjs/toolkit'\nimport { Notification } from '../types/global-types'\n\ninterface IAppState {\n  achievementNotifications: Array<Notification>\n}\n\nexport const initialState: IAppState = {\n  achievementNotifications: [],\n}\n\nconst appSlice = createSlice({\n  name: 'app',\n  initialState,\n  reducers: {\n    enqueueSnackbar(state, action) {\n      let notification = action.payload\n      const key = notification.options && notification.options.key\n      notification = {\n        ...notification,\n        key: key || new Date().getTime() + Math.random(),\n      }\n      state.achievementNotifications.push(notification)\n    },\n    closeSnackbar(state, action) {\n      // const dismissAll = !action.payload.key\n      // state.achievementNotifications = state.achievementNotifications.map((notification) =>\n      //   dismissAll || notification.key === action.payload.key\n      //     ? { ...notification, dismissed: true }\n      //     : { ...notification },\n      // )\n      if (!action.payload) {\n        state.achievementNotifications = []\n      } else {\n        state.achievementNotifications = state.achievementNotifications.filter(\n          (notification) => notification.key !== action.payload,\n        )\n      }\n    },\n    removeSnackbar(state, action) {\n      const dismissAll = !action.payload\n      state.achievementNotifications = state.achievementNotifications.map((notification) =>\n        dismissAll || notification.key === action.payload ? { ...notification, dismissed: true } : { ...notification },\n      )\n    },\n  },\n})\n\nexport const { enqueueSnackbar, closeSnackbar, removeSnackbar } = appSlice.actions\n\nexport default appSlice\n","export const RELEASE = '1.0.0'\nexport const PROJECT_NAME = 'Карьерный трекер'\nexport const PROJECT_START_DATE = new Date(2021, 10, 1)\nconst startDayValue = new Date()\nstartDayValue.setDate(startDayValue.getDate() - 13)\nexport const PICKERS_START_DATE = startDayValue\n\nexport const PASSWORD_REG_EXP = /^[a-zA-Z0-9-._!\"`'#%&,:;<>=@{}~$()*+|/\\\\?[\\]^ ]*$/\n\nexport const ONBOARDING_COHORT_EXP = /^\\d+$/\nexport const NAME_FIELDS_REG_EXP = /^[A-ZА-ЯЁ -]*$/i\nexport const CITY_FIELDS_REG_EXP = /^[A-ZА-ЯЁ0-9 .,\\-\"]*$/i\nexport const OTHER_TEXT_FIELDS_REG_EXP = /^[A-ZА-ЯЁ0-9 \\-+\"]*$/i\nexport const TELEGRAM_REG_EXP = /^[A-Z0-9_\"]*$/i\n\nexport const INSTITUTION_TEXT_FIELDS_REG_EXP = /^[A-ZА-ЯЁ№0-9 .\\-\"]*$/i\nexport const NAME_FIELDS_TIP =\n  'Используй в поле только русские буквы А-Я, а-я, латинские буквы A-Z, a-z, пробел и знак дефиса \"-\"'\nexport const CITY_FIELDS_TIP =\n  'Используй в поле только русские буквы А-Я, а-я, латинские буквы A-Z, a-z, цифры 0-9, точку, запятую, знак дефиса \"-\" и пробел'\nexport const OTHER_TEXT_FIELDS_TIP =\n  'Используй в поле только русские буквы А-Я, а-я, латинские буквы A-Z, a-z, цифры 0-9, знак дефиса \"-\", пробел и кавычки'\nexport const INSTITUTION_TEXT_FIELDS_TIP =\n  'Используй в поле только русские буквы А-Я, а-я, латинские буквы A-Z, a-z, цифры 0-9, знак дефиса \"-\", пробел, кавычки и точку'\nexport const URL_REG_EXP =\n  /^$|((https?):\\/\\/)?(www.)?[a-z0-9]+(\\.[a-z]{2,}){1,3}(#?\\/?[a-zA-Z0-9#]+)*\\/?(\\?[a-zA-Z0-9-_]+=[a-zA-Z0-9-%]+&?)?.*$/\n\nexport const CONSULTANT_ROLES = ['admin', 'consultant']\nexport const VACANCY_MANAGER_ROLES = ['vacancy_manager']\nexport const USER_ROLES = ['user']\nexport const WORKSHOP_MANAGER_ROLES = ['workshop_manager']\n\nexport const API_SIGN_IN_ENDPOINT = '/token'\nexport const API_SIGN_OUT_ENDPOINT = '/signout'\nexport const API_SIGN_UP_ENDPOINT = '/register'\nexport const API_TOKEN_REFRESH_ENDPOINT = '/token/refresh'\nexport const API_REFRESH_ENDPOINT = '/refresh'\nexport const API_PASSWORD_RECOVERY_ENDPOINT = '/password_reset'\nexport const API_CREATE_NEW_PASSWORD_ENDPOINT = '/password_resetconfirm/ '\nexport const API_CONSULTANT_DESCRIPTION_ENDPOINT = '/consultations/themes'\nexport const API_CONSULTATION_ENDPOINT = '/consultations'\nexport const API_RECOMMENDATION_ENDPOINT = '/recommendations'\nexport const API_ADVICE_ENDPOINT = '/advice'\nexport const API_INTERVIEWS_ENDPOINT = '/interviews'\nexport const API_ONBOARDING_DIRECTORY_ENDPOINT = '/onboarding-directory'\nexport const API_CURRENCY_DIRECTORY_ENDPOINT = '/currency-directory'\nexport const API_SOURCE_DIRECTORY_ENDPOINT = '/directory/vacancy-source'\nexport const API_PARTNER_DIRECTORY_ENDPOINT = '/partner-directory'\nexport const API_PROFILE_ENDPOINT = '/profile'\nexport const API_USER_PROFILE_ENDPOINT = '/profile/current'\nexport const API_USER_STATUS_ENDPOINT = '/student-status'\nexport const API_ACHIEVEMENTS_ENDPOINT = '/achievements'\nexport const API_STATS_ENDPOINT = '/vacancies/get_stats'\nexport const API_FOUND_JOB_ENDPOINT = '/work'\nexport const API_STAFF_FOUND_JOB_ENDPOINT = '/staffwork'\nexport const API_HOLIDAYS_ENDPOINT = '/holidays'\nexport const API_SET_HOLIDAYS_ENDPOINT = '/holidays/set_holiday'\nexport const API_HOLIDAYS_COUNTER_ENDPOINT = '/holidays/counter'\nexport const API_REPORTS_ENDPOINT = '/reports'\nexport const API_REPORT_BY_ID_ENDPOINT = (id) => `${API_REPORTS_ENDPOINT}/${id}`\nexport const API_REPORTS_FEED_ENDPOINT = (params) => `${API_REPORTS_ENDPOINT}/feed${params}`\nexport const API_USER_REPORTS_ENDPOINT = (params) => `${API_REPORTS_ENDPOINT}/me?${params}`\nexport const API_VACANCIES_ENDPOINT = '/vacancies'\nexport const API_RESPONSE_CONTACTS_ENDPOINT = (id) => `/vacancies/contacts?vacancy_id=${id}`\nexport const API_VACANCY_BY_ID_ENDPOINT = (id) => `${API_VACANCIES_ENDPOINT}/${id}`\nexport const API_VACANCIES_CONTACTS_ENDPOINT = `/vacancies/contacts`\nexport const API_APPLICATIONS_ENDPOINT = '/application'\nexport const API_APPLICATION_BY_ID_ENDPOINT = (id) => `${API_APPLICATIONS_ENDPOINT}/${id}`\nexport const API_STUDENTS_LIST_ENDPOINT = '/profile'\nexport const API_STUDENT_BY_ID_ENDPOINT = (id) => `${API_STUDENTS_LIST_ENDPOINT}/${id}`\nexport const API_GET_FILTERS_STUDENTS = '/admin-students-directory'\nexport const API_APPLICATION_GET_FILTERS = '/application-directory'\nexport const API_GET_WEEK_STATS = '/reports/get_last_report_stats'\nexport const API_APPLICATIONS_CSV = '/application/application-downloader'\nexport const API_STUDENTS_CSV = '/profile-downloader'\nexport const API_FEED_CSV = '/report-downloader'\nexport const API_FEED_SUMMARY_CSV = '/profile-statistics-downloader'\nexport const API_COHORT_GET_FILTERS_ENDPOINT = '/cohort-directory'\nexport const API_COHORT_ENDPOINT = '/cohort'\nexport const API_COHORT_BY_ID_ENDPOINT = (id) => `${API_COHORT_ENDPOINT}/${id}`\nexport const API_LOCATION_DIRECTORY_ENDPOINT = '/location-directory'\nexport const API_COMPANY_DIRECTORY_ENDPOINT = '/companies-student-directory'\nexport const API_COMPANY_DIRECTORY_NOT_STUDENT_ENDPOINT = '/hr_part/company-staff-directory'\nexport const API_COMPANY_SEARCH_ENDPOINT = '/companies'\nexport const API_HR_PART_DIRECTORY_ENDPOINT = '/hr_part/directory'\nexport const API_HR_PART_COMPANY_SIZE_ENDPOINT = '/directory/company/size'\nexport const API_HR_PART_COMPANY_TYPE_ENDPOINT = '/directory/company/type'\nexport const API_HR_PART_COMPANY_SCOPE_ENDPOINT = '/directory/company/scope'\nexport const API_HR_PART_HR_PROFILES_ENDPOINT = '/dictionary/hr-profiles'\nexport const API_HR_PART_HR_SOURCES_ENDPOINT = '/directory/hr-vacancy-source'\nexport const API_HR_PART_VACANCY_STUDENT_ENDPOINT = '/hr_part/vacancy/show_vacancies_for_student'\nexport const API_HR_PART_ABOUT_VACANCY_STUDENT_ENDPOINT = (id) => `/hr_part/vacancy/${id}/show_detail_for_student`\nexport const API_STUDENT_EXTERNAL_VACANCY = '/external'\nexport const API_HR_PART_VACANCY_ENDPOINT = '/hr_part/vacancy'\nexport const API_HR_PART_COMPANY_ENDPOINT = '/hr_part/vacancy'\nexport const API_HR_PART_DRAFT_VACANCY_ENDPOINT = '/hr_part/vacancy/create_draft'\nexport const API_HR_PART_STATISTIC_ENDPOINT = '/hr_part/vacancies-list-statistics'\nexport const API_HR_PART_VACANCY_BY_ID_ENDPOINT = (id) => `${API_HR_PART_VACANCY_ENDPOINT}/${id}`\nexport const API_HR_PART_VACANCY_INFO_ENDPOINT = (id) => `${API_HR_PART_VACANCY_ENDPOINT}/${id}/info`\nexport const API_HR_PART_EXPORT_INFO_ENDPOINT = (id) => `${API_HR_PART_VACANCY_ENDPOINT}/${id}/info/get_file`\nexport const API_GET_TERM_OF_USE = '/terms-of-use-text/latest'\nexport const API_POST_TERM_OF_USE = '/terms-of-use'\nexport const API_PARTNER_VACANCY_RESPONSE_ENDPOINT = '/vacancies/partner_response'\nexport const API_VACANCY_RESPONSE_ENDPOINT = '/vacancies/external-response'\nexport const REG_PAGE_TITLE = 'Регистрация'\nexport const REG_PAGE_DESCRIPTION = 'Зарегистрироваться'\nexport const REG_FORM_EMAIL_PLACEHOLDER = 'Почта как на платформе Практикума'\nexport const REG_FORM_PASS_PLACEHOLDER = 'Придумай пароль'\nexport const REG_FORM_PASS_CONFIRM_PLACEHOLDER = 'Повтори пароль'\nexport const REG_FORM_EMPTY_EMAIL_ERROR = 'Введите адрес электронной почты'\nexport const REG_FORM_MIN_SYMBOLS = 8\nexport const REG_FORM_MAX_SYMBOLS = 25\nexport const REG_FORM_MINMAX_SYMBOLS_ERROR = `Возможная длина поля пароль ${REG_FORM_MIN_SYMBOLS}-${REG_FORM_MAX_SYMBOLS} символов`\nexport const REG_FORM_BAD_EMAIL_ERROR = 'Укажи адрес почты в формате “user@gmail.com\"'\nexport const REG_FORM_EMPTY_PASS_ERROR = 'Введите пароль'\nexport const REG_FORM_BAD_PASS_ERROR =\n  'В пароле могут использоваться только англ. заглавный и прописные буквы A-Z, цифры 0-9, а также знак тире “-” и спец. символы'\nexport const REG_FORM_CONFIRM_PASS_ERROR = 'Введенные пароли не совпадают'\nexport const REG_FORM_POPUP_BUTTON = 'Войти'\nexport const REG_FORM_POPUP_CONFIRM_REGISTRATION = 'Регистрация завершена'\nexport const LOG_PAGE_DESCRIPTION = 'Войти в аккаунт'\nexport const LOG_FORM_EMPTY_PASSWORD_ERROR = 'Введите пароль'\nexport const LOG_FORM_EMPTY_EMAIL_ERROR = 'Введите адрес электронной почты'\nexport const LOG_FORM_BAD_EMAIL_ERROR = 'Введите адрес почты вида Ivan@mail.ru'\nexport const LOG_FORM_EMAIL_PLACEHOLDER = 'Почта'\nexport const LOG_FORM_PASS_PLACEHOLDER = 'Пароль'\nexport const EXIT_POPUP_TITLE = 'Выход'\nexport const EXIT_POPUP_SUBTITLE = 'Выйти из учетной записи?'\nexport const EXIT_POPUP_CLOSE_BUTTON = 'Остаться'\nexport const EXIT_POPUP_EXIT_BUTTON = 'Выйти'\nexport const CREATE_COHORT_NUMBER_ERROR = 'Выбран некорректный номер потока'\nexport const CREATE_COHORT_NUMBER_REQUIRED_ERROR = 'Введи номер потока'\nexport const CREATE_COHORT_COURSE_REQUIRED_ERROR = 'Выбери курс'\nexport const CREATE_COHORT_INFORMATION_POPUP_TITLE = 'Внимание!'\nexport const CREATE_COHORT_INFORMATION_POPUP_SUBTITLE =\n  'Вы не можете сменить статус потока на архивный, пока в нём ещё есть активные студенты. Чтобы это сделать, у всех студентов (в этом потоке) должен быть выставлен статус “Нашёл работу” или “Отчислен“'\nexport const CREATE_COHORT_INFORMATION_POPUP_BUTTON_TEXT = 'Понятно'\nexport const TEMP_STATUSES = [\n  {\n    priority: 1,\n    title: 'Отклики на вакансии',\n    status_id: 'response',\n  },\n  {\n    priority: 2,\n    title: 'Собеседования с HR',\n    status_id: 'hr_interview',\n  },\n  {\n    priority: 3,\n    title: 'Тестовые задания',\n    status_id: 'test_task',\n  },\n  {\n    priority: 4,\n    title: 'Технические собеседования',\n    status_id: 'tech_interview',\n  },\n  {\n    priority: 5,\n    title: 'Собеседования с руководителем',\n    status_id: 'boss_interview',\n  },\n  {\n    priority: 6,\n    title: 'Офферы',\n    status_id: 'offer',\n  },\n  {\n    priority: 7,\n    title: 'Отказы',\n    status_id: 'rejection',\n  },\n]\n\nexport const COLORS = [\n  {\n    title: 'Фиолетовый',\n    color: '#CCC2ED',\n  },\n  {\n    title: 'Желтый',\n    color: '#FFE1BD',\n  },\n  {\n    title: 'Розовый',\n    color: '#FFDDE5',\n  },\n  {\n    title: 'Зеленый',\n    color: '#C2E5CE',\n  },\n  {\n    title: 'Синий',\n    color: '#ACCCFF',\n  },\n]\nexport const ELLIPSE_GREEN_COLORS = '#87CC9E'\nexport const ELLIPSE_ORANGE_COLORS = '#FFCE92'\nexport const ELLIPSE_ORCHID_COLORS = '#7F67D2'\nexport const ELLIPSE_BLUE_COLORS = '#5A9BFF'\nexport const FILE_SIZE = 5242880\nexport const SUPPORTED_FORMATS = ['image/jpeg', 'image/png', 'image/pjpeg']\nexport const LOGO_SUPPORTED_FORMATS_VALIDATION = ['image/jpeg', 'image/png', 'image/pjpeg', 'image/svg+xml']\nexport const LOGO_SUPPORTED_FORMATS = 'image/jpeg,image/png,image/pjpeg,image/svg+xml'\nexport const MAX_COMMENT_SYMBOLS_FOUND_JOB_AND_WEEK_REPORT = 500\nexport const MIN_COMMENT_SYMBOLS_FOUND_JOB_AND_WEEK_REPORT = 80\nexport const MAX_COMMENT_SYMBOLS_LAST_WORK_ONBOARDING = 150\nexport const MIN_COMMENT_SYMBOLS_LAST_WORK_ONBOARDING = 3\nexport const MIN_TEXT_FIELD_SYMBOLS = 1\nexport const MAX_TEXT_FIELD_SYMBOLS = 150\nexport const EXIT_TIMER = 6002\nexport const RESPONSE_WORK_REGEXP = /^[a-zA-ZА-ЯЁ0-9-._!\"`'#%&,:;<>=@{}~$()*+|/\\\\?[\\]^ ]*$/i\nexport const RESPONSE_WORK_TIP =\n  'Поле может содержать только русские и английские буквы А-Я, а-я, A-Z, a-z, кавычки, точку, пробел, дефис, спецсимволы'\nexport const RESPONSE_LOCATION_TIP =\n  'Поле может содержать только русские и английские буквы, точку, запятую, пробел, дефис'\nexport const RESPONSE_COMMENT_REGEXP = /^[A-ZА-ЯЁ0-9 \\-\".,]*$/i\nexport const RESPONSE_COMMENT_TIP =\n  'Поле может содержать русские и английские буквы А-Я, а-я, A-Z, a-z, цифры 0-9, пробел, кавычки, точку, запятую, дефис'\nexport const RESPONSE_TEXT_FIELDS_MIN_SYMBOLS = 2\nexport const RESPONSE_TEXT_FIELD_MAX_SYMBOLS = 150\nexport const RESPONSE_TEXT_FIELD_MINMAX_TIP = `Длина поля ${RESPONSE_TEXT_FIELDS_MIN_SYMBOLS}-${RESPONSE_TEXT_FIELD_MAX_SYMBOLS} символов`\nexport const RESPONSE_COMMENT_MAX_SYMBOLS = 3000\nexport const RESPONSE_COMMENT_MAX_SYMBOLS_TIP = `Длина поля не более ${RESPONSE_COMMENT_MAX_SYMBOLS} символов`\nexport const MAX_BIRTHDAY_DATE_ERROR = 'В данный момент в проекте можно участвовать лицам старше 18 лет'\nexport const MAX_PORTFOLIO_SIZE = 10485760\nexport const MAX_PORTFOLIO_SIZE_TIP = 'Превышен допустимый размер'\nexport const PORTFOLIO_SUPPORTED_FORMATS = 'image/jpeg, image/png, application/pdf'\nexport const PORTFOLIO_LETTER_SUPPORTED_FORMATS =\n  'application/pdf, .doc,.docx,application/msword,application/vnd.openxmlformats-officedocument.wordprocessingml.document,text/plain,.txt'\nexport const PORTFOLIO_SUPPORTED_FORMATS_TIP = 'Данный формат файла не поддерживается'\nexport const PORTFOLIO_COUNT_TIP = (number) =>\n  `Возможно добавить не более ${number} ${number === 1 ? 'файла' : 'файлов'}`\nexport const PORTFOLIO_COUNT_EXTRA_TIP = 'Возможно добавить ещё не более одного файла'\nexport const TEXT_REGEX = /^[A-ZА-ЯЁ0-9 !\"#$%&'()*+,-./:;<=>?@[\\]^_`{|}~]*$/i\nexport const TEXT_REGEX_TIP =\n  'Используй в поле только русские буквы, латинские буквы, цифры, точку, запятую, пробел, дефис, кавычки, спец. символы.'\nexport const INTEGER_REGEX = /^-?[0-9]+$/i\nexport const REGISTER_WEAK_NUMBER_PASSWORD_ERROR = 'Введённый пароль состоит только из цифр.'\nexport const REGISTER_WEAK_PASSWORD_ERROR = 'Введённый пароль слишком широко распространён.'\nexport const REGISTER_SHORT_PASSWORD_ERROR =\n  'Введённый пароль слишком короткий. Он должен содержать как минимум 8 символов.'\nexport const REGISTER_PRIVATE_INFO_ERROR = 'Ваш пароль не может быть слишком похож на другую вашу личную информацию'\nexport const REGISTER_UNIQUE_MAIL = 'Значения поля должны быть уникальны.'\nexport const REGISTER_UNIQUE_MAIL_FORM_TEXT = 'Указанный email уже используется'\nexport const REGISTER_INVALID_MAIL = 'Введите правильный адрес электронной почты.'\nexport const AUTH_ACCOUNT_NOT_FOUND_ERROR = 'Не найдено активной учетной записи с указанными данными'\nexport const NOT_EQUAL_PASSWORD_ERROR = 'Пароли не совпадают.'\nexport const LOGIN_ENTER_ERROR = 'Не удается войти. Пожалуйста, проверь правильность написания логина и пароля'\nexport const FORGOT_PASSWORD_ERROR =\n  \"We couldn't find an account associated with that email. Please try a different e-mail address.\"\nexport const FORGOT_PASSWORD_ERROR_FORM_TEXT = 'Не удалось найти аккаунт, связанный с данным email-адресом'\nexport const PASSWORD_LIKE_EMAIL_ERROR = 'Введённый пароль слишком похож на email.'\nexport const PASSWORD_LIKE_EMAIL_ERROR_FORM_TEXT = 'Введённый пароль слишком похож на email. Придумайте другой пароль'\nexport const VACATION_THIRD_PAD_TEXTFIELD_MIN_SYMBOLS = 20\nexport const VACATION_THIRD_PAD_SELECTION_STAGE_FIELD_MIN_SYMBOLS = 1\nexport const VACATION_THIRD_PAD_ABOUT_COMPANY_MAX_SYMBOLS = 500\nexport const VACATION_THIRD_PAD_TEXTFIELD_MAX_SYMBOLS = 1000\nexport const VACATION_THIRD_PAD_SELECTION_STAGE_MINMAX_TIPS = `Допустимая длина ${VACATION_THIRD_PAD_SELECTION_STAGE_FIELD_MIN_SYMBOLS}-${VACATION_THIRD_PAD_ABOUT_COMPANY_MAX_SYMBOLS} символов`\nexport const VACATION_THIRD_PAD_ABOUT_COMPANY_MINMAX_TIPS = `Допустимая длина ${VACATION_THIRD_PAD_TEXTFIELD_MIN_SYMBOLS}-${VACATION_THIRD_PAD_ABOUT_COMPANY_MAX_SYMBOLS} символов`\nexport const VACATION_THIRD_PAD_TEXTFIELD_MINMAX_TIPS = `Допустимая длина ${VACATION_THIRD_PAD_TEXTFIELD_MIN_SYMBOLS}-${VACATION_THIRD_PAD_TEXTFIELD_MAX_SYMBOLS} символов`\nexport const VACATION_THIRD_PAD_REGEXP = /^[a-zA-ZА-ЯЁ0-9- ]*$/i\nexport const VACATION_THIRD_PAD_TEXT_TIPS =\n  'Можно использовать русские буквы А-Я, а-я, латинские буквы A-Z, a-z, знак дефиса \"-\", пробел'\nexport const VACATION_WITHOUT_MIN_MINMAX_TIPS = `Допустимая длина 0-${VACATION_THIRD_PAD_TEXTFIELD_MAX_SYMBOLS} символов`\nexport const ACCELERATION_IN_POPUP_DATA = (patch) => ({\n  title: 'Переход в Акселерацию',\n  subtitle: 'Выбери дату, когда студент вступил в Акселерацию. Эти данные будут отображаться в DataLens',\n  datePickerText: 'Дата перехода в Акселерацию',\n  patch,\n})\n\nexport const ACCELERATION_OUT_POPUP_DATA = (patch) => ({\n  title: 'Выход из Акселерации',\n  subtitle: 'Выбери дату, когда студент вышел из Акселерации. Эти данные будут отображаться в DataLens',\n  datePickerText: 'Дата выхода из Акселерации',\n  patch,\n})\nexport const PHONE_REG_EXP = /^\\+?1?\\d{9,15}$/\nexport const API_SEARCH_RESPONSES = '/vacancies/lookup'\nexport const API_CONTACTS_SEVERAL_ENDPOINT = '/vacancies/contacts/several'\nexport const API_CONTACTS_ENDPOINT = '/vacancies/contacts'\nexport const API_CONTACTS_BY_ID_ENDPOINT = (id) => `${API_CONTACTS_ENDPOINT}/${id}`\nexport const ONLY_SPACES_REGEXP = /^\\s+$/\nexport const COVERS_EXAMPLE_LINK = 'https://praktikum.notion.site/1056a6e1e94a47808e0ba41115573616'\nexport const API_SEARCH_COURSES = '/dictionary/courses'\n// в миллисекундах\nexport const STATUS_CHECK_PERIOD = 300000\nexport const API_CONSULTANTS_STUDENT_STATISTICS = '/student-list-statistics'\nexport const API_COMPANIES_LIST = '/companies/company_list'\nexport const API_COMPANIES_STATUSES = '/directory/company-status'\nexport const API_COMPANY_EMPLOYED_STUDENT = (pk) => `companies/${pk}/students`\nexport const API_COMPANY_VACANCIES = (pk) => `companies/${pk}/vacancies`\nexport const API_COMPANY_ID = (pk) => `/companies/${pk}`\nexport const API_COMPANY = '/companies'\nexport const API_HR_SHOWED_NOTIFICATIONS = '/realtime-notification/showed_list'\nexport const API_HR_NOT_SHOWED_NOTIFICATIONS = '/realtime-notification/not_showed_list'\nexport const API_HR_ID_NOTIFICATION = (id) => `/realtime-notification/${id}`\nexport const API_HR_ALL_NOTIFICATIONS = '/realtime-notification/showed_all'\nexport const API_HR_DELETE_SHOWED_NOTIFICATIONS = '/realtime-notification/delete_showed'\nexport const RUSSIAN_URL_REGEX =\n  // /^((http|https):\\/\\/)?[a-zа-я0-9]+([\\-\\.]{1}[a-zа-я0-9]+)*\\.[a-zа-я]{2,5}(:[0-9]{1,5})?(\\/.*)?$/i // eslint-disable-line\n  /^$|((https?):\\/\\/)?(www.)?[a-zа-яё0-9]+(\\.[a-zа-яё]{2,}){1,3}(#?\\/?[a-zа-яёA-Z0-9#]+)*\\/?(\\?[a-zа-яёA-Z0-9-_]+=[a-zа-яёA-Z0-9-%]+&?)?.*$/\nexport const API_VACANCY_SOURCE = '/directory/vacancy-source'\nexport const API_COMPANY_DRAFT_ENDPOINT = '/companies/create_draft'\nexport const API_VACANCIES_EXPORT = '/download-vacancy'\nexport const API_COMPANIES_EXPORT = '/company-downloader'\n"],"sourceRoot":""}